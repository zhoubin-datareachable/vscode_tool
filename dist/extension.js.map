{"version":3,"file":"extension.js","mappings":"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AoBA,IACpB,KACA,qHACA,kFACA,oCACA,mHACA,6GACA,uEACA,2GACA,sHACA,kCACA,yGACA,uFACA,uGACA,6GACA,mFACA,2GACA,4GACA,0FACA,0GACA,WACA,QACA,SACA,KACA,KACA,qBACA,qHAGW,EAAA2c,eAAiB,CAACC,EAAgBC,IACtCH,EACJ/5B,KAAK,MACLD,QAAQ,OAAQk6B,GAChBl6B,QAAQ,OAAQm6B,GAGrB,MAAMC,EAAmB,CACvB,MACA,UACA,WAAW9c,IACX,eACA,oBAAoBA,IACpB,KACA,qHACA,kFACA,oCACA,qEACA,mHACA,6GACA,uEACA,sBACA,iCACA,IACA,2GACA,sHACA,sEACA,yGACA,uFACA,uGACA,6GACA,mFACA,2GACA,4GACA,0FACA,iBACA,gCACA,SACA,KACA,0GACA,WACA,6CACA,uDACA,0CACA,uBACA,mCACA,kCACA,8BACA,kCACA,kCACA,0CACA,kBACA,uBACA,mCACA,mCACA,gCACA,kCACA,kCACA,2CACA,kBACA,kBACA,cACA,MACA,KACA,qBACA,qHAGW,EAAA+c,oBAAsB,CAACH,EAAgBC,IAC3CC,EACJn6B,KAAK,MACLD,QAAQ,OAAQk6B,GAChBl6B,QAAQ,OAAQm6B,GAChBn6B,QAAQ,QAAQ,IAAAs6B,YAAWH,K,gHCjHhC,gBAIM7c,GAAO,EAHb,QAGayc,gBAAe,KAEtBQ,EAAe,CACnB,MACA,UACA,WAAWjd,IACX,eACA,oBAAoBA,IACpB,KACA,mHACA,2DACA,wCACA,kCACA,mCACA,iHACA,kHACA,qCACA,iBACA,gHACA,8EACA,+EAGW,EAAAkd,gBAAmBN,GACvBK,EAAat6B,KAAK,MAAMD,QAAQ,OAAQk6B,GAGjD,MAAMO,EAAoB,CACxB,MACA,UACA,WAAWnd,IACX,eACA,oBAAoBA,IACpB,KACA,mHACA,2DACA,wCACA,kCACA,mCACA,iHACA,kHACA,qCACA,iBACA,gHACA,8EACA,kBACA,wBACA,4BACA,kBACA,qBACA,IACA,cACA,sBACA,2BACA,IACA,YACA,0BACA,sBACA,qBACA,eACA,6BAC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","sources":["webpack://react-tool/./node_modules/nodemailer/lib/addressparser/index.js","webpack://react-tool/./node_modules/nodemailer/lib/base64/index.js","webpack://react-tool/./node_modules/nodemailer/lib/dkim/index.js","webpack://react-tool/./node_modules/nodemailer/lib/dkim/message-parser.js","webpack://react-tool/./node_modules/nodemailer/lib/dkim/relaxed-body.js","webpack://react-tool/./node_modules/nodemailer/lib/dkim/sign.js","webpack://react-tool/./node_modules/nodemailer/lib/fetch/cookies.js","webpack://react-tool/./node_modules/nodemailer/lib/fetch/index.js","webpack://react-tool/./node_modules/nodemailer/lib/json-transport/index.js","webpack://react-tool/./node_modules/nodemailer/lib/mail-composer/index.js","webpack://react-tool/./node_modules/nodemailer/lib/mailer/index.js","webpack://react-tool/./node_modules/nodemailer/lib/mailer/mail-message.js","webpack://react-tool/./node_modules/nodemailer/lib/mime-funcs/index.js","webpack://react-tool/./node_modules/nodemailer/lib/mime-funcs/mime-types.js","webpack://react-tool/./node_modules/nodemailer/lib/mime-node/index.js","webpack://react-tool/./node_modules/nodemailer/lib/mime-node/last-newline.js","webpack://react-tool/./node_modules/nodemailer/lib/mime-node/le-unix.js","webpack://react-tool/./node_modules/nodemailer/lib/mime-node/le-windows.js","webpack://react-tool/./node_modules/nodemailer/lib/nodemailer.js","webpack://react-tool/./node_modules/nodemailer/lib/qp/index.js","webpack://react-tool/./node_modules/nodemailer/lib/sendmail-transport/index.js","webpack://react-tool/./node_modules/nodemailer/lib/ses-transport/index.js","webpack://react-tool/./node_modules/nodemailer/lib/shared/index.js","webpack://react-tool/./node_modules/nodemailer/lib/smtp-connection/data-stream.js","webpack://react-tool/./node_modules/nodemailer/lib/smtp-connection/http-proxy-client.js","webpack://react-tool/./node_modules/nodemailer/lib/smtp-connection/index.js","webpack://react-tool/./node_modules/nodemailer/lib/smtp-pool/index.js","webpack://react-tool/./node_modules/nodemailer/lib/smtp-pool/pool-resource.js","webpack://react-tool/./node_modules/nodemailer/lib/smtp-transport/index.js","webpack://react-tool/./node_modules/nodemailer/lib/stream-transport/index.js","webpack://react-tool/./node_modules/nodemailer/lib/well-known/index.js","webpack://react-tool/./node_modules/nodemailer/lib/xoauth2/index.js","webpack://react-tool/./src/config/commit-input.ts","webpack://react-tool/./src/config/commit-type.ts","webpack://react-tool/./src/config/jsx-template.ts","webpack://react-tool/./src/config/scss-template.ts","webpack://react-tool/./src/util/file.ts","webpack://react-tool/./src/util/sendEmail.ts","webpack://react-tool/./src/util/str.ts","webpack://react-tool/./src/util/time.ts","webpack://react-tool/external commonjs \"vscode\"","webpack://react-tool/external node-commonjs \"child_process\"","webpack://react-tool/external node-commonjs \"crypto\"","webpack://react-tool/external node-commonjs \"dns\"","webpack://react-tool/external node-commonjs \"events\"","webpack://react-tool/external node-commonjs \"fs\"","webpack://react-tool/external node-commonjs \"http\"","webpack://react-tool/external node-commonjs \"https\"","webpack://react-tool/external node-commonjs \"net\"","webpack://react-tool/external node-commonjs \"os\"","webpack://react-tool/external node-commonjs \"path\"","webpack://react-tool/external node-commonjs \"punycode\"","webpack://react-tool/external node-commonjs \"stream\"","webpack://react-tool/external node-commonjs \"tls\"","webpack://react-tool/external node-commonjs \"url\"","webpack://react-tool/external node-commonjs \"util\"","webpack://react-tool/external node-commonjs \"zlib\"","webpack://react-tool/webpack/bootstrap","webpack://react-tool/./src/extension.ts"],"sourcesContent":["'use strict';\n\n/**\n * Converts tokens for a single address into an address object\n *\n * @param {Array} tokens Tokens object\n * @return {Object} Address object\n */\nfunction _handleAddress(tokens) {\n    let token;\n    let isGroup = false;\n    let state = 'text';\n    let address;\n    let addresses = [];\n    let data = {\n        address: [],\n        comment: [],\n        group: [],\n        text: []\n    };\n    let i;\n    let len;\n\n    // Filter out <addresses>, (comments) and regular text\n    for (i = 0, len = tokens.length; i < len; i++) {\n        token = tokens[i];\n        if (token.type === 'operator') {\n            switch (token.value) {\n                case '<':\n                    state = 'address';\n                    break;\n                case '(':\n                    state = 'comment';\n                    break;\n                case ':':\n                    state = 'group';\n                    isGroup = true;\n                    break;\n                default:\n                    state = 'text';\n            }\n        } else if (token.value) {\n            if (state === 'address') {\n                // handle use case where unquoted name includes a \"<\"\n                // Apple Mail truncates everything between an unexpected < and an address\n                // and so will we\n                token.value = token.value.replace(/^[^<]*<\\s*/, '');\n            }\n            data[state].push(token.value);\n        }\n    }\n\n    // If there is no text but a comment, replace the two\n    if (!data.text.length && data.comment.length) {\n        data.text = data.comment;\n        data.comment = [];\n    }\n\n    if (isGroup) {\n        // http://tools.ietf.org/html/rfc2822#appendix-A.1.3\n        data.text = data.text.join(' ');\n        addresses.push({\n            name: data.text || (address && address.name),\n            group: data.group.length ? addressparser(data.group.join(',')) : []\n        });\n    } else {\n        // If no address was found, try to detect one from regular text\n        if (!data.address.length && data.text.length) {\n            for (i = data.text.length - 1; i >= 0; i--) {\n                if (data.text[i].match(/^[^@\\s]+@[^@\\s]+$/)) {\n                    data.address = data.text.splice(i, 1);\n                    break;\n                }\n            }\n\n            let _regexHandler = function (address) {\n                if (!data.address.length) {\n                    data.address = [address.trim()];\n                    return ' ';\n                } else {\n                    return address;\n                }\n            };\n\n            // still no address\n            if (!data.address.length) {\n                for (i = data.text.length - 1; i >= 0; i--) {\n                    // fixed the regex to parse email address correctly when email address has more than one @\n                    data.text[i] = data.text[i].replace(/\\s*\\b[^@\\s]+@[^\\s]+\\b\\s*/, _regexHandler).trim();\n                    if (data.address.length) {\n                        break;\n                    }\n                }\n            }\n        }\n\n        // If there's still is no text but a comment exixts, replace the two\n        if (!data.text.length && data.comment.length) {\n            data.text = data.comment;\n            data.comment = [];\n        }\n\n        // Keep only the first address occurence, push others to regular text\n        if (data.address.length > 1) {\n            data.text = data.text.concat(data.address.splice(1));\n        }\n\n        // Join values with spaces\n        data.text = data.text.join(' ');\n        data.address = data.address.join(' ');\n\n        if (!data.address && isGroup) {\n            return [];\n        } else {\n            address = {\n                address: data.address || data.text || '',\n                name: data.text || data.address || ''\n            };\n\n            if (address.address === address.name) {\n                if ((address.address || '').match(/@/)) {\n                    address.name = '';\n                } else {\n                    address.address = '';\n                }\n            }\n\n            addresses.push(address);\n        }\n    }\n\n    return addresses;\n}\n\n/**\n * Creates a Tokenizer object for tokenizing address field strings\n *\n * @constructor\n * @param {String} str Address field string\n */\nclass Tokenizer {\n    constructor(str) {\n        this.str = (str || '').toString();\n        this.operatorCurrent = '';\n        this.operatorExpecting = '';\n        this.node = null;\n        this.escaped = false;\n\n        this.list = [];\n        /**\n         * Operator tokens and which tokens are expected to end the sequence\n         */\n        this.operators = {\n            '\"': '\"',\n            '(': ')',\n            '<': '>',\n            ',': '',\n            ':': ';',\n            // Semicolons are not a legal delimiter per the RFC2822 grammar other\n            // than for terminating a group, but they are also not valid for any\n            // other use in this context.  Given that some mail clients have\n            // historically allowed the semicolon as a delimiter equivalent to the\n            // comma in their UI, it makes sense to treat them the same as a comma\n            // when used outside of a group.\n            ';': ''\n        };\n    }\n\n    /**\n     * Tokenizes the original input string\n     *\n     * @return {Array} An array of operator|text tokens\n     */\n    tokenize() {\n        let chr,\n            list = [];\n        for (let i = 0, len = this.str.length; i < len; i++) {\n            chr = this.str.charAt(i);\n            this.checkChar(chr);\n        }\n\n        this.list.forEach(node => {\n            node.value = (node.value || '').toString().trim();\n            if (node.value) {\n                list.push(node);\n            }\n        });\n\n        return list;\n    }\n\n    /**\n     * Checks if a character is an operator or text and acts accordingly\n     *\n     * @param {String} chr Character from the address field\n     */\n    checkChar(chr) {\n        if (this.escaped) {\n            // ignore next condition blocks\n        } else if (chr === this.operatorExpecting) {\n            this.node = {\n                type: 'operator',\n                value: chr\n            };\n            this.list.push(this.node);\n            this.node = null;\n            this.operatorExpecting = '';\n            this.escaped = false;\n            return;\n        } else if (!this.operatorExpecting && chr in this.operators) {\n            this.node = {\n                type: 'operator',\n                value: chr\n            };\n            this.list.push(this.node);\n            this.node = null;\n            this.operatorExpecting = this.operators[chr];\n            this.escaped = false;\n            return;\n        } else if (['\"', \"'\"].includes(this.operatorExpecting) && chr === '\\\\') {\n            this.escaped = true;\n            return;\n        }\n\n        if (!this.node) {\n            this.node = {\n                type: 'text',\n                value: ''\n            };\n            this.list.push(this.node);\n        }\n\n        if (chr === '\\n') {\n            // Convert newlines to spaces. Carriage return is ignored as \\r and \\n usually\n            // go together anyway and there already is a WS for \\n. Lone \\r means something is fishy.\n            chr = ' ';\n        }\n\n        if (chr.charCodeAt(0) >= 0x21 || [' ', '\\t'].includes(chr)) {\n            // skip command bytes\n            this.node.value += chr;\n        }\n\n        this.escaped = false;\n    }\n}\n\n/**\n * Parses structured e-mail addresses from an address field\n *\n * Example:\n *\n *    'Name <address@domain>'\n *\n * will be converted to\n *\n *     [{name: 'Name', address: 'address@domain'}]\n *\n * @param {String} str Address field\n * @return {Array} An array of address objects\n */\nfunction addressparser(str, options) {\n    options = options || {};\n\n    let tokenizer = new Tokenizer(str);\n    let tokens = tokenizer.tokenize();\n\n    let addresses = [];\n    let address = [];\n    let parsedAddresses = [];\n\n    tokens.forEach(token => {\n        if (token.type === 'operator' && (token.value === ',' || token.value === ';')) {\n            if (address.length) {\n                addresses.push(address);\n            }\n            address = [];\n        } else {\n            address.push(token);\n        }\n    });\n\n    if (address.length) {\n        addresses.push(address);\n    }\n\n    addresses.forEach(address => {\n        address = _handleAddress(address);\n        if (address.length) {\n            parsedAddresses = parsedAddresses.concat(address);\n        }\n    });\n\n    if (options.flatten) {\n        let addresses = [];\n        let walkAddressList = list => {\n            list.forEach(address => {\n                if (address.group) {\n                    return walkAddressList(address.group);\n                } else {\n                    addresses.push(address);\n                }\n            });\n        };\n        walkAddressList(parsedAddresses);\n        return addresses;\n    }\n\n    return parsedAddresses;\n}\n\n// expose to the world\nmodule.exports = addressparser;\n","'use strict';\n\nconst Transform = require('stream').Transform;\n\n/**\n * Encodes a Buffer into a base64 encoded string\n *\n * @param {Buffer} buffer Buffer to convert\n * @returns {String} base64 encoded string\n */\nfunction encode(buffer) {\n    if (typeof buffer === 'string') {\n        buffer = Buffer.from(buffer, 'utf-8');\n    }\n\n    return buffer.toString('base64');\n}\n\n/**\n * Adds soft line breaks to a base64 string\n *\n * @param {String} str base64 encoded string that might need line wrapping\n * @param {Number} [lineLength=76] Maximum allowed length for a line\n * @returns {String} Soft-wrapped base64 encoded string\n */\nfunction wrap(str, lineLength) {\n    str = (str || '').toString();\n    lineLength = lineLength || 76;\n\n    if (str.length <= lineLength) {\n        return str;\n    }\n\n    let result = [];\n    let pos = 0;\n    let chunkLength = lineLength * 1024;\n    while (pos < str.length) {\n        let wrappedLines = str\n            .substr(pos, chunkLength)\n            .replace(new RegExp('.{' + lineLength + '}', 'g'), '$&\\r\\n')\n            .trim();\n        result.push(wrappedLines);\n        pos += chunkLength;\n    }\n\n    return result.join('\\r\\n').trim();\n}\n\n/**\n * Creates a transform stream for encoding data to base64 encoding\n *\n * @constructor\n * @param {Object} options Stream options\n * @param {Number} [options.lineLength=76] Maximum lenght for lines, set to false to disable wrapping\n */\nclass Encoder extends Transform {\n    constructor(options) {\n        super();\n        // init Transform\n        this.options = options || {};\n\n        if (this.options.lineLength !== false) {\n            this.options.lineLength = this.options.lineLength || 76;\n        }\n\n        this._curLine = '';\n        this._remainingBytes = false;\n\n        this.inputBytes = 0;\n        this.outputBytes = 0;\n    }\n\n    _transform(chunk, encoding, done) {\n        if (encoding !== 'buffer') {\n            chunk = Buffer.from(chunk, encoding);\n        }\n\n        if (!chunk || !chunk.length) {\n            return setImmediate(done);\n        }\n\n        this.inputBytes += chunk.length;\n\n        if (this._remainingBytes && this._remainingBytes.length) {\n            chunk = Buffer.concat([this._remainingBytes, chunk], this._remainingBytes.length + chunk.length);\n            this._remainingBytes = false;\n        }\n\n        if (chunk.length % 3) {\n            this._remainingBytes = chunk.slice(chunk.length - (chunk.length % 3));\n            chunk = chunk.slice(0, chunk.length - (chunk.length % 3));\n        } else {\n            this._remainingBytes = false;\n        }\n\n        let b64 = this._curLine + encode(chunk);\n\n        if (this.options.lineLength) {\n            b64 = wrap(b64, this.options.lineLength);\n\n            // remove last line as it is still most probably incomplete\n            let lastLF = b64.lastIndexOf('\\n');\n            if (lastLF < 0) {\n                this._curLine = b64;\n                b64 = '';\n            } else if (lastLF === b64.length - 1) {\n                this._curLine = '';\n            } else {\n                this._curLine = b64.substr(lastLF + 1);\n                b64 = b64.substr(0, lastLF + 1);\n            }\n        }\n\n        if (b64) {\n            this.outputBytes += b64.length;\n            this.push(Buffer.from(b64, 'ascii'));\n        }\n\n        setImmediate(done);\n    }\n\n    _flush(done) {\n        if (this._remainingBytes && this._remainingBytes.length) {\n            this._curLine += encode(this._remainingBytes);\n        }\n\n        if (this._curLine) {\n            this._curLine = wrap(this._curLine, this.options.lineLength);\n            this.outputBytes += this._curLine.length;\n            this.push(this._curLine, 'ascii');\n            this._curLine = '';\n        }\n        done();\n    }\n}\n\n// expose to the world\nmodule.exports = {\n    encode,\n    wrap,\n    Encoder\n};\n","'use strict';\n\n// FIXME:\n// replace this Transform mess with a method that pipes input argument to output argument\n\nconst MessageParser = require('./message-parser');\nconst RelaxedBody = require('./relaxed-body');\nconst sign = require('./sign');\nconst PassThrough = require('stream').PassThrough;\nconst fs = require('fs');\nconst path = require('path');\nconst crypto = require('crypto');\n\nconst DKIM_ALGO = 'sha256';\nconst MAX_MESSAGE_SIZE = 128 * 1024; // buffer messages larger than this to disk\n\n/*\n// Usage:\n\nlet dkim = new DKIM({\n    domainName: 'example.com',\n    keySelector: 'key-selector',\n    privateKey,\n    cacheDir: '/tmp'\n});\ndkim.sign(input).pipe(process.stdout);\n\n// Where inputStream is a rfc822 message (either a stream, string or Buffer)\n// and outputStream is a DKIM signed rfc822 message\n*/\n\nclass DKIMSigner {\n    constructor(options, keys, input, output) {\n        this.options = options || {};\n        this.keys = keys;\n\n        this.cacheTreshold = Number(this.options.cacheTreshold) || MAX_MESSAGE_SIZE;\n        this.hashAlgo = this.options.hashAlgo || DKIM_ALGO;\n\n        this.cacheDir = this.options.cacheDir || false;\n\n        this.chunks = [];\n        this.chunklen = 0;\n        this.readPos = 0;\n        this.cachePath = this.cacheDir ? path.join(this.cacheDir, 'message.' + Date.now() + '-' + crypto.randomBytes(14).toString('hex')) : false;\n        this.cache = false;\n\n        this.headers = false;\n        this.bodyHash = false;\n        this.parser = false;\n        this.relaxedBody = false;\n\n        this.input = input;\n        this.output = output;\n        this.output.usingCache = false;\n\n        this.errored = false;\n\n        this.input.on('error', err => {\n            this.errored = true;\n            this.cleanup();\n            output.emit('error', err);\n        });\n    }\n\n    cleanup() {\n        if (!this.cache || !this.cachePath) {\n            return;\n        }\n        fs.unlink(this.cachePath, () => false);\n    }\n\n    createReadCache() {\n        // pipe remainings to cache file\n        this.cache = fs.createReadStream(this.cachePath);\n        this.cache.once('error', err => {\n            this.cleanup();\n            this.output.emit('error', err);\n        });\n        this.cache.once('close', () => {\n            this.cleanup();\n        });\n        this.cache.pipe(this.output);\n    }\n\n    sendNextChunk() {\n        if (this.errored) {\n            return;\n        }\n\n        if (this.readPos >= this.chunks.length) {\n            if (!this.cache) {\n                return this.output.end();\n            }\n            return this.createReadCache();\n        }\n        let chunk = this.chunks[this.readPos++];\n        if (this.output.write(chunk) === false) {\n            return this.output.once('drain', () => {\n                this.sendNextChunk();\n            });\n        }\n        setImmediate(() => this.sendNextChunk());\n    }\n\n    sendSignedOutput() {\n        let keyPos = 0;\n        let signNextKey = () => {\n            if (keyPos >= this.keys.length) {\n                this.output.write(this.parser.rawHeaders);\n                return setImmediate(() => this.sendNextChunk());\n            }\n            let key = this.keys[keyPos++];\n            let dkimField = sign(this.headers, this.hashAlgo, this.bodyHash, {\n                domainName: key.domainName,\n                keySelector: key.keySelector,\n                privateKey: key.privateKey,\n                headerFieldNames: this.options.headerFieldNames,\n                skipFields: this.options.skipFields\n            });\n            if (dkimField) {\n                this.output.write(Buffer.from(dkimField + '\\r\\n'));\n            }\n            return setImmediate(signNextKey);\n        };\n\n        if (this.bodyHash && this.headers) {\n            return signNextKey();\n        }\n\n        this.output.write(this.parser.rawHeaders);\n        this.sendNextChunk();\n    }\n\n    createWriteCache() {\n        this.output.usingCache = true;\n        // pipe remainings to cache file\n        this.cache = fs.createWriteStream(this.cachePath);\n        this.cache.once('error', err => {\n            this.cleanup();\n            // drain input\n            this.relaxedBody.unpipe(this.cache);\n            this.relaxedBody.on('readable', () => {\n                while (this.relaxedBody.read() !== null) {\n                    // do nothing\n                }\n            });\n            this.errored = true;\n            // emit error\n            this.output.emit('error', err);\n        });\n        this.cache.once('close', () => {\n            this.sendSignedOutput();\n        });\n        this.relaxedBody.removeAllListeners('readable');\n        this.relaxedBody.pipe(this.cache);\n    }\n\n    signStream() {\n        this.parser = new MessageParser();\n        this.relaxedBody = new RelaxedBody({\n            hashAlgo: this.hashAlgo\n        });\n\n        this.parser.on('headers', value => {\n            this.headers = value;\n        });\n\n        this.relaxedBody.on('hash', value => {\n            this.bodyHash = value;\n        });\n\n        this.relaxedBody.on('readable', () => {\n            let chunk;\n            if (this.cache) {\n                return;\n            }\n            while ((chunk = this.relaxedBody.read()) !== null) {\n                this.chunks.push(chunk);\n                this.chunklen += chunk.length;\n                if (this.chunklen >= this.cacheTreshold && this.cachePath) {\n                    return this.createWriteCache();\n                }\n            }\n        });\n\n        this.relaxedBody.on('end', () => {\n            if (this.cache) {\n                return;\n            }\n            this.sendSignedOutput();\n        });\n\n        this.parser.pipe(this.relaxedBody);\n        setImmediate(() => this.input.pipe(this.parser));\n    }\n}\n\nclass DKIM {\n    constructor(options) {\n        this.options = options || {};\n        this.keys = [].concat(\n            this.options.keys || {\n                domainName: options.domainName,\n                keySelector: options.keySelector,\n                privateKey: options.privateKey\n            }\n        );\n    }\n\n    sign(input, extraOptions) {\n        let output = new PassThrough();\n        let inputStream = input;\n        let writeValue = false;\n\n        if (Buffer.isBuffer(input)) {\n            writeValue = input;\n            inputStream = new PassThrough();\n        } else if (typeof input === 'string') {\n            writeValue = Buffer.from(input);\n            inputStream = new PassThrough();\n        }\n\n        let options = this.options;\n        if (extraOptions && Object.keys(extraOptions).length) {\n            options = {};\n            Object.keys(this.options || {}).forEach(key => {\n                options[key] = this.options[key];\n            });\n            Object.keys(extraOptions || {}).forEach(key => {\n                if (!(key in options)) {\n                    options[key] = extraOptions[key];\n                }\n            });\n        }\n\n        let signer = new DKIMSigner(options, this.keys, inputStream, output);\n        setImmediate(() => {\n            signer.signStream();\n            if (writeValue) {\n                setImmediate(() => {\n                    inputStream.end(writeValue);\n                });\n            }\n        });\n\n        return output;\n    }\n}\n\nmodule.exports = DKIM;\n","'use strict';\n\nconst Transform = require('stream').Transform;\n\n/**\n * MessageParser instance is a transform stream that separates message headers\n * from the rest of the body. Headers are emitted with the 'headers' event. Message\n * body is passed on as the resulting stream.\n */\nclass MessageParser extends Transform {\n    constructor(options) {\n        super(options);\n        this.lastBytes = Buffer.alloc(4);\n        this.headersParsed = false;\n        this.headerBytes = 0;\n        this.headerChunks = [];\n        this.rawHeaders = false;\n        this.bodySize = 0;\n    }\n\n    /**\n     * Keeps count of the last 4 bytes in order to detect line breaks on chunk boundaries\n     *\n     * @param {Buffer} data Next data chunk from the stream\n     */\n    updateLastBytes(data) {\n        let lblen = this.lastBytes.length;\n        let nblen = Math.min(data.length, lblen);\n\n        // shift existing bytes\n        for (let i = 0, len = lblen - nblen; i < len; i++) {\n            this.lastBytes[i] = this.lastBytes[i + nblen];\n        }\n\n        // add new bytes\n        for (let i = 1; i <= nblen; i++) {\n            this.lastBytes[lblen - i] = data[data.length - i];\n        }\n    }\n\n    /**\n     * Finds and removes message headers from the remaining body. We want to keep\n     * headers separated until final delivery to be able to modify these\n     *\n     * @param {Buffer} data Next chunk of data\n     * @return {Boolean} Returns true if headers are already found or false otherwise\n     */\n    checkHeaders(data) {\n        if (this.headersParsed) {\n            return true;\n        }\n\n        let lblen = this.lastBytes.length;\n        let headerPos = 0;\n        this.curLinePos = 0;\n        for (let i = 0, len = this.lastBytes.length + data.length; i < len; i++) {\n            let chr;\n            if (i < lblen) {\n                chr = this.lastBytes[i];\n            } else {\n                chr = data[i - lblen];\n            }\n            if (chr === 0x0a && i) {\n                let pr1 = i - 1 < lblen ? this.lastBytes[i - 1] : data[i - 1 - lblen];\n                let pr2 = i > 1 ? (i - 2 < lblen ? this.lastBytes[i - 2] : data[i - 2 - lblen]) : false;\n                if (pr1 === 0x0a) {\n                    this.headersParsed = true;\n                    headerPos = i - lblen + 1;\n                    this.headerBytes += headerPos;\n                    break;\n                } else if (pr1 === 0x0d && pr2 === 0x0a) {\n                    this.headersParsed = true;\n                    headerPos = i - lblen + 1;\n                    this.headerBytes += headerPos;\n                    break;\n                }\n            }\n        }\n\n        if (this.headersParsed) {\n            this.headerChunks.push(data.slice(0, headerPos));\n            this.rawHeaders = Buffer.concat(this.headerChunks, this.headerBytes);\n            this.headerChunks = null;\n            this.emit('headers', this.parseHeaders());\n            if (data.length - 1 > headerPos) {\n                let chunk = data.slice(headerPos);\n                this.bodySize += chunk.length;\n                // this would be the first chunk of data sent downstream\n                setImmediate(() => this.push(chunk));\n            }\n            return false;\n        } else {\n            this.headerBytes += data.length;\n            this.headerChunks.push(data);\n        }\n\n        // store last 4 bytes to catch header break\n        this.updateLastBytes(data);\n\n        return false;\n    }\n\n    _transform(chunk, encoding, callback) {\n        if (!chunk || !chunk.length) {\n            return callback();\n        }\n\n        if (typeof chunk === 'string') {\n            chunk = Buffer.from(chunk, encoding);\n        }\n\n        let headersFound;\n\n        try {\n            headersFound = this.checkHeaders(chunk);\n        } catch (E) {\n            return callback(E);\n        }\n\n        if (headersFound) {\n            this.bodySize += chunk.length;\n            this.push(chunk);\n        }\n\n        setImmediate(callback);\n    }\n\n    _flush(callback) {\n        if (this.headerChunks) {\n            let chunk = Buffer.concat(this.headerChunks, this.headerBytes);\n            this.bodySize += chunk.length;\n            this.push(chunk);\n            this.headerChunks = null;\n        }\n        callback();\n    }\n\n    parseHeaders() {\n        let lines = (this.rawHeaders || '').toString().split(/\\r?\\n/);\n        for (let i = lines.length - 1; i > 0; i--) {\n            if (/^\\s/.test(lines[i])) {\n                lines[i - 1] += '\\n' + lines[i];\n                lines.splice(i, 1);\n            }\n        }\n        return lines\n            .filter(line => line.trim())\n            .map(line => ({\n                key: line.substr(0, line.indexOf(':')).trim().toLowerCase(),\n                line\n            }));\n    }\n}\n\nmodule.exports = MessageParser;\n","'use strict';\n\n// streams through a message body and calculates relaxed body hash\n\nconst Transform = require('stream').Transform;\nconst crypto = require('crypto');\n\nclass RelaxedBody extends Transform {\n    constructor(options) {\n        super();\n        options = options || {};\n        this.chunkBuffer = [];\n        this.chunkBufferLen = 0;\n        this.bodyHash = crypto.createHash(options.hashAlgo || 'sha1');\n        this.remainder = '';\n        this.byteLength = 0;\n\n        this.debug = options.debug;\n        this._debugBody = options.debug ? [] : false;\n    }\n\n    updateHash(chunk) {\n        let bodyStr;\n\n        // find next remainder\n        let nextRemainder = '';\n\n        // This crux finds and removes the spaces from the last line and the newline characters after the last non-empty line\n        // If we get another chunk that does not match this description then we can restore the previously processed data\n        let state = 'file';\n        for (let i = chunk.length - 1; i >= 0; i--) {\n            let c = chunk[i];\n\n            if (state === 'file' && (c === 0x0a || c === 0x0d)) {\n                // do nothing, found \\n or \\r at the end of chunk, stil end of file\n            } else if (state === 'file' && (c === 0x09 || c === 0x20)) {\n                // switch to line ending mode, this is the last non-empty line\n                state = 'line';\n            } else if (state === 'line' && (c === 0x09 || c === 0x20)) {\n                // do nothing, found ' ' or \\t at the end of line, keep processing the last non-empty line\n            } else if (state === 'file' || state === 'line') {\n                // non line/file ending character found, switch to body mode\n                state = 'body';\n                if (i === chunk.length - 1) {\n                    // final char is not part of line end or file end, so do nothing\n                    break;\n                }\n            }\n\n            if (i === 0) {\n                // reached to the beginning of the chunk, check if it is still about the ending\n                // and if the remainder also matches\n                if (\n                    (state === 'file' && (!this.remainder || /[\\r\\n]$/.test(this.remainder))) ||\n                    (state === 'line' && (!this.remainder || /[ \\t]$/.test(this.remainder)))\n                ) {\n                    // keep everything\n                    this.remainder += chunk.toString('binary');\n                    return;\n                } else if (state === 'line' || state === 'file') {\n                    // process existing remainder as normal line but store the current chunk\n                    nextRemainder = chunk.toString('binary');\n                    chunk = false;\n                    break;\n                }\n            }\n\n            if (state !== 'body') {\n                continue;\n            }\n\n            // reached first non ending byte\n            nextRemainder = chunk.slice(i + 1).toString('binary');\n            chunk = chunk.slice(0, i + 1);\n            break;\n        }\n\n        let needsFixing = !!this.remainder;\n        if (chunk && !needsFixing) {\n            // check if we even need to change anything\n            for (let i = 0, len = chunk.length; i < len; i++) {\n                if (i && chunk[i] === 0x0a && chunk[i - 1] !== 0x0d) {\n                    // missing \\r before \\n\n                    needsFixing = true;\n                    break;\n                } else if (i && chunk[i] === 0x0d && chunk[i - 1] === 0x20) {\n                    // trailing WSP found\n                    needsFixing = true;\n                    break;\n                } else if (i && chunk[i] === 0x20 && chunk[i - 1] === 0x20) {\n                    // multiple spaces found, needs to be replaced with just one\n                    needsFixing = true;\n                    break;\n                } else if (chunk[i] === 0x09) {\n                    // TAB found, needs to be replaced with a space\n                    needsFixing = true;\n                    break;\n                }\n            }\n        }\n\n        if (needsFixing) {\n            bodyStr = this.remainder + (chunk ? chunk.toString('binary') : '');\n            this.remainder = nextRemainder;\n            bodyStr = bodyStr\n                .replace(/\\r?\\n/g, '\\n') // use js line endings\n                .replace(/[ \\t]*$/gm, '') // remove line endings, rtrim\n                .replace(/[ \\t]+/gm, ' ') // single spaces\n                .replace(/\\n/g, '\\r\\n'); // restore rfc822 line endings\n            chunk = Buffer.from(bodyStr, 'binary');\n        } else if (nextRemainder) {\n            this.remainder = nextRemainder;\n        }\n\n        if (this.debug) {\n            this._debugBody.push(chunk);\n        }\n        this.bodyHash.update(chunk);\n    }\n\n    _transform(chunk, encoding, callback) {\n        if (!chunk || !chunk.length) {\n            return callback();\n        }\n\n        if (typeof chunk === 'string') {\n            chunk = Buffer.from(chunk, encoding);\n        }\n\n        this.updateHash(chunk);\n\n        this.byteLength += chunk.length;\n        this.push(chunk);\n        callback();\n    }\n\n    _flush(callback) {\n        // generate final hash and emit it\n        if (/[\\r\\n]$/.test(this.remainder) && this.byteLength > 2) {\n            // add terminating line end\n            this.bodyHash.update(Buffer.from('\\r\\n'));\n        }\n        if (!this.byteLength) {\n            // emit empty line buffer to keep the stream flowing\n            this.push(Buffer.from('\\r\\n'));\n            // this.bodyHash.update(Buffer.from('\\r\\n'));\n        }\n\n        this.emit('hash', this.bodyHash.digest('base64'), this.debug ? Buffer.concat(this._debugBody) : false);\n        callback();\n    }\n}\n\nmodule.exports = RelaxedBody;\n","'use strict';\n\nconst punycode = require('punycode');\nconst mimeFuncs = require('../mime-funcs');\nconst crypto = require('crypto');\n\n/**\n * Returns DKIM signature header line\n *\n * @param {Object} headers Parsed headers object from MessageParser\n * @param {String} bodyHash Base64 encoded hash of the message\n * @param {Object} options DKIM options\n * @param {String} options.domainName Domain name to be signed for\n * @param {String} options.keySelector DKIM key selector to use\n * @param {String} options.privateKey DKIM private key to use\n * @return {String} Complete header line\n */\n\nmodule.exports = (headers, hashAlgo, bodyHash, options) => {\n    options = options || {};\n\n    // all listed fields from RFC4871 #5.5\n    let defaultFieldNames =\n        'From:Sender:Reply-To:Subject:Date:Message-ID:To:' +\n        'Cc:MIME-Version:Content-Type:Content-Transfer-Encoding:Content-ID:' +\n        'Content-Description:Resent-Date:Resent-From:Resent-Sender:' +\n        'Resent-To:Resent-Cc:Resent-Message-ID:In-Reply-To:References:' +\n        'List-Id:List-Help:List-Unsubscribe:List-Subscribe:List-Post:' +\n        'List-Owner:List-Archive';\n\n    let fieldNames = options.headerFieldNames || defaultFieldNames;\n\n    let canonicalizedHeaderData = relaxedHeaders(headers, fieldNames, options.skipFields);\n    let dkimHeader = generateDKIMHeader(options.domainName, options.keySelector, canonicalizedHeaderData.fieldNames, hashAlgo, bodyHash);\n\n    let signer, signature;\n\n    canonicalizedHeaderData.headers += 'dkim-signature:' + relaxedHeaderLine(dkimHeader);\n\n    signer = crypto.createSign(('rsa-' + hashAlgo).toUpperCase());\n    signer.update(canonicalizedHeaderData.headers);\n    try {\n        signature = signer.sign(options.privateKey, 'base64');\n    } catch (E) {\n        return false;\n    }\n\n    return dkimHeader + signature.replace(/(^.{73}|.{75}(?!\\r?\\n|\\r))/g, '$&\\r\\n ').trim();\n};\n\nmodule.exports.relaxedHeaders = relaxedHeaders;\n\nfunction generateDKIMHeader(domainName, keySelector, fieldNames, hashAlgo, bodyHash) {\n    let dkim = [\n        'v=1',\n        'a=rsa-' + hashAlgo,\n        'c=relaxed/relaxed',\n        'd=' + punycode.toASCII(domainName),\n        'q=dns/txt',\n        's=' + keySelector,\n        'bh=' + bodyHash,\n        'h=' + fieldNames\n    ].join('; ');\n\n    return mimeFuncs.foldLines('DKIM-Signature: ' + dkim, 76) + ';\\r\\n b=';\n}\n\nfunction relaxedHeaders(headers, fieldNames, skipFields) {\n    let includedFields = new Set();\n    let skip = new Set();\n    let headerFields = new Map();\n\n    (skipFields || '')\n        .toLowerCase()\n        .split(':')\n        .forEach(field => {\n            skip.add(field.trim());\n        });\n\n    (fieldNames || '')\n        .toLowerCase()\n        .split(':')\n        .filter(field => !skip.has(field.trim()))\n        .forEach(field => {\n            includedFields.add(field.trim());\n        });\n\n    for (let i = headers.length - 1; i >= 0; i--) {\n        let line = headers[i];\n        // only include the first value from bottom to top\n        if (includedFields.has(line.key) && !headerFields.has(line.key)) {\n            headerFields.set(line.key, relaxedHeaderLine(line.line));\n        }\n    }\n\n    let headersList = [];\n    let fields = [];\n    includedFields.forEach(field => {\n        if (headerFields.has(field)) {\n            fields.push(field);\n            headersList.push(field + ':' + headerFields.get(field));\n        }\n    });\n\n    return {\n        headers: headersList.join('\\r\\n') + '\\r\\n',\n        fieldNames: fields.join(':')\n    };\n}\n\nfunction relaxedHeaderLine(line) {\n    return line\n        .substr(line.indexOf(':') + 1)\n        .replace(/\\r?\\n/g, '')\n        .replace(/\\s+/g, ' ')\n        .trim();\n}\n","'use strict';\n\n// module to handle cookies\n\nconst urllib = require('url');\n\nconst SESSION_TIMEOUT = 1800; // 30 min\n\n/**\n * Creates a biskviit cookie jar for managing cookie values in memory\n *\n * @constructor\n * @param {Object} [options] Optional options object\n */\nclass Cookies {\n    constructor(options) {\n        this.options = options || {};\n        this.cookies = [];\n    }\n\n    /**\n     * Stores a cookie string to the cookie storage\n     *\n     * @param {String} cookieStr Value from the 'Set-Cookie:' header\n     * @param {String} url Current URL\n     */\n    set(cookieStr, url) {\n        let urlparts = urllib.parse(url || '');\n        let cookie = this.parse(cookieStr);\n        let domain;\n\n        if (cookie.domain) {\n            domain = cookie.domain.replace(/^\\./, '');\n\n            // do not allow cross origin cookies\n            if (\n                // can't be valid if the requested domain is shorter than current hostname\n                urlparts.hostname.length < domain.length ||\n                // prefix domains with dot to be sure that partial matches are not used\n                ('.' + urlparts.hostname).substr(-domain.length + 1) !== '.' + domain\n            ) {\n                cookie.domain = urlparts.hostname;\n            }\n        } else {\n            cookie.domain = urlparts.hostname;\n        }\n\n        if (!cookie.path) {\n            cookie.path = this.getPath(urlparts.pathname);\n        }\n\n        // if no expire date, then use sessionTimeout value\n        if (!cookie.expires) {\n            cookie.expires = new Date(Date.now() + (Number(this.options.sessionTimeout || SESSION_TIMEOUT) || SESSION_TIMEOUT) * 1000);\n        }\n\n        return this.add(cookie);\n    }\n\n    /**\n     * Returns cookie string for the 'Cookie:' header.\n     *\n     * @param {String} url URL to check for\n     * @returns {String} Cookie header or empty string if no matches were found\n     */\n    get(url) {\n        return this.list(url)\n            .map(cookie => cookie.name + '=' + cookie.value)\n            .join('; ');\n    }\n\n    /**\n     * Lists all valied cookie objects for the specified URL\n     *\n     * @param {String} url URL to check for\n     * @returns {Array} An array of cookie objects\n     */\n    list(url) {\n        let result = [];\n        let i;\n        let cookie;\n\n        for (i = this.cookies.length - 1; i >= 0; i--) {\n            cookie = this.cookies[i];\n\n            if (this.isExpired(cookie)) {\n                this.cookies.splice(i, i);\n                continue;\n            }\n\n            if (this.match(cookie, url)) {\n                result.unshift(cookie);\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * Parses cookie string from the 'Set-Cookie:' header\n     *\n     * @param {String} cookieStr String from the 'Set-Cookie:' header\n     * @returns {Object} Cookie object\n     */\n    parse(cookieStr) {\n        let cookie = {};\n\n        (cookieStr || '')\n            .toString()\n            .split(';')\n            .forEach(cookiePart => {\n                let valueParts = cookiePart.split('=');\n                let key = valueParts.shift().trim().toLowerCase();\n                let value = valueParts.join('=').trim();\n                let domain;\n\n                if (!key) {\n                    // skip empty parts\n                    return;\n                }\n\n                switch (key) {\n                    case 'expires':\n                        value = new Date(value);\n                        // ignore date if can not parse it\n                        if (value.toString() !== 'Invalid Date') {\n                            cookie.expires = value;\n                        }\n                        break;\n\n                    case 'path':\n                        cookie.path = value;\n                        break;\n\n                    case 'domain':\n                        domain = value.toLowerCase();\n                        if (domain.length && domain.charAt(0) !== '.') {\n                            domain = '.' + domain; // ensure preceeding dot for user set domains\n                        }\n                        cookie.domain = domain;\n                        break;\n\n                    case 'max-age':\n                        cookie.expires = new Date(Date.now() + (Number(value) || 0) * 1000);\n                        break;\n\n                    case 'secure':\n                        cookie.secure = true;\n                        break;\n\n                    case 'httponly':\n                        cookie.httponly = true;\n                        break;\n\n                    default:\n                        if (!cookie.name) {\n                            cookie.name = key;\n                            cookie.value = value;\n                        }\n                }\n            });\n\n        return cookie;\n    }\n\n    /**\n     * Checks if a cookie object is valid for a specified URL\n     *\n     * @param {Object} cookie Cookie object\n     * @param {String} url URL to check for\n     * @returns {Boolean} true if cookie is valid for specifiec URL\n     */\n    match(cookie, url) {\n        let urlparts = urllib.parse(url || '');\n\n        // check if hostname matches\n        // .foo.com also matches subdomains, foo.com does not\n        if (\n            urlparts.hostname !== cookie.domain &&\n            (cookie.domain.charAt(0) !== '.' || ('.' + urlparts.hostname).substr(-cookie.domain.length) !== cookie.domain)\n        ) {\n            return false;\n        }\n\n        // check if path matches\n        let path = this.getPath(urlparts.pathname);\n        if (path.substr(0, cookie.path.length) !== cookie.path) {\n            return false;\n        }\n\n        // check secure argument\n        if (cookie.secure && urlparts.protocol !== 'https:') {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Adds (or updates/removes if needed) a cookie object to the cookie storage\n     *\n     * @param {Object} cookie Cookie value to be stored\n     */\n    add(cookie) {\n        let i;\n        let len;\n\n        // nothing to do here\n        if (!cookie || !cookie.name) {\n            return false;\n        }\n\n        // overwrite if has same params\n        for (i = 0, len = this.cookies.length; i < len; i++) {\n            if (this.compare(this.cookies[i], cookie)) {\n                // check if the cookie needs to be removed instead\n                if (this.isExpired(cookie)) {\n                    this.cookies.splice(i, 1); // remove expired/unset cookie\n                    return false;\n                }\n\n                this.cookies[i] = cookie;\n                return true;\n            }\n        }\n\n        // add as new if not already expired\n        if (!this.isExpired(cookie)) {\n            this.cookies.push(cookie);\n        }\n\n        return true;\n    }\n\n    /**\n     * Checks if two cookie objects are the same\n     *\n     * @param {Object} a Cookie to check against\n     * @param {Object} b Cookie to check against\n     * @returns {Boolean} True, if the cookies are the same\n     */\n    compare(a, b) {\n        return a.name === b.name && a.path === b.path && a.domain === b.domain && a.secure === b.secure && a.httponly === a.httponly;\n    }\n\n    /**\n     * Checks if a cookie is expired\n     *\n     * @param {Object} cookie Cookie object to check against\n     * @returns {Boolean} True, if the cookie is expired\n     */\n    isExpired(cookie) {\n        return (cookie.expires && cookie.expires < new Date()) || !cookie.value;\n    }\n\n    /**\n     * Returns normalized cookie path for an URL path argument\n     *\n     * @param {String} pathname\n     * @returns {String} Normalized path\n     */\n    getPath(pathname) {\n        let path = (pathname || '/').split('/');\n        path.pop(); // remove filename part\n        path = path.join('/').trim();\n\n        // ensure path prefix /\n        if (path.charAt(0) !== '/') {\n            path = '/' + path;\n        }\n\n        // ensure path suffix /\n        if (path.substr(-1) !== '/') {\n            path += '/';\n        }\n\n        return path;\n    }\n}\n\nmodule.exports = Cookies;\n","'use strict';\n\nconst http = require('http');\nconst https = require('https');\nconst urllib = require('url');\nconst zlib = require('zlib');\nconst PassThrough = require('stream').PassThrough;\nconst Cookies = require('./cookies');\nconst packageData = require('../../package.json');\n\nconst MAX_REDIRECTS = 5;\n\nmodule.exports = function (url, options) {\n    return fetch(url, options);\n};\n\nmodule.exports.Cookies = Cookies;\n\nfunction fetch(url, options) {\n    options = options || {};\n\n    options.fetchRes = options.fetchRes || new PassThrough();\n    options.cookies = options.cookies || new Cookies();\n    options.redirects = options.redirects || 0;\n    options.maxRedirects = isNaN(options.maxRedirects) ? MAX_REDIRECTS : options.maxRedirects;\n\n    if (options.cookie) {\n        [].concat(options.cookie || []).forEach(cookie => {\n            options.cookies.set(cookie, url);\n        });\n        options.cookie = false;\n    }\n\n    let fetchRes = options.fetchRes;\n    let parsed = urllib.parse(url);\n    let method = (options.method || '').toString().trim().toUpperCase() || 'GET';\n    let finished = false;\n    let cookies;\n    let body;\n\n    let handler = parsed.protocol === 'https:' ? https : http;\n\n    let headers = {\n        'accept-encoding': 'gzip,deflate',\n        'user-agent': 'nodemailer/' + packageData.version\n    };\n\n    Object.keys(options.headers || {}).forEach(key => {\n        headers[key.toLowerCase().trim()] = options.headers[key];\n    });\n\n    if (options.userAgent) {\n        headers['user-agent'] = options.userAgent;\n    }\n\n    if (parsed.auth) {\n        headers.Authorization = 'Basic ' + Buffer.from(parsed.auth).toString('base64');\n    }\n\n    if ((cookies = options.cookies.get(url))) {\n        headers.cookie = cookies;\n    }\n\n    if (options.body) {\n        if (options.contentType !== false) {\n            headers['Content-Type'] = options.contentType || 'application/x-www-form-urlencoded';\n        }\n\n        if (typeof options.body.pipe === 'function') {\n            // it's a stream\n            headers['Transfer-Encoding'] = 'chunked';\n            body = options.body;\n            body.on('error', err => {\n                if (finished) {\n                    return;\n                }\n                finished = true;\n                err.type = 'FETCH';\n                err.sourceUrl = url;\n                fetchRes.emit('error', err);\n            });\n        } else {\n            if (options.body instanceof Buffer) {\n                body = options.body;\n            } else if (typeof options.body === 'object') {\n                try {\n                    // encodeURIComponent can fail on invalid input (partial emoji etc.)\n                    body = Buffer.from(\n                        Object.keys(options.body)\n                            .map(key => {\n                                let value = options.body[key].toString().trim();\n                                return encodeURIComponent(key) + '=' + encodeURIComponent(value);\n                            })\n                            .join('&')\n                    );\n                } catch (E) {\n                    if (finished) {\n                        return;\n                    }\n                    finished = true;\n                    E.type = 'FETCH';\n                    E.sourceUrl = url;\n                    fetchRes.emit('error', E);\n                    return;\n                }\n            } else {\n                body = Buffer.from(options.body.toString().trim());\n            }\n\n            headers['Content-Type'] = options.contentType || 'application/x-www-form-urlencoded';\n            headers['Content-Length'] = body.length;\n        }\n        // if method is not provided, use POST instead of GET\n        method = (options.method || '').toString().trim().toUpperCase() || 'POST';\n    }\n\n    let req;\n    let reqOptions = {\n        method,\n        host: parsed.hostname,\n        path: parsed.path,\n        port: parsed.port ? parsed.port : parsed.protocol === 'https:' ? 443 : 80,\n        headers,\n        rejectUnauthorized: false,\n        agent: false\n    };\n\n    if (options.tls) {\n        Object.keys(options.tls).forEach(key => {\n            reqOptions[key] = options.tls[key];\n        });\n    }\n\n    try {\n        req = handler.request(reqOptions);\n    } catch (E) {\n        finished = true;\n        setImmediate(() => {\n            E.type = 'FETCH';\n            E.sourceUrl = url;\n            fetchRes.emit('error', E);\n        });\n        return fetchRes;\n    }\n\n    if (options.timeout) {\n        req.setTimeout(options.timeout, () => {\n            if (finished) {\n                return;\n            }\n            finished = true;\n            req.abort();\n            let err = new Error('Request Timeout');\n            err.type = 'FETCH';\n            err.sourceUrl = url;\n            fetchRes.emit('error', err);\n        });\n    }\n\n    req.on('error', err => {\n        if (finished) {\n            return;\n        }\n        finished = true;\n        err.type = 'FETCH';\n        err.sourceUrl = url;\n        fetchRes.emit('error', err);\n    });\n\n    req.on('response', res => {\n        let inflate;\n\n        if (finished) {\n            return;\n        }\n\n        switch (res.headers['content-encoding']) {\n            case 'gzip':\n            case 'deflate':\n                inflate = zlib.createUnzip();\n                break;\n        }\n\n        if (res.headers['set-cookie']) {\n            [].concat(res.headers['set-cookie'] || []).forEach(cookie => {\n                options.cookies.set(cookie, url);\n            });\n        }\n\n        if ([301, 302, 303, 307, 308].includes(res.statusCode) && res.headers.location) {\n            // redirect\n            options.redirects++;\n            if (options.redirects > options.maxRedirects) {\n                finished = true;\n                let err = new Error('Maximum redirect count exceeded');\n                err.type = 'FETCH';\n                err.sourceUrl = url;\n                fetchRes.emit('error', err);\n                req.abort();\n                return;\n            }\n            // redirect does not include POST body\n            options.method = 'GET';\n            options.body = false;\n            return fetch(urllib.resolve(url, res.headers.location), options);\n        }\n\n        fetchRes.statusCode = res.statusCode;\n        fetchRes.headers = res.headers;\n\n        if (res.statusCode >= 300 && !options.allowErrorResponse) {\n            finished = true;\n            let err = new Error('Invalid status code ' + res.statusCode);\n            err.type = 'FETCH';\n            err.sourceUrl = url;\n            fetchRes.emit('error', err);\n            req.abort();\n            return;\n        }\n\n        res.on('error', err => {\n            if (finished) {\n                return;\n            }\n            finished = true;\n            err.type = 'FETCH';\n            err.sourceUrl = url;\n            fetchRes.emit('error', err);\n            req.abort();\n        });\n\n        if (inflate) {\n            res.pipe(inflate).pipe(fetchRes);\n            inflate.on('error', err => {\n                if (finished) {\n                    return;\n                }\n                finished = true;\n                err.type = 'FETCH';\n                err.sourceUrl = url;\n                fetchRes.emit('error', err);\n                req.abort();\n            });\n        } else {\n            res.pipe(fetchRes);\n        }\n    });\n\n    setImmediate(() => {\n        if (body) {\n            try {\n                if (typeof body.pipe === 'function') {\n                    return body.pipe(req);\n                } else {\n                    req.write(body);\n                }\n            } catch (err) {\n                finished = true;\n                err.type = 'FETCH';\n                err.sourceUrl = url;\n                fetchRes.emit('error', err);\n                return;\n            }\n        }\n        req.end();\n    });\n\n    return fetchRes;\n}\n","'use strict';\n\nconst packageData = require('../../package.json');\nconst shared = require('../shared');\n\n/**\n * Generates a Transport object to generate JSON output\n *\n * @constructor\n * @param {Object} optional config parameter\n */\nclass JSONTransport {\n    constructor(options) {\n        options = options || {};\n\n        this.options = options || {};\n\n        this.name = 'JSONTransport';\n        this.version = packageData.version;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'json-transport'\n        });\n    }\n\n    /**\n     * <p>Compiles a mailcomposer message and forwards it to handler that sends it.</p>\n     *\n     * @param {Object} emailMessage MailComposer object\n     * @param {Function} callback Callback function to run when the sending is completed\n     */\n    send(mail, done) {\n        // Sendmail strips this header line by itself\n        mail.message.keepBcc = true;\n\n        let envelope = mail.data.envelope || mail.message.getEnvelope();\n        let messageId = mail.message.messageId();\n\n        let recipients = [].concat(envelope.to || []);\n        if (recipients.length > 3) {\n            recipients.push('...and ' + recipients.splice(2).length + ' more');\n        }\n        this.logger.info(\n            {\n                tnx: 'send',\n                messageId\n            },\n            'Composing JSON structure of %s to <%s>',\n            messageId,\n            recipients.join(', ')\n        );\n\n        setImmediate(() => {\n            mail.normalize((err, data) => {\n                if (err) {\n                    this.logger.error(\n                        {\n                            err,\n                            tnx: 'send',\n                            messageId\n                        },\n                        'Failed building JSON structure for %s. %s',\n                        messageId,\n                        err.message\n                    );\n                    return done(err);\n                }\n\n                delete data.envelope;\n                delete data.normalizedHeaders;\n\n                return done(null, {\n                    envelope,\n                    messageId,\n                    message: this.options.skipEncoding ? data : JSON.stringify(data)\n                });\n            });\n        });\n    }\n}\n\nmodule.exports = JSONTransport;\n","/* eslint no-undefined: 0 */\n\n'use strict';\n\nconst MimeNode = require('../mime-node');\nconst mimeFuncs = require('../mime-funcs');\n\n/**\n * Creates the object for composing a MimeNode instance out from the mail options\n *\n * @constructor\n * @param {Object} mail Mail options\n */\nclass MailComposer {\n    constructor(mail) {\n        this.mail = mail || {};\n        this.message = false;\n    }\n\n    /**\n     * Builds MimeNode instance\n     */\n    compile() {\n        this._alternatives = this.getAlternatives();\n        this._htmlNode = this._alternatives.filter(alternative => /^text\\/html\\b/i.test(alternative.contentType)).pop();\n        this._attachments = this.getAttachments(!!this._htmlNode);\n\n        this._useRelated = !!(this._htmlNode && this._attachments.related.length);\n        this._useAlternative = this._alternatives.length > 1;\n        this._useMixed = this._attachments.attached.length > 1 || (this._alternatives.length && this._attachments.attached.length === 1);\n\n        // Compose MIME tree\n        if (this.mail.raw) {\n            this.message = new MimeNode('message/rfc822', { newline: this.mail.newline }).setRaw(this.mail.raw);\n        } else if (this._useMixed) {\n            this.message = this._createMixed();\n        } else if (this._useAlternative) {\n            this.message = this._createAlternative();\n        } else if (this._useRelated) {\n            this.message = this._createRelated();\n        } else {\n            this.message = this._createContentNode(\n                false,\n                []\n                    .concat(this._alternatives || [])\n                    .concat(this._attachments.attached || [])\n                    .shift() || {\n                    contentType: 'text/plain',\n                    content: ''\n                }\n            );\n        }\n\n        // Add custom headers\n        if (this.mail.headers) {\n            this.message.addHeader(this.mail.headers);\n        }\n\n        // Add headers to the root node, always overrides custom headers\n        ['from', 'sender', 'to', 'cc', 'bcc', 'reply-to', 'in-reply-to', 'references', 'subject', 'message-id', 'date'].forEach(header => {\n            let key = header.replace(/-(\\w)/g, (o, c) => c.toUpperCase());\n            if (this.mail[key]) {\n                this.message.setHeader(header, this.mail[key]);\n            }\n        });\n\n        // Sets custom envelope\n        if (this.mail.envelope) {\n            this.message.setEnvelope(this.mail.envelope);\n        }\n\n        // ensure Message-Id value\n        this.message.messageId();\n\n        return this.message;\n    }\n\n    /**\n     * List all attachments. Resulting attachment objects can be used as input for MimeNode nodes\n     *\n     * @param {Boolean} findRelated If true separate related attachments from attached ones\n     * @returns {Object} An object of arrays (`related` and `attached`)\n     */\n    getAttachments(findRelated) {\n        let icalEvent, eventObject;\n        let attachments = [].concat(this.mail.attachments || []).map((attachment, i) => {\n            let data;\n            let isMessageNode = /^message\\//i.test(attachment.contentType);\n\n            if (/^data:/i.test(attachment.path || attachment.href)) {\n                attachment = this._processDataUrl(attachment);\n            }\n\n            data = {\n                contentType: attachment.contentType || mimeFuncs.detectMimeType(attachment.filename || attachment.path || attachment.href || 'bin'),\n                contentDisposition: attachment.contentDisposition || (isMessageNode ? 'inline' : 'attachment'),\n                contentTransferEncoding: 'contentTransferEncoding' in attachment ? attachment.contentTransferEncoding : 'base64'\n            };\n\n            if (attachment.filename) {\n                data.filename = attachment.filename;\n            } else if (!isMessageNode && attachment.filename !== false) {\n                data.filename = (attachment.path || attachment.href || '').split('/').pop().split('?').shift() || 'attachment-' + (i + 1);\n                if (data.filename.indexOf('.') < 0) {\n                    data.filename += '.' + mimeFuncs.detectExtension(data.contentType);\n                }\n            }\n\n            if (/^https?:\\/\\//i.test(attachment.path)) {\n                attachment.href = attachment.path;\n                attachment.path = undefined;\n            }\n\n            if (attachment.cid) {\n                data.cid = attachment.cid;\n            }\n\n            if (attachment.raw) {\n                data.raw = attachment.raw;\n            } else if (attachment.path) {\n                data.content = {\n                    path: attachment.path\n                };\n            } else if (attachment.href) {\n                data.content = {\n                    href: attachment.href,\n                    httpHeaders: attachment.httpHeaders\n                };\n            } else {\n                data.content = attachment.content || '';\n            }\n\n            if (attachment.encoding) {\n                data.encoding = attachment.encoding;\n            }\n\n            if (attachment.headers) {\n                data.headers = attachment.headers;\n            }\n\n            return data;\n        });\n\n        if (this.mail.icalEvent) {\n            if (\n                typeof this.mail.icalEvent === 'object' &&\n                (this.mail.icalEvent.content || this.mail.icalEvent.path || this.mail.icalEvent.href || this.mail.icalEvent.raw)\n            ) {\n                icalEvent = this.mail.icalEvent;\n            } else {\n                icalEvent = {\n                    content: this.mail.icalEvent\n                };\n            }\n\n            eventObject = {};\n            Object.keys(icalEvent).forEach(key => {\n                eventObject[key] = icalEvent[key];\n            });\n\n            eventObject.contentType = 'application/ics';\n            if (!eventObject.headers) {\n                eventObject.headers = {};\n            }\n            eventObject.filename = eventObject.filename || 'invite.ics';\n            eventObject.headers['Content-Disposition'] = 'attachment';\n            eventObject.headers['Content-Transfer-Encoding'] = 'base64';\n        }\n\n        if (!findRelated) {\n            return {\n                attached: attachments.concat(eventObject || []),\n                related: []\n            };\n        } else {\n            return {\n                attached: attachments.filter(attachment => !attachment.cid).concat(eventObject || []),\n                related: attachments.filter(attachment => !!attachment.cid)\n            };\n        }\n    }\n\n    /**\n     * List alternatives. Resulting objects can be used as input for MimeNode nodes\n     *\n     * @returns {Array} An array of alternative elements. Includes the `text` and `html` values as well\n     */\n    getAlternatives() {\n        let alternatives = [],\n            text,\n            html,\n            watchHtml,\n            amp,\n            icalEvent,\n            eventObject;\n\n        if (this.mail.text) {\n            if (typeof this.mail.text === 'object' && (this.mail.text.content || this.mail.text.path || this.mail.text.href || this.mail.text.raw)) {\n                text = this.mail.text;\n            } else {\n                text = {\n                    content: this.mail.text\n                };\n            }\n            text.contentType = 'text/plain; charset=utf-8';\n        }\n\n        if (this.mail.watchHtml) {\n            if (\n                typeof this.mail.watchHtml === 'object' &&\n                (this.mail.watchHtml.content || this.mail.watchHtml.path || this.mail.watchHtml.href || this.mail.watchHtml.raw)\n            ) {\n                watchHtml = this.mail.watchHtml;\n            } else {\n                watchHtml = {\n                    content: this.mail.watchHtml\n                };\n            }\n            watchHtml.contentType = 'text/watch-html; charset=utf-8';\n        }\n\n        if (this.mail.amp) {\n            if (typeof this.mail.amp === 'object' && (this.mail.amp.content || this.mail.amp.path || this.mail.amp.href || this.mail.amp.raw)) {\n                amp = this.mail.amp;\n            } else {\n                amp = {\n                    content: this.mail.amp\n                };\n            }\n            amp.contentType = 'text/x-amp-html; charset=utf-8';\n        }\n\n        // NB! when including attachments with a calendar alternative you might end up in a blank screen on some clients\n        if (this.mail.icalEvent) {\n            if (\n                typeof this.mail.icalEvent === 'object' &&\n                (this.mail.icalEvent.content || this.mail.icalEvent.path || this.mail.icalEvent.href || this.mail.icalEvent.raw)\n            ) {\n                icalEvent = this.mail.icalEvent;\n            } else {\n                icalEvent = {\n                    content: this.mail.icalEvent\n                };\n            }\n\n            eventObject = {};\n            Object.keys(icalEvent).forEach(key => {\n                eventObject[key] = icalEvent[key];\n            });\n\n            if (eventObject.content && typeof eventObject.content === 'object') {\n                // we are going to have the same attachment twice, so mark this to be\n                // resolved just once\n                eventObject.content._resolve = true;\n            }\n\n            eventObject.filename = false;\n            eventObject.contentType = 'text/calendar; charset=utf-8; method=' + (eventObject.method || 'PUBLISH').toString().trim().toUpperCase();\n            if (!eventObject.headers) {\n                eventObject.headers = {};\n            }\n        }\n\n        if (this.mail.html) {\n            if (typeof this.mail.html === 'object' && (this.mail.html.content || this.mail.html.path || this.mail.html.href || this.mail.html.raw)) {\n                html = this.mail.html;\n            } else {\n                html = {\n                    content: this.mail.html\n                };\n            }\n            html.contentType = 'text/html; charset=utf-8';\n        }\n\n        []\n            .concat(text || [])\n            .concat(watchHtml || [])\n            .concat(amp || [])\n            .concat(html || [])\n            .concat(eventObject || [])\n            .concat(this.mail.alternatives || [])\n            .forEach(alternative => {\n                let data;\n\n                if (/^data:/i.test(alternative.path || alternative.href)) {\n                    alternative = this._processDataUrl(alternative);\n                }\n\n                data = {\n                    contentType: alternative.contentType || mimeFuncs.detectMimeType(alternative.filename || alternative.path || alternative.href || 'txt'),\n                    contentTransferEncoding: alternative.contentTransferEncoding\n                };\n\n                if (alternative.filename) {\n                    data.filename = alternative.filename;\n                }\n\n                if (/^https?:\\/\\//i.test(alternative.path)) {\n                    alternative.href = alternative.path;\n                    alternative.path = undefined;\n                }\n\n                if (alternative.raw) {\n                    data.raw = alternative.raw;\n                } else if (alternative.path) {\n                    data.content = {\n                        path: alternative.path\n                    };\n                } else if (alternative.href) {\n                    data.content = {\n                        href: alternative.href\n                    };\n                } else {\n                    data.content = alternative.content || '';\n                }\n\n                if (alternative.encoding) {\n                    data.encoding = alternative.encoding;\n                }\n\n                if (alternative.headers) {\n                    data.headers = alternative.headers;\n                }\n\n                alternatives.push(data);\n            });\n\n        return alternatives;\n    }\n\n    /**\n     * Builds multipart/mixed node. It should always contain different type of elements on the same level\n     * eg. text + attachments\n     *\n     * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n     * @returns {Object} MimeNode node element\n     */\n    _createMixed(parentNode) {\n        let node;\n\n        if (!parentNode) {\n            node = new MimeNode('multipart/mixed', {\n                baseBoundary: this.mail.baseBoundary,\n                textEncoding: this.mail.textEncoding,\n                boundaryPrefix: this.mail.boundaryPrefix,\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        } else {\n            node = parentNode.createChild('multipart/mixed', {\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        }\n\n        if (this._useAlternative) {\n            this._createAlternative(node);\n        } else if (this._useRelated) {\n            this._createRelated(node);\n        }\n\n        []\n            .concat((!this._useAlternative && this._alternatives) || [])\n            .concat(this._attachments.attached || [])\n            .forEach(element => {\n                // if the element is a html node from related subpart then ignore it\n                if (!this._useRelated || element !== this._htmlNode) {\n                    this._createContentNode(node, element);\n                }\n            });\n\n        return node;\n    }\n\n    /**\n     * Builds multipart/alternative node. It should always contain same type of elements on the same level\n     * eg. text + html view of the same data\n     *\n     * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n     * @returns {Object} MimeNode node element\n     */\n    _createAlternative(parentNode) {\n        let node;\n\n        if (!parentNode) {\n            node = new MimeNode('multipart/alternative', {\n                baseBoundary: this.mail.baseBoundary,\n                textEncoding: this.mail.textEncoding,\n                boundaryPrefix: this.mail.boundaryPrefix,\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        } else {\n            node = parentNode.createChild('multipart/alternative', {\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        }\n\n        this._alternatives.forEach(alternative => {\n            if (this._useRelated && this._htmlNode === alternative) {\n                this._createRelated(node);\n            } else {\n                this._createContentNode(node, alternative);\n            }\n        });\n\n        return node;\n    }\n\n    /**\n     * Builds multipart/related node. It should always contain html node with related attachments\n     *\n     * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n     * @returns {Object} MimeNode node element\n     */\n    _createRelated(parentNode) {\n        let node;\n\n        if (!parentNode) {\n            node = new MimeNode('multipart/related; type=\"text/html\"', {\n                baseBoundary: this.mail.baseBoundary,\n                textEncoding: this.mail.textEncoding,\n                boundaryPrefix: this.mail.boundaryPrefix,\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        } else {\n            node = parentNode.createChild('multipart/related; type=\"text/html\"', {\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        }\n\n        this._createContentNode(node, this._htmlNode);\n\n        this._attachments.related.forEach(alternative => this._createContentNode(node, alternative));\n\n        return node;\n    }\n\n    /**\n     * Creates a regular node with contents\n     *\n     * @param {Object} parentNode Parent for this note. If it does not exist, a root node is created\n     * @param {Object} element Node data\n     * @returns {Object} MimeNode node element\n     */\n    _createContentNode(parentNode, element) {\n        element = element || {};\n        element.content = element.content || '';\n\n        let node;\n        let encoding = (element.encoding || 'utf8')\n            .toString()\n            .toLowerCase()\n            .replace(/[-_\\s]/g, '');\n\n        if (!parentNode) {\n            node = new MimeNode(element.contentType, {\n                filename: element.filename,\n                baseBoundary: this.mail.baseBoundary,\n                textEncoding: this.mail.textEncoding,\n                boundaryPrefix: this.mail.boundaryPrefix,\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        } else {\n            node = parentNode.createChild(element.contentType, {\n                filename: element.filename,\n                textEncoding: this.mail.textEncoding,\n                disableUrlAccess: this.mail.disableUrlAccess,\n                disableFileAccess: this.mail.disableFileAccess,\n                normalizeHeaderKey: this.mail.normalizeHeaderKey,\n                newline: this.mail.newline\n            });\n        }\n\n        // add custom headers\n        if (element.headers) {\n            node.addHeader(element.headers);\n        }\n\n        if (element.cid) {\n            node.setHeader('Content-Id', '<' + element.cid.replace(/[<>]/g, '') + '>');\n        }\n\n        if (element.contentTransferEncoding) {\n            node.setHeader('Content-Transfer-Encoding', element.contentTransferEncoding);\n        } else if (this.mail.encoding && /^text\\//i.test(element.contentType)) {\n            node.setHeader('Content-Transfer-Encoding', this.mail.encoding);\n        }\n\n        if (!/^text\\//i.test(element.contentType) || element.contentDisposition) {\n            node.setHeader('Content-Disposition', element.contentDisposition || (element.cid ? 'inline' : 'attachment'));\n        }\n\n        if (typeof element.content === 'string' && !['utf8', 'usascii', 'ascii'].includes(encoding)) {\n            element.content = Buffer.from(element.content, encoding);\n        }\n\n        // prefer pregenerated raw content\n        if (element.raw) {\n            node.setRaw(element.raw);\n        } else {\n            node.setContent(element.content);\n        }\n\n        return node;\n    }\n\n    /**\n     * Parses data uri and converts it to a Buffer\n     *\n     * @param {Object} element Content element\n     * @return {Object} Parsed element\n     */\n    _processDataUrl(element) {\n        let parts = (element.path || element.href).match(/^data:((?:[^;]*;)*(?:[^,]*)),(.*)$/i);\n        if (!parts) {\n            return element;\n        }\n\n        element.content = /\\bbase64$/i.test(parts[1]) ? Buffer.from(parts[2], 'base64') : Buffer.from(decodeURIComponent(parts[2]));\n\n        if ('path' in element) {\n            element.path = false;\n        }\n\n        if ('href' in element) {\n            element.href = false;\n        }\n\n        parts[1].split(';').forEach(item => {\n            if (/^\\w+\\/[^/]+$/i.test(item)) {\n                element.contentType = element.contentType || item.toLowerCase();\n            }\n        });\n\n        return element;\n    }\n}\n\nmodule.exports = MailComposer;\n","'use strict';\n\nconst EventEmitter = require('events');\nconst shared = require('../shared');\nconst mimeTypes = require('../mime-funcs/mime-types');\nconst MailComposer = require('../mail-composer');\nconst DKIM = require('../dkim');\nconst httpProxyClient = require('../smtp-connection/http-proxy-client');\nconst util = require('util');\nconst urllib = require('url');\nconst packageData = require('../../package.json');\nconst MailMessage = require('./mail-message');\nconst net = require('net');\nconst dns = require('dns');\nconst crypto = require('crypto');\n\n/**\n * Creates an object for exposing the Mail API\n *\n * @constructor\n * @param {Object} transporter Transport object instance to pass the mails to\n */\nclass Mail extends EventEmitter {\n    constructor(transporter, options, defaults) {\n        super();\n\n        this.options = options || {};\n        this._defaults = defaults || {};\n\n        this._defaultPlugins = {\n            compile: [(...args) => this._convertDataImages(...args)],\n            stream: []\n        };\n\n        this._userPlugins = {\n            compile: [],\n            stream: []\n        };\n\n        this.meta = new Map();\n\n        this.dkim = this.options.dkim ? new DKIM(this.options.dkim) : false;\n\n        this.transporter = transporter;\n        this.transporter.mailer = this;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'mail'\n        });\n\n        this.logger.debug(\n            {\n                tnx: 'create'\n            },\n            'Creating transport: %s',\n            this.getVersionString()\n        );\n\n        // setup emit handlers for the transporter\n        if (typeof this.transporter.on === 'function') {\n            // deprecated log interface\n            this.transporter.on('log', log => {\n                this.logger.debug(\n                    {\n                        tnx: 'transport'\n                    },\n                    '%s: %s',\n                    log.type,\n                    log.message\n                );\n            });\n\n            // transporter errors\n            this.transporter.on('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'transport'\n                    },\n                    'Transport Error: %s',\n                    err.message\n                );\n                this.emit('error', err);\n            });\n\n            // indicates if the sender has became idle\n            this.transporter.on('idle', (...args) => {\n                this.emit('idle', ...args);\n            });\n        }\n\n        /**\n         * Optional methods passed to the underlying transport object\n         */\n        ['close', 'isIdle', 'verify'].forEach(method => {\n            this[method] = (...args) => {\n                if (typeof this.transporter[method] === 'function') {\n                    if (method === 'verify' && typeof this.getSocket === 'function') {\n                        this.transporter.getSocket = this.getSocket;\n                        this.getSocket = false;\n                    }\n                    return this.transporter[method](...args);\n                } else {\n                    this.logger.warn(\n                        {\n                            tnx: 'transport',\n                            methodName: method\n                        },\n                        'Non existing method %s called for transport',\n                        method\n                    );\n                    return false;\n                }\n            };\n        });\n\n        // setup proxy handling\n        if (this.options.proxy && typeof this.options.proxy === 'string') {\n            this.setupProxy(this.options.proxy);\n        }\n    }\n\n    use(step, plugin) {\n        step = (step || '').toString();\n        if (!this._userPlugins.hasOwnProperty(step)) {\n            this._userPlugins[step] = [plugin];\n        } else {\n            this._userPlugins[step].push(plugin);\n        }\n\n        return this;\n    }\n\n    /**\n     * Sends an email using the preselected transport object\n     *\n     * @param {Object} data E-data description\n     * @param {Function?} callback Callback to run once the sending succeeded or failed\n     */\n    sendMail(data, callback) {\n        let promise;\n\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n\n        if (typeof this.getSocket === 'function') {\n            this.transporter.getSocket = this.getSocket;\n            this.getSocket = false;\n        }\n\n        let mail = new MailMessage(this, data);\n\n        this.logger.debug(\n            {\n                tnx: 'transport',\n                name: this.transporter.name,\n                version: this.transporter.version,\n                action: 'send'\n            },\n            'Sending mail using %s/%s',\n            this.transporter.name,\n            this.transporter.version\n        );\n\n        this._processPlugins('compile', mail, err => {\n            if (err) {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'plugin',\n                        action: 'compile'\n                    },\n                    'PluginCompile Error: %s',\n                    err.message\n                );\n                return callback(err);\n            }\n\n            mail.message = new MailComposer(mail.data).compile();\n\n            mail.setMailerHeader();\n            mail.setPriorityHeaders();\n            mail.setListHeaders();\n\n            this._processPlugins('stream', mail, err => {\n                if (err) {\n                    this.logger.error(\n                        {\n                            err,\n                            tnx: 'plugin',\n                            action: 'stream'\n                        },\n                        'PluginStream Error: %s',\n                        err.message\n                    );\n                    return callback(err);\n                }\n\n                if (mail.data.dkim || this.dkim) {\n                    mail.message.processFunc(input => {\n                        let dkim = mail.data.dkim ? new DKIM(mail.data.dkim) : this.dkim;\n                        this.logger.debug(\n                            {\n                                tnx: 'DKIM',\n                                messageId: mail.message.messageId(),\n                                dkimDomains: dkim.keys.map(key => key.keySelector + '.' + key.domainName).join(', ')\n                            },\n                            'Signing outgoing message with %s keys',\n                            dkim.keys.length\n                        );\n                        return dkim.sign(input, mail.data._dkim);\n                    });\n                }\n\n                this.transporter.send(mail, (...args) => {\n                    if (args[0]) {\n                        this.logger.error(\n                            {\n                                err: args[0],\n                                tnx: 'transport',\n                                action: 'send'\n                            },\n                            'Send Error: %s',\n                            args[0].message\n                        );\n                    }\n                    callback(...args);\n                });\n            });\n        });\n\n        return promise;\n    }\n\n    getVersionString() {\n        return util.format('%s (%s; +%s; %s/%s)', packageData.name, packageData.version, packageData.homepage, this.transporter.name, this.transporter.version);\n    }\n\n    _processPlugins(step, mail, callback) {\n        step = (step || '').toString();\n\n        if (!this._userPlugins.hasOwnProperty(step)) {\n            return callback();\n        }\n\n        let userPlugins = this._userPlugins[step] || [];\n        let defaultPlugins = this._defaultPlugins[step] || [];\n\n        if (userPlugins.length) {\n            this.logger.debug(\n                {\n                    tnx: 'transaction',\n                    pluginCount: userPlugins.length,\n                    step\n                },\n                'Using %s plugins for %s',\n                userPlugins.length,\n                step\n            );\n        }\n\n        if (userPlugins.length + defaultPlugins.length === 0) {\n            return callback();\n        }\n\n        let pos = 0;\n        let block = 'default';\n        let processPlugins = () => {\n            let curplugins = block === 'default' ? defaultPlugins : userPlugins;\n            if (pos >= curplugins.length) {\n                if (block === 'default' && userPlugins.length) {\n                    block = 'user';\n                    pos = 0;\n                    curplugins = userPlugins;\n                } else {\n                    return callback();\n                }\n            }\n            let plugin = curplugins[pos++];\n            plugin(mail, err => {\n                if (err) {\n                    return callback(err);\n                }\n                processPlugins();\n            });\n        };\n\n        processPlugins();\n    }\n\n    /**\n     * Sets up proxy handler for a Nodemailer object\n     *\n     * @param {String} proxyUrl Proxy configuration url\n     */\n    setupProxy(proxyUrl) {\n        let proxy = urllib.parse(proxyUrl);\n\n        // setup socket handler for the mailer object\n        this.getSocket = (options, callback) => {\n            let protocol = proxy.protocol.replace(/:$/, '').toLowerCase();\n\n            if (this.meta.has('proxy_handler_' + protocol)) {\n                return this.meta.get('proxy_handler_' + protocol)(proxy, options, callback);\n            }\n\n            switch (protocol) {\n                // Connect using a HTTP CONNECT method\n                case 'http':\n                case 'https':\n                    httpProxyClient(proxy.href, options.port, options.host, (err, socket) => {\n                        if (err) {\n                            return callback(err);\n                        }\n                        return callback(null, {\n                            connection: socket\n                        });\n                    });\n                    return;\n                case 'socks':\n                case 'socks5':\n                case 'socks4':\n                case 'socks4a': {\n                    if (!this.meta.has('proxy_socks_module')) {\n                        return callback(new Error('Socks module not loaded'));\n                    }\n                    let connect = ipaddress => {\n                        let proxyV2 = !!this.meta.get('proxy_socks_module').SocksClient;\n                        let socksClient = proxyV2 ? this.meta.get('proxy_socks_module').SocksClient : this.meta.get('proxy_socks_module');\n                        let proxyType = Number(proxy.protocol.replace(/\\D/g, '')) || 5;\n                        let connectionOpts = {\n                            proxy: {\n                                ipaddress,\n                                port: Number(proxy.port),\n                                type: proxyType\n                            },\n                            [proxyV2 ? 'destination' : 'target']: {\n                                host: options.host,\n                                port: options.port\n                            },\n                            command: 'connect'\n                        };\n\n                        if (proxy.auth) {\n                            let username = decodeURIComponent(proxy.auth.split(':').shift());\n                            let password = decodeURIComponent(proxy.auth.split(':').pop());\n                            if (proxyV2) {\n                                connectionOpts.proxy.userId = username;\n                                connectionOpts.proxy.password = password;\n                            } else if (proxyType === 4) {\n                                connectionOpts.userid = username;\n                            } else {\n                                connectionOpts.authentication = {\n                                    username,\n                                    password\n                                };\n                            }\n                        }\n\n                        socksClient.createConnection(connectionOpts, (err, info) => {\n                            if (err) {\n                                return callback(err);\n                            }\n                            return callback(null, {\n                                connection: info.socket || info\n                            });\n                        });\n                    };\n\n                    if (net.isIP(proxy.hostname)) {\n                        return connect(proxy.hostname);\n                    }\n\n                    return dns.resolve(proxy.hostname, (err, address) => {\n                        if (err) {\n                            return callback(err);\n                        }\n                        connect(Array.isArray(address) ? address[0] : address);\n                    });\n                }\n            }\n            callback(new Error('Unknown proxy configuration'));\n        };\n    }\n\n    _convertDataImages(mail, callback) {\n        if ((!this.options.attachDataUrls && !mail.data.attachDataUrls) || !mail.data.html) {\n            return callback();\n        }\n        mail.resolveContent(mail.data, 'html', (err, html) => {\n            if (err) {\n                return callback(err);\n            }\n            let cidCounter = 0;\n            html = (html || '').toString().replace(/(<img\\b[^>]* src\\s*=[\\s\"']*)(data:([^;]+);[^\"'>\\s]+)/gi, (match, prefix, dataUri, mimeType) => {\n                let cid = crypto.randomBytes(10).toString('hex') + '@localhost';\n                if (!mail.data.attachments) {\n                    mail.data.attachments = [];\n                }\n                if (!Array.isArray(mail.data.attachments)) {\n                    mail.data.attachments = [].concat(mail.data.attachments || []);\n                }\n                mail.data.attachments.push({\n                    path: dataUri,\n                    cid,\n                    filename: 'image-' + ++cidCounter + '.' + mimeTypes.detectExtension(mimeType)\n                });\n                return prefix + 'cid:' + cid;\n            });\n            mail.data.html = html;\n            callback();\n        });\n    }\n\n    set(key, value) {\n        return this.meta.set(key, value);\n    }\n\n    get(key) {\n        return this.meta.get(key);\n    }\n}\n\nmodule.exports = Mail;\n","'use strict';\n\nconst shared = require('../shared');\nconst MimeNode = require('../mime-node');\nconst mimeFuncs = require('../mime-funcs');\n\nclass MailMessage {\n    constructor(mailer, data) {\n        this.mailer = mailer;\n        this.data = {};\n        this.message = null;\n\n        data = data || {};\n        let options = mailer.options || {};\n        let defaults = mailer._defaults || {};\n\n        Object.keys(data).forEach(key => {\n            this.data[key] = data[key];\n        });\n\n        this.data.headers = this.data.headers || {};\n\n        // apply defaults\n        Object.keys(defaults).forEach(key => {\n            if (!(key in this.data)) {\n                this.data[key] = defaults[key];\n            } else if (key === 'headers') {\n                // headers is a special case. Allow setting individual default headers\n                Object.keys(defaults.headers).forEach(key => {\n                    if (!(key in this.data.headers)) {\n                        this.data.headers[key] = defaults.headers[key];\n                    }\n                });\n            }\n        });\n\n        // force specific keys from transporter options\n        ['disableFileAccess', 'disableUrlAccess', 'normalizeHeaderKey'].forEach(key => {\n            if (key in options) {\n                this.data[key] = options[key];\n            }\n        });\n    }\n\n    resolveContent(...args) {\n        return shared.resolveContent(...args);\n    }\n\n    resolveAll(callback) {\n        let keys = [\n            [this.data, 'html'],\n            [this.data, 'text'],\n            [this.data, 'watchHtml'],\n            [this.data, 'amp'],\n            [this.data, 'icalEvent']\n        ];\n\n        if (this.data.alternatives && this.data.alternatives.length) {\n            this.data.alternatives.forEach((alternative, i) => {\n                keys.push([this.data.alternatives, i]);\n            });\n        }\n\n        if (this.data.attachments && this.data.attachments.length) {\n            this.data.attachments.forEach((attachment, i) => {\n                if (!attachment.filename) {\n                    attachment.filename = (attachment.path || attachment.href || '').split('/').pop().split('?').shift() || 'attachment-' + (i + 1);\n                    if (attachment.filename.indexOf('.') < 0) {\n                        attachment.filename += '.' + mimeFuncs.detectExtension(attachment.contentType);\n                    }\n                }\n\n                if (!attachment.contentType) {\n                    attachment.contentType = mimeFuncs.detectMimeType(attachment.filename || attachment.path || attachment.href || 'bin');\n                }\n\n                keys.push([this.data.attachments, i]);\n            });\n        }\n\n        let mimeNode = new MimeNode();\n\n        let addressKeys = ['from', 'to', 'cc', 'bcc', 'sender', 'replyTo'];\n\n        addressKeys.forEach(address => {\n            let value;\n            if (this.message) {\n                value = [].concat(mimeNode._parseAddresses(this.message.getHeader(address === 'replyTo' ? 'reply-to' : address)) || []);\n            } else if (this.data[address]) {\n                value = [].concat(mimeNode._parseAddresses(this.data[address]) || []);\n            }\n            if (value && value.length) {\n                this.data[address] = value;\n            } else if (address in this.data) {\n                this.data[address] = null;\n            }\n        });\n\n        let singleKeys = ['from', 'sender', 'replyTo'];\n        singleKeys.forEach(address => {\n            if (this.data[address]) {\n                this.data[address] = this.data[address].shift();\n            }\n        });\n\n        let pos = 0;\n        let resolveNext = () => {\n            if (pos >= keys.length) {\n                return callback(null, this.data);\n            }\n            let args = keys[pos++];\n            if (!args[0] || !args[0][args[1]]) {\n                return resolveNext();\n            }\n            shared.resolveContent(...args, (err, value) => {\n                if (err) {\n                    return callback(err);\n                }\n\n                let node = {\n                    content: value\n                };\n                if (args[0][args[1]] && typeof args[0][args[1]] === 'object' && !Buffer.isBuffer(args[0][args[1]])) {\n                    Object.keys(args[0][args[1]]).forEach(key => {\n                        if (!(key in node) && !['content', 'path', 'href', 'raw'].includes(key)) {\n                            node[key] = args[0][args[1]][key];\n                        }\n                    });\n                }\n\n                args[0][args[1]] = node;\n                resolveNext();\n            });\n        };\n\n        setImmediate(() => resolveNext());\n    }\n\n    normalize(callback) {\n        let envelope = this.data.envelope || this.message.getEnvelope();\n        let messageId = this.message.messageId();\n\n        this.resolveAll((err, data) => {\n            if (err) {\n                return callback(err);\n            }\n\n            data.envelope = envelope;\n            data.messageId = messageId;\n\n            ['html', 'text', 'watchHtml', 'amp'].forEach(key => {\n                if (data[key] && data[key].content) {\n                    if (typeof data[key].content === 'string') {\n                        data[key] = data[key].content;\n                    } else if (Buffer.isBuffer(data[key].content)) {\n                        data[key] = data[key].content.toString();\n                    }\n                }\n            });\n\n            if (data.icalEvent && Buffer.isBuffer(data.icalEvent.content)) {\n                data.icalEvent.content = data.icalEvent.content.toString('base64');\n                data.icalEvent.encoding = 'base64';\n            }\n\n            if (data.alternatives && data.alternatives.length) {\n                data.alternatives.forEach(alternative => {\n                    if (alternative && alternative.content && Buffer.isBuffer(alternative.content)) {\n                        alternative.content = alternative.content.toString('base64');\n                        alternative.encoding = 'base64';\n                    }\n                });\n            }\n\n            if (data.attachments && data.attachments.length) {\n                data.attachments.forEach(attachment => {\n                    if (attachment && attachment.content && Buffer.isBuffer(attachment.content)) {\n                        attachment.content = attachment.content.toString('base64');\n                        attachment.encoding = 'base64';\n                    }\n                });\n            }\n\n            data.normalizedHeaders = {};\n            Object.keys(data.headers || {}).forEach(key => {\n                let value = [].concat(data.headers[key] || []).shift();\n                value = (value && value.value) || value;\n                if (value) {\n                    if (['references', 'in-reply-to', 'message-id', 'content-id'].includes(key)) {\n                        value = this.message._encodeHeaderValue(key, value);\n                    }\n                    data.normalizedHeaders[key] = value;\n                }\n            });\n\n            if (data.list && typeof data.list === 'object') {\n                let listHeaders = this._getListHeaders(data.list);\n                listHeaders.forEach(entry => {\n                    data.normalizedHeaders[entry.key] = entry.value.map(val => (val && val.value) || val).join(', ');\n                });\n            }\n\n            if (data.references) {\n                data.normalizedHeaders.references = this.message._encodeHeaderValue('references', data.references);\n            }\n\n            if (data.inReplyTo) {\n                data.normalizedHeaders['in-reply-to'] = this.message._encodeHeaderValue('in-reply-to', data.inReplyTo);\n            }\n\n            return callback(null, data);\n        });\n    }\n\n    setMailerHeader() {\n        if (!this.message || !this.data.xMailer) {\n            return;\n        }\n        this.message.setHeader('X-Mailer', this.data.xMailer);\n    }\n\n    setPriorityHeaders() {\n        if (!this.message || !this.data.priority) {\n            return;\n        }\n        switch ((this.data.priority || '').toString().toLowerCase()) {\n            case 'high':\n                this.message.setHeader('X-Priority', '1 (Highest)');\n                this.message.setHeader('X-MSMail-Priority', 'High');\n                this.message.setHeader('Importance', 'High');\n                break;\n            case 'low':\n                this.message.setHeader('X-Priority', '5 (Lowest)');\n                this.message.setHeader('X-MSMail-Priority', 'Low');\n                this.message.setHeader('Importance', 'Low');\n                break;\n            default:\n            // do not add anything, since all messages are 'Normal' by default\n        }\n    }\n\n    setListHeaders() {\n        if (!this.message || !this.data.list || typeof this.data.list !== 'object') {\n            return;\n        }\n        // add optional List-* headers\n        if (this.data.list && typeof this.data.list === 'object') {\n            this._getListHeaders(this.data.list).forEach(listHeader => {\n                listHeader.value.forEach(value => {\n                    this.message.addHeader(listHeader.key, value);\n                });\n            });\n        }\n    }\n\n    _getListHeaders(listData) {\n        // make sure an url looks like <protocol:url>\n        return Object.keys(listData).map(key => ({\n            key: 'list-' + key.toLowerCase().trim(),\n            value: [].concat(listData[key] || []).map(value => ({\n                prepared: true,\n                foldLines: true,\n                value: []\n                    .concat(value || [])\n                    .map(value => {\n                        if (typeof value === 'string') {\n                            value = {\n                                url: value\n                            };\n                        }\n\n                        if (value && value.url) {\n                            if (key.toLowerCase().trim() === 'id') {\n                                // List-ID: \"comment\" <domain>\n                                let comment = value.comment || '';\n                                if (mimeFuncs.isPlainText(comment)) {\n                                    comment = '\"' + comment + '\"';\n                                } else {\n                                    comment = mimeFuncs.encodeWord(comment);\n                                }\n\n                                return (value.comment ? comment + ' ' : '') + this._formatListUrl(value.url).replace(/^<[^:]+\\/{,2}/, '');\n                            }\n\n                            // List-*: <http://domain> (comment)\n                            let comment = value.comment || '';\n                            if (!mimeFuncs.isPlainText(comment)) {\n                                comment = mimeFuncs.encodeWord(comment);\n                            }\n\n                            return this._formatListUrl(value.url) + (value.comment ? ' (' + comment + ')' : '');\n                        }\n\n                        return '';\n                    })\n                    .filter(value => value)\n                    .join(', ')\n            }))\n        }));\n    }\n\n    _formatListUrl(url) {\n        url = url.replace(/[\\s<]+|[\\s>]+/g, '');\n        if (/^(https?|mailto|ftp):/.test(url)) {\n            return '<' + url + '>';\n        }\n        if (/^[^@]+@[^@]+$/.test(url)) {\n            return '<mailto:' + url + '>';\n        }\n\n        return '<http://' + url + '>';\n    }\n}\n\nmodule.exports = MailMessage;\n","/* eslint no-control-regex:0 */\n\n'use strict';\n\nconst base64 = require('../base64');\nconst qp = require('../qp');\nconst mimeTypes = require('./mime-types');\n\nmodule.exports = {\n    /**\n     * Checks if a value is plaintext string (uses only printable 7bit chars)\n     *\n     * @param {String} value String to be tested\n     * @returns {Boolean} true if it is a plaintext string\n     */\n    isPlainText(value, isParam) {\n        const re = isParam ? /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f\"\\u0080-\\uFFFF]/ : /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f\\u0080-\\uFFFF]/;\n        if (typeof value !== 'string' || re.test(value)) {\n            return false;\n        } else {\n            return true;\n        }\n    },\n\n    /**\n     * Checks if a multi line string containes lines longer than the selected value.\n     *\n     * Useful when detecting if a mail message needs any processing at all –\n     * if only plaintext characters are used and lines are short, then there is\n     * no need to encode the values in any way. If the value is plaintext but has\n     * longer lines then allowed, then use format=flowed\n     *\n     * @param {Number} lineLength Max line length to check for\n     * @returns {Boolean} Returns true if there is at least one line longer than lineLength chars\n     */\n    hasLongerLines(str, lineLength) {\n        if (str.length > 128 * 1024) {\n            // do not test strings longer than 128kB\n            return true;\n        }\n        return new RegExp('^.{' + (lineLength + 1) + ',}', 'm').test(str);\n    },\n\n    /**\n     * Encodes a string or an Buffer to an UTF-8 MIME Word (rfc2047)\n     *\n     * @param {String|Buffer} data String to be encoded\n     * @param {String} mimeWordEncoding='Q' Encoding for the mime word, either Q or B\n     * @param {Number} [maxLength=0] If set, split mime words into several chunks if needed\n     * @return {String} Single or several mime words joined together\n     */\n    encodeWord(data, mimeWordEncoding, maxLength) {\n        mimeWordEncoding = (mimeWordEncoding || 'Q').toString().toUpperCase().trim().charAt(0);\n        maxLength = maxLength || 0;\n\n        let encodedStr;\n        let toCharset = 'UTF-8';\n\n        if (maxLength && maxLength > 7 + toCharset.length) {\n            maxLength -= 7 + toCharset.length;\n        }\n\n        if (mimeWordEncoding === 'Q') {\n            // https://tools.ietf.org/html/rfc2047#section-5 rule (3)\n            encodedStr = qp.encode(data).replace(/[^a-z0-9!*+\\-/=]/gi, chr => {\n                let ord = chr.charCodeAt(0).toString(16).toUpperCase();\n                if (chr === ' ') {\n                    return '_';\n                } else {\n                    return '=' + (ord.length === 1 ? '0' + ord : ord);\n                }\n            });\n        } else if (mimeWordEncoding === 'B') {\n            encodedStr = typeof data === 'string' ? data : base64.encode(data);\n            maxLength = maxLength ? Math.max(3, ((maxLength - (maxLength % 4)) / 4) * 3) : 0;\n        }\n\n        if (maxLength && (mimeWordEncoding !== 'B' ? encodedStr : base64.encode(data)).length > maxLength) {\n            if (mimeWordEncoding === 'Q') {\n                encodedStr = this.splitMimeEncodedString(encodedStr, maxLength).join('?= =?' + toCharset + '?' + mimeWordEncoding + '?');\n            } else {\n                // RFC2047 6.3 (2) states that encoded-word must include an integral number of characters, so no chopping unicode sequences\n                let parts = [];\n                let lpart = '';\n                for (let i = 0, len = encodedStr.length; i < len; i++) {\n                    let chr = encodedStr.charAt(i);\n                    // check if we can add this character to the existing string\n                    // without breaking byte length limit\n                    if (Buffer.byteLength(lpart + chr) <= maxLength || i === 0) {\n                        lpart += chr;\n                    } else {\n                        // we hit the length limit, so push the existing string and start over\n                        parts.push(base64.encode(lpart));\n                        lpart = chr;\n                    }\n                }\n                if (lpart) {\n                    parts.push(base64.encode(lpart));\n                }\n\n                if (parts.length > 1) {\n                    encodedStr = parts.join('?= =?' + toCharset + '?' + mimeWordEncoding + '?');\n                } else {\n                    encodedStr = parts.join('');\n                }\n            }\n        } else if (mimeWordEncoding === 'B') {\n            encodedStr = base64.encode(data);\n        }\n\n        return '=?' + toCharset + '?' + mimeWordEncoding + '?' + encodedStr + (encodedStr.substr(-2) === '?=' ? '' : '?=');\n    },\n\n    /**\n     * Finds word sequences with non ascii text and converts these to mime words\n     *\n     * @param {String} value String to be encoded\n     * @param {String} mimeWordEncoding='Q' Encoding for the mime word, either Q or B\n     * @param {Number} [maxLength=0] If set, split mime words into several chunks if needed\n     * @param {Boolean} [encodeAll=false] If true and the value needs encoding then encodes entire string, not just the smallest match\n     * @return {String} String with possible mime words\n     */\n    encodeWords(value, mimeWordEncoding, maxLength, encodeAll) {\n        maxLength = maxLength || 0;\n\n        let encodedValue;\n\n        // find first word with a non-printable ascii or special symbol in it\n        let firstMatch = value.match(/(?:^|\\s)([^\\s]*[\"\\u0080-\\uFFFF])/);\n        if (!firstMatch) {\n            return value;\n        }\n\n        if (encodeAll) {\n            // if it is requested to encode everything or the string contains something that resebles encoded word, then encode everything\n\n            return this.encodeWord(value, mimeWordEncoding, maxLength);\n        }\n\n        // find the last word with a non-printable ascii in it\n        let lastMatch = value.match(/([\"\\u0080-\\uFFFF][^\\s]*)[^\"\\u0080-\\uFFFF]*$/);\n        if (!lastMatch) {\n            // should not happen\n            return value;\n        }\n\n        let startIndex =\n            firstMatch.index +\n            (\n                firstMatch[0].match(/[^\\s]/) || {\n                    index: 0\n                }\n            ).index;\n        let endIndex = lastMatch.index + (lastMatch[1] || '').length;\n\n        encodedValue =\n            (startIndex ? value.substr(0, startIndex) : '') +\n            this.encodeWord(value.substring(startIndex, endIndex), mimeWordEncoding || 'Q', maxLength) +\n            (endIndex < value.length ? value.substr(endIndex) : '');\n\n        return encodedValue;\n    },\n\n    /**\n     * Joins parsed header value together as 'value; param1=value1; param2=value2'\n     * PS: We are following RFC 822 for the list of special characters that we need to keep in quotes.\n     *      Refer: https://www.w3.org/Protocols/rfc1341/4_Content-Type.html\n     * @param {Object} structured Parsed header value\n     * @return {String} joined header value\n     */\n    buildHeaderValue(structured) {\n        let paramsArray = [];\n\n        Object.keys(structured.params || {}).forEach(param => {\n            // filename might include unicode characters so it is a special case\n            // other values probably do not\n            let value = structured.params[param];\n            if (!this.isPlainText(value, true) || value.length >= 75) {\n                this.buildHeaderParam(param, value, 50).forEach(encodedParam => {\n                    if (!/[\\s\"\\\\;:/=(),<>@[\\]?]|^[-']|'$/.test(encodedParam.value) || encodedParam.key.substr(-1) === '*') {\n                        paramsArray.push(encodedParam.key + '=' + encodedParam.value);\n                    } else {\n                        paramsArray.push(encodedParam.key + '=' + JSON.stringify(encodedParam.value));\n                    }\n                });\n            } else if (/[\\s'\"\\\\;:/=(),<>@[\\]?]|^-/.test(value)) {\n                paramsArray.push(param + '=' + JSON.stringify(value));\n            } else {\n                paramsArray.push(param + '=' + value);\n            }\n        });\n\n        return structured.value + (paramsArray.length ? '; ' + paramsArray.join('; ') : '');\n    },\n\n    /**\n     * Encodes a string or an Buffer to an UTF-8 Parameter Value Continuation encoding (rfc2231)\n     * Useful for splitting long parameter values.\n     *\n     * For example\n     *      title=\"unicode string\"\n     * becomes\n     *     title*0*=utf-8''unicode\n     *     title*1*=%20string\n     *\n     * @param {String|Buffer} data String to be encoded\n     * @param {Number} [maxLength=50] Max length for generated chunks\n     * @param {String} [fromCharset='UTF-8'] Source sharacter set\n     * @return {Array} A list of encoded keys and headers\n     */\n    buildHeaderParam(key, data, maxLength) {\n        let list = [];\n        let encodedStr = typeof data === 'string' ? data : (data || '').toString();\n        let encodedStrArr;\n        let chr, ord;\n        let line;\n        let startPos = 0;\n        let i, len;\n\n        maxLength = maxLength || 50;\n\n        // process ascii only text\n        if (this.isPlainText(data, true)) {\n            // check if conversion is even needed\n            if (encodedStr.length <= maxLength) {\n                return [\n                    {\n                        key,\n                        value: encodedStr\n                    }\n                ];\n            }\n\n            encodedStr = encodedStr.replace(new RegExp('.{' + maxLength + '}', 'g'), str => {\n                list.push({\n                    line: str\n                });\n                return '';\n            });\n\n            if (encodedStr) {\n                list.push({\n                    line: encodedStr\n                });\n            }\n        } else {\n            if (/[\\uD800-\\uDBFF]/.test(encodedStr)) {\n                // string containts surrogate pairs, so normalize it to an array of bytes\n                encodedStrArr = [];\n                for (i = 0, len = encodedStr.length; i < len; i++) {\n                    chr = encodedStr.charAt(i);\n                    ord = chr.charCodeAt(0);\n                    if (ord >= 0xd800 && ord <= 0xdbff && i < len - 1) {\n                        chr += encodedStr.charAt(i + 1);\n                        encodedStrArr.push(chr);\n                        i++;\n                    } else {\n                        encodedStrArr.push(chr);\n                    }\n                }\n                encodedStr = encodedStrArr;\n            }\n\n            // first line includes the charset and language info and needs to be encoded\n            // even if it does not contain any unicode characters\n            line = 'utf-8\\x27\\x27';\n            let encoded = true;\n            startPos = 0;\n\n            // process text with unicode or special chars\n            for (i = 0, len = encodedStr.length; i < len; i++) {\n                chr = encodedStr[i];\n\n                if (encoded) {\n                    chr = this.safeEncodeURIComponent(chr);\n                } else {\n                    // try to urlencode current char\n                    chr = chr === ' ' ? chr : this.safeEncodeURIComponent(chr);\n                    // By default it is not required to encode a line, the need\n                    // only appears when the string contains unicode or special chars\n                    // in this case we start processing the line over and encode all chars\n                    if (chr !== encodedStr[i]) {\n                        // Check if it is even possible to add the encoded char to the line\n                        // If not, there is no reason to use this line, just push it to the list\n                        // and start a new line with the char that needs encoding\n                        if ((this.safeEncodeURIComponent(line) + chr).length >= maxLength) {\n                            list.push({\n                                line,\n                                encoded\n                            });\n                            line = '';\n                            startPos = i - 1;\n                        } else {\n                            encoded = true;\n                            i = startPos;\n                            line = '';\n                            continue;\n                        }\n                    }\n                }\n\n                // if the line is already too long, push it to the list and start a new one\n                if ((line + chr).length >= maxLength) {\n                    list.push({\n                        line,\n                        encoded\n                    });\n                    line = chr = encodedStr[i] === ' ' ? ' ' : this.safeEncodeURIComponent(encodedStr[i]);\n                    if (chr === encodedStr[i]) {\n                        encoded = false;\n                        startPos = i - 1;\n                    } else {\n                        encoded = true;\n                    }\n                } else {\n                    line += chr;\n                }\n            }\n\n            if (line) {\n                list.push({\n                    line,\n                    encoded\n                });\n            }\n        }\n\n        return list.map((item, i) => ({\n            // encoded lines: {name}*{part}*\n            // unencoded lines: {name}*{part}\n            // if any line needs to be encoded then the first line (part==0) is always encoded\n            key: key + '*' + i + (item.encoded ? '*' : ''),\n            value: item.line\n        }));\n    },\n\n    /**\n     * Parses a header value with key=value arguments into a structured\n     * object.\n     *\n     *   parseHeaderValue('content-type: text/plain; CHARSET='UTF-8'') ->\n     *   {\n     *     'value': 'text/plain',\n     *     'params': {\n     *       'charset': 'UTF-8'\n     *     }\n     *   }\n     *\n     * @param {String} str Header value\n     * @return {Object} Header value as a parsed structure\n     */\n    parseHeaderValue(str) {\n        let response = {\n            value: false,\n            params: {}\n        };\n        let key = false;\n        let value = '';\n        let type = 'value';\n        let quote = false;\n        let escaped = false;\n        let chr;\n\n        for (let i = 0, len = str.length; i < len; i++) {\n            chr = str.charAt(i);\n            if (type === 'key') {\n                if (chr === '=') {\n                    key = value.trim().toLowerCase();\n                    type = 'value';\n                    value = '';\n                    continue;\n                }\n                value += chr;\n            } else {\n                if (escaped) {\n                    value += chr;\n                } else if (chr === '\\\\') {\n                    escaped = true;\n                    continue;\n                } else if (quote && chr === quote) {\n                    quote = false;\n                } else if (!quote && chr === '\"') {\n                    quote = chr;\n                } else if (!quote && chr === ';') {\n                    if (key === false) {\n                        response.value = value.trim();\n                    } else {\n                        response.params[key] = value.trim();\n                    }\n                    type = 'key';\n                    value = '';\n                } else {\n                    value += chr;\n                }\n                escaped = false;\n            }\n        }\n\n        if (type === 'value') {\n            if (key === false) {\n                response.value = value.trim();\n            } else {\n                response.params[key] = value.trim();\n            }\n        } else if (value.trim()) {\n            response.params[value.trim().toLowerCase()] = '';\n        }\n\n        // handle parameter value continuations\n        // https://tools.ietf.org/html/rfc2231#section-3\n\n        // preprocess values\n        Object.keys(response.params).forEach(key => {\n            let actualKey, nr, match, value;\n            if ((match = key.match(/(\\*(\\d+)|\\*(\\d+)\\*|\\*)$/))) {\n                actualKey = key.substr(0, match.index);\n                nr = Number(match[2] || match[3]) || 0;\n\n                if (!response.params[actualKey] || typeof response.params[actualKey] !== 'object') {\n                    response.params[actualKey] = {\n                        charset: false,\n                        values: []\n                    };\n                }\n\n                value = response.params[key];\n\n                if (nr === 0 && match[0].substr(-1) === '*' && (match = value.match(/^([^']*)'[^']*'(.*)$/))) {\n                    response.params[actualKey].charset = match[1] || 'iso-8859-1';\n                    value = match[2];\n                }\n\n                response.params[actualKey].values[nr] = value;\n\n                // remove the old reference\n                delete response.params[key];\n            }\n        });\n\n        // concatenate split rfc2231 strings and convert encoded strings to mime encoded words\n        Object.keys(response.params).forEach(key => {\n            let value;\n            if (response.params[key] && Array.isArray(response.params[key].values)) {\n                value = response.params[key].values.map(val => val || '').join('');\n\n                if (response.params[key].charset) {\n                    // convert \"%AB\" to \"=?charset?Q?=AB?=\"\n                    response.params[key] =\n                        '=?' +\n                        response.params[key].charset +\n                        '?Q?' +\n                        value\n                            // fix invalidly encoded chars\n                            .replace(/[=?_\\s]/g, s => {\n                                let c = s.charCodeAt(0).toString(16);\n                                if (s === ' ') {\n                                    return '_';\n                                } else {\n                                    return '%' + (c.length < 2 ? '0' : '') + c;\n                                }\n                            })\n                            // change from urlencoding to percent encoding\n                            .replace(/%/g, '=') +\n                        '?=';\n                } else {\n                    response.params[key] = value;\n                }\n            }\n        });\n\n        return response;\n    },\n\n    /**\n     * Returns file extension for a content type string. If no suitable extensions\n     * are found, 'bin' is used as the default extension\n     *\n     * @param {String} mimeType Content type to be checked for\n     * @return {String} File extension\n     */\n    detectExtension: mimeType => mimeTypes.detectExtension(mimeType),\n\n    /**\n     * Returns content type for a file extension. If no suitable content types\n     * are found, 'application/octet-stream' is used as the default content type\n     *\n     * @param {String} extension Extension to be checked for\n     * @return {String} File extension\n     */\n    detectMimeType: extension => mimeTypes.detectMimeType(extension),\n\n    /**\n     * Folds long lines, useful for folding header lines (afterSpace=false) and\n     * flowed text (afterSpace=true)\n     *\n     * @param {String} str String to be folded\n     * @param {Number} [lineLength=76] Maximum length of a line\n     * @param {Boolean} afterSpace If true, leave a space in th end of a line\n     * @return {String} String with folded lines\n     */\n    foldLines(str, lineLength, afterSpace) {\n        str = (str || '').toString();\n        lineLength = lineLength || 76;\n\n        let pos = 0,\n            len = str.length,\n            result = '',\n            line,\n            match;\n\n        while (pos < len) {\n            line = str.substr(pos, lineLength);\n            if (line.length < lineLength) {\n                result += line;\n                break;\n            }\n            if ((match = line.match(/^[^\\n\\r]*(\\r?\\n|\\r)/))) {\n                line = match[0];\n                result += line;\n                pos += line.length;\n                continue;\n            } else if ((match = line.match(/(\\s+)[^\\s]*$/)) && match[0].length - (afterSpace ? (match[1] || '').length : 0) < line.length) {\n                line = line.substr(0, line.length - (match[0].length - (afterSpace ? (match[1] || '').length : 0)));\n            } else if ((match = str.substr(pos + line.length).match(/^[^\\s]+(\\s*)/))) {\n                line = line + match[0].substr(0, match[0].length - (!afterSpace ? (match[1] || '').length : 0));\n            }\n\n            result += line;\n            pos += line.length;\n            if (pos < len) {\n                result += '\\r\\n';\n            }\n        }\n\n        return result;\n    },\n\n    /**\n     * Splits a mime encoded string. Needed for dividing mime words into smaller chunks\n     *\n     * @param {String} str Mime encoded string to be split up\n     * @param {Number} maxlen Maximum length of characters for one part (minimum 12)\n     * @return {Array} Split string\n     */\n    splitMimeEncodedString: (str, maxlen) => {\n        let curLine,\n            match,\n            chr,\n            done,\n            lines = [];\n\n        // require at least 12 symbols to fit possible 4 octet UTF-8 sequences\n        maxlen = Math.max(maxlen || 0, 12);\n\n        while (str.length) {\n            curLine = str.substr(0, maxlen);\n\n            // move incomplete escaped char back to main\n            if ((match = curLine.match(/[=][0-9A-F]?$/i))) {\n                curLine = curLine.substr(0, match.index);\n            }\n\n            done = false;\n            while (!done) {\n                done = true;\n                // check if not middle of a unicode char sequence\n                if ((match = str.substr(curLine.length).match(/^[=]([0-9A-F]{2})/i))) {\n                    chr = parseInt(match[1], 16);\n                    // invalid sequence, move one char back anc recheck\n                    if (chr < 0xc2 && chr > 0x7f) {\n                        curLine = curLine.substr(0, curLine.length - 3);\n                        done = false;\n                    }\n                }\n            }\n\n            if (curLine.length) {\n                lines.push(curLine);\n            }\n            str = str.substr(curLine.length);\n        }\n\n        return lines;\n    },\n\n    encodeURICharComponent: chr => {\n        let res = '';\n        let ord = chr.charCodeAt(0).toString(16).toUpperCase();\n\n        if (ord.length % 2) {\n            ord = '0' + ord;\n        }\n\n        if (ord.length > 2) {\n            for (let i = 0, len = ord.length / 2; i < len; i++) {\n                res += '%' + ord.substr(i, 2);\n            }\n        } else {\n            res += '%' + ord;\n        }\n\n        return res;\n    },\n\n    safeEncodeURIComponent(str) {\n        str = (str || '').toString();\n\n        try {\n            // might throw if we try to encode invalid sequences, eg. partial emoji\n            str = encodeURIComponent(str);\n        } catch (E) {\n            // should never run\n            return str.replace(/[^\\x00-\\x1F *'()<>@,;:\\\\\"[\\]?=\\u007F-\\uFFFF]+/g, '');\n        }\n\n        // ensure chars that are not handled by encodeURICompent are converted as well\n        return str.replace(/[\\x00-\\x1F *'()<>@,;:\\\\\"[\\]?=\\u007F-\\uFFFF]/g, chr => this.encodeURICharComponent(chr));\n    }\n};\n","/* eslint quote-props: 0 */\n\n'use strict';\n\nconst path = require('path');\n\nconst defaultMimeType = 'application/octet-stream';\nconst defaultExtension = 'bin';\n\nconst mimeTypes = new Map([\n    ['application/acad', 'dwg'],\n    ['application/applixware', 'aw'],\n    ['application/arj', 'arj'],\n    ['application/atom+xml', 'xml'],\n    ['application/atomcat+xml', 'atomcat'],\n    ['application/atomsvc+xml', 'atomsvc'],\n    ['application/base64', ['mm', 'mme']],\n    ['application/binhex', 'hqx'],\n    ['application/binhex4', 'hqx'],\n    ['application/book', ['book', 'boo']],\n    ['application/ccxml+xml,', 'ccxml'],\n    ['application/cdf', 'cdf'],\n    ['application/cdmi-capability', 'cdmia'],\n    ['application/cdmi-container', 'cdmic'],\n    ['application/cdmi-domain', 'cdmid'],\n    ['application/cdmi-object', 'cdmio'],\n    ['application/cdmi-queue', 'cdmiq'],\n    ['application/clariscad', 'ccad'],\n    ['application/commonground', 'dp'],\n    ['application/cu-seeme', 'cu'],\n    ['application/davmount+xml', 'davmount'],\n    ['application/drafting', 'drw'],\n    ['application/dsptype', 'tsp'],\n    ['application/dssc+der', 'dssc'],\n    ['application/dssc+xml', 'xdssc'],\n    ['application/dxf', 'dxf'],\n    ['application/ecmascript', ['js', 'es']],\n    ['application/emma+xml', 'emma'],\n    ['application/envoy', 'evy'],\n    ['application/epub+zip', 'epub'],\n    ['application/excel', ['xls', 'xl', 'xla', 'xlb', 'xlc', 'xld', 'xlk', 'xll', 'xlm', 'xlt', 'xlv', 'xlw']],\n    ['application/exi', 'exi'],\n    ['application/font-tdpfr', 'pfr'],\n    ['application/fractals', 'fif'],\n    ['application/freeloader', 'frl'],\n    ['application/futuresplash', 'spl'],\n    ['application/gnutar', 'tgz'],\n    ['application/groupwise', 'vew'],\n    ['application/hlp', 'hlp'],\n    ['application/hta', 'hta'],\n    ['application/hyperstudio', 'stk'],\n    ['application/i-deas', 'unv'],\n    ['application/iges', ['iges', 'igs']],\n    ['application/inf', 'inf'],\n    ['application/internet-property-stream', 'acx'],\n    ['application/ipfix', 'ipfix'],\n    ['application/java', 'class'],\n    ['application/java-archive', 'jar'],\n    ['application/java-byte-code', 'class'],\n    ['application/java-serialized-object', 'ser'],\n    ['application/java-vm', 'class'],\n    ['application/javascript', 'js'],\n    ['application/json', 'json'],\n    ['application/lha', 'lha'],\n    ['application/lzx', 'lzx'],\n    ['application/mac-binary', 'bin'],\n    ['application/mac-binhex', 'hqx'],\n    ['application/mac-binhex40', 'hqx'],\n    ['application/mac-compactpro', 'cpt'],\n    ['application/macbinary', 'bin'],\n    ['application/mads+xml', 'mads'],\n    ['application/marc', 'mrc'],\n    ['application/marcxml+xml', 'mrcx'],\n    ['application/mathematica', 'ma'],\n    ['application/mathml+xml', 'mathml'],\n    ['application/mbedlet', 'mbd'],\n    ['application/mbox', 'mbox'],\n    ['application/mcad', 'mcd'],\n    ['application/mediaservercontrol+xml', 'mscml'],\n    ['application/metalink4+xml', 'meta4'],\n    ['application/mets+xml', 'mets'],\n    ['application/mime', 'aps'],\n    ['application/mods+xml', 'mods'],\n    ['application/mp21', 'm21'],\n    ['application/mp4', 'mp4'],\n    ['application/mspowerpoint', ['ppt', 'pot', 'pps', 'ppz']],\n    ['application/msword', ['doc', 'dot', 'w6w', 'wiz', 'word']],\n    ['application/mswrite', 'wri'],\n    ['application/mxf', 'mxf'],\n    ['application/netmc', 'mcp'],\n    ['application/octet-stream', ['*']],\n    ['application/oda', 'oda'],\n    ['application/oebps-package+xml', 'opf'],\n    ['application/ogg', 'ogx'],\n    ['application/olescript', 'axs'],\n    ['application/onenote', 'onetoc'],\n    ['application/patch-ops-error+xml', 'xer'],\n    ['application/pdf', 'pdf'],\n    ['application/pgp-encrypted', 'asc'],\n    ['application/pgp-signature', 'pgp'],\n    ['application/pics-rules', 'prf'],\n    ['application/pkcs-12', 'p12'],\n    ['application/pkcs-crl', 'crl'],\n    ['application/pkcs10', 'p10'],\n    ['application/pkcs7-mime', ['p7c', 'p7m']],\n    ['application/pkcs7-signature', 'p7s'],\n    ['application/pkcs8', 'p8'],\n    ['application/pkix-attr-cert', 'ac'],\n    ['application/pkix-cert', ['cer', 'crt']],\n    ['application/pkix-crl', 'crl'],\n    ['application/pkix-pkipath', 'pkipath'],\n    ['application/pkixcmp', 'pki'],\n    ['application/plain', 'text'],\n    ['application/pls+xml', 'pls'],\n    ['application/postscript', ['ps', 'ai', 'eps']],\n    ['application/powerpoint', 'ppt'],\n    ['application/pro_eng', ['part', 'prt']],\n    ['application/prs.cww', 'cww'],\n    ['application/pskc+xml', 'pskcxml'],\n    ['application/rdf+xml', 'rdf'],\n    ['application/reginfo+xml', 'rif'],\n    ['application/relax-ng-compact-syntax', 'rnc'],\n    ['application/resource-lists+xml', 'rl'],\n    ['application/resource-lists-diff+xml', 'rld'],\n    ['application/ringing-tones', 'rng'],\n    ['application/rls-services+xml', 'rs'],\n    ['application/rsd+xml', 'rsd'],\n    ['application/rss+xml', 'xml'],\n    ['application/rtf', ['rtf', 'rtx']],\n    ['application/sbml+xml', 'sbml'],\n    ['application/scvp-cv-request', 'scq'],\n    ['application/scvp-cv-response', 'scs'],\n    ['application/scvp-vp-request', 'spq'],\n    ['application/scvp-vp-response', 'spp'],\n    ['application/sdp', 'sdp'],\n    ['application/sea', 'sea'],\n    ['application/set', 'set'],\n    ['application/set-payment-initiation', 'setpay'],\n    ['application/set-registration-initiation', 'setreg'],\n    ['application/shf+xml', 'shf'],\n    ['application/sla', 'stl'],\n    ['application/smil', ['smi', 'smil']],\n    ['application/smil+xml', 'smi'],\n    ['application/solids', 'sol'],\n    ['application/sounder', 'sdr'],\n    ['application/sparql-query', 'rq'],\n    ['application/sparql-results+xml', 'srx'],\n    ['application/srgs', 'gram'],\n    ['application/srgs+xml', 'grxml'],\n    ['application/sru+xml', 'sru'],\n    ['application/ssml+xml', 'ssml'],\n    ['application/step', ['step', 'stp']],\n    ['application/streamingmedia', 'ssm'],\n    ['application/tei+xml', 'tei'],\n    ['application/thraud+xml', 'tfi'],\n    ['application/timestamped-data', 'tsd'],\n    ['application/toolbook', 'tbk'],\n    ['application/vda', 'vda'],\n    ['application/vnd.3gpp.pic-bw-large', 'plb'],\n    ['application/vnd.3gpp.pic-bw-small', 'psb'],\n    ['application/vnd.3gpp.pic-bw-var', 'pvb'],\n    ['application/vnd.3gpp2.tcap', 'tcap'],\n    ['application/vnd.3m.post-it-notes', 'pwn'],\n    ['application/vnd.accpac.simply.aso', 'aso'],\n    ['application/vnd.accpac.simply.imp', 'imp'],\n    ['application/vnd.acucobol', 'acu'],\n    ['application/vnd.acucorp', 'atc'],\n    ['application/vnd.adobe.air-application-installer-package+zip', 'air'],\n    ['application/vnd.adobe.fxp', 'fxp'],\n    ['application/vnd.adobe.xdp+xml', 'xdp'],\n    ['application/vnd.adobe.xfdf', 'xfdf'],\n    ['application/vnd.ahead.space', 'ahead'],\n    ['application/vnd.airzip.filesecure.azf', 'azf'],\n    ['application/vnd.airzip.filesecure.azs', 'azs'],\n    ['application/vnd.amazon.ebook', 'azw'],\n    ['application/vnd.americandynamics.acc', 'acc'],\n    ['application/vnd.amiga.ami', 'ami'],\n    ['application/vnd.android.package-archive', 'apk'],\n    ['application/vnd.anser-web-certificate-issue-initiation', 'cii'],\n    ['application/vnd.anser-web-funds-transfer-initiation', 'fti'],\n    ['application/vnd.antix.game-component', 'atx'],\n    ['application/vnd.apple.installer+xml', 'mpkg'],\n    ['application/vnd.apple.mpegurl', 'm3u8'],\n    ['application/vnd.aristanetworks.swi', 'swi'],\n    ['application/vnd.audiograph', 'aep'],\n    ['application/vnd.blueice.multipass', 'mpm'],\n    ['application/vnd.bmi', 'bmi'],\n    ['application/vnd.businessobjects', 'rep'],\n    ['application/vnd.chemdraw+xml', 'cdxml'],\n    ['application/vnd.chipnuts.karaoke-mmd', 'mmd'],\n    ['application/vnd.cinderella', 'cdy'],\n    ['application/vnd.claymore', 'cla'],\n    ['application/vnd.cloanto.rp9', 'rp9'],\n    ['application/vnd.clonk.c4group', 'c4g'],\n    ['application/vnd.cluetrust.cartomobile-config', 'c11amc'],\n    ['application/vnd.cluetrust.cartomobile-config-pkg', 'c11amz'],\n    ['application/vnd.commonspace', 'csp'],\n    ['application/vnd.contact.cmsg', 'cdbcmsg'],\n    ['application/vnd.cosmocaller', 'cmc'],\n    ['application/vnd.crick.clicker', 'clkx'],\n    ['application/vnd.crick.clicker.keyboard', 'clkk'],\n    ['application/vnd.crick.clicker.palette', 'clkp'],\n    ['application/vnd.crick.clicker.template', 'clkt'],\n    ['application/vnd.crick.clicker.wordbank', 'clkw'],\n    ['application/vnd.criticaltools.wbs+xml', 'wbs'],\n    ['application/vnd.ctc-posml', 'pml'],\n    ['application/vnd.cups-ppd', 'ppd'],\n    ['application/vnd.curl.car', 'car'],\n    ['application/vnd.curl.pcurl', 'pcurl'],\n    ['application/vnd.data-vision.rdz', 'rdz'],\n    ['application/vnd.denovo.fcselayout-link', 'fe_launch'],\n    ['application/vnd.dna', 'dna'],\n    ['application/vnd.dolby.mlp', 'mlp'],\n    ['application/vnd.dpgraph', 'dpg'],\n    ['application/vnd.dreamfactory', 'dfac'],\n    ['application/vnd.dvb.ait', 'ait'],\n    ['application/vnd.dvb.service', 'svc'],\n    ['application/vnd.dynageo', 'geo'],\n    ['application/vnd.ecowin.chart', 'mag'],\n    ['application/vnd.enliven', 'nml'],\n    ['application/vnd.epson.esf', 'esf'],\n    ['application/vnd.epson.msf', 'msf'],\n    ['application/vnd.epson.quickanime', 'qam'],\n    ['application/vnd.epson.salt', 'slt'],\n    ['application/vnd.epson.ssf', 'ssf'],\n    ['application/vnd.eszigno3+xml', 'es3'],\n    ['application/vnd.ezpix-album', 'ez2'],\n    ['application/vnd.ezpix-package', 'ez3'],\n    ['application/vnd.fdf', 'fdf'],\n    ['application/vnd.fdsn.seed', 'seed'],\n    ['application/vnd.flographit', 'gph'],\n    ['application/vnd.fluxtime.clip', 'ftc'],\n    ['application/vnd.framemaker', 'fm'],\n    ['application/vnd.frogans.fnc', 'fnc'],\n    ['application/vnd.frogans.ltf', 'ltf'],\n    ['application/vnd.fsc.weblaunch', 'fsc'],\n    ['application/vnd.fujitsu.oasys', 'oas'],\n    ['application/vnd.fujitsu.oasys2', 'oa2'],\n    ['application/vnd.fujitsu.oasys3', 'oa3'],\n    ['application/vnd.fujitsu.oasysgp', 'fg5'],\n    ['application/vnd.fujitsu.oasysprs', 'bh2'],\n    ['application/vnd.fujixerox.ddd', 'ddd'],\n    ['application/vnd.fujixerox.docuworks', 'xdw'],\n    ['application/vnd.fujixerox.docuworks.binder', 'xbd'],\n    ['application/vnd.fuzzysheet', 'fzs'],\n    ['application/vnd.genomatix.tuxedo', 'txd'],\n    ['application/vnd.geogebra.file', 'ggb'],\n    ['application/vnd.geogebra.tool', 'ggt'],\n    ['application/vnd.geometry-explorer', 'gex'],\n    ['application/vnd.geonext', 'gxt'],\n    ['application/vnd.geoplan', 'g2w'],\n    ['application/vnd.geospace', 'g3w'],\n    ['application/vnd.gmx', 'gmx'],\n    ['application/vnd.google-earth.kml+xml', 'kml'],\n    ['application/vnd.google-earth.kmz', 'kmz'],\n    ['application/vnd.grafeq', 'gqf'],\n    ['application/vnd.groove-account', 'gac'],\n    ['application/vnd.groove-help', 'ghf'],\n    ['application/vnd.groove-identity-message', 'gim'],\n    ['application/vnd.groove-injector', 'grv'],\n    ['application/vnd.groove-tool-message', 'gtm'],\n    ['application/vnd.groove-tool-template', 'tpl'],\n    ['application/vnd.groove-vcard', 'vcg'],\n    ['application/vnd.hal+xml', 'hal'],\n    ['application/vnd.handheld-entertainment+xml', 'zmm'],\n    ['application/vnd.hbci', 'hbci'],\n    ['application/vnd.hhe.lesson-player', 'les'],\n    ['application/vnd.hp-hpgl', ['hgl', 'hpg', 'hpgl']],\n    ['application/vnd.hp-hpid', 'hpid'],\n    ['application/vnd.hp-hps', 'hps'],\n    ['application/vnd.hp-jlyt', 'jlt'],\n    ['application/vnd.hp-pcl', 'pcl'],\n    ['application/vnd.hp-pclxl', 'pclxl'],\n    ['application/vnd.hydrostatix.sof-data', 'sfd-hdstx'],\n    ['application/vnd.hzn-3d-crossword', 'x3d'],\n    ['application/vnd.ibm.minipay', 'mpy'],\n    ['application/vnd.ibm.modcap', 'afp'],\n    ['application/vnd.ibm.rights-management', 'irm'],\n    ['application/vnd.ibm.secure-container', 'sc'],\n    ['application/vnd.iccprofile', 'icc'],\n    ['application/vnd.igloader', 'igl'],\n    ['application/vnd.immervision-ivp', 'ivp'],\n    ['application/vnd.immervision-ivu', 'ivu'],\n    ['application/vnd.insors.igm', 'igm'],\n    ['application/vnd.intercon.formnet', 'xpw'],\n    ['application/vnd.intergeo', 'i2g'],\n    ['application/vnd.intu.qbo', 'qbo'],\n    ['application/vnd.intu.qfx', 'qfx'],\n    ['application/vnd.ipunplugged.rcprofile', 'rcprofile'],\n    ['application/vnd.irepository.package+xml', 'irp'],\n    ['application/vnd.is-xpr', 'xpr'],\n    ['application/vnd.isac.fcs', 'fcs'],\n    ['application/vnd.jam', 'jam'],\n    ['application/vnd.jcp.javame.midlet-rms', 'rms'],\n    ['application/vnd.jisp', 'jisp'],\n    ['application/vnd.joost.joda-archive', 'joda'],\n    ['application/vnd.kahootz', 'ktz'],\n    ['application/vnd.kde.karbon', 'karbon'],\n    ['application/vnd.kde.kchart', 'chrt'],\n    ['application/vnd.kde.kformula', 'kfo'],\n    ['application/vnd.kde.kivio', 'flw'],\n    ['application/vnd.kde.kontour', 'kon'],\n    ['application/vnd.kde.kpresenter', 'kpr'],\n    ['application/vnd.kde.kspread', 'ksp'],\n    ['application/vnd.kde.kword', 'kwd'],\n    ['application/vnd.kenameaapp', 'htke'],\n    ['application/vnd.kidspiration', 'kia'],\n    ['application/vnd.kinar', 'kne'],\n    ['application/vnd.koan', 'skp'],\n    ['application/vnd.kodak-descriptor', 'sse'],\n    ['application/vnd.las.las+xml', 'lasxml'],\n    ['application/vnd.llamagraphics.life-balance.desktop', 'lbd'],\n    ['application/vnd.llamagraphics.life-balance.exchange+xml', 'lbe'],\n    ['application/vnd.lotus-1-2-3', '123'],\n    ['application/vnd.lotus-approach', 'apr'],\n    ['application/vnd.lotus-freelance', 'pre'],\n    ['application/vnd.lotus-notes', 'nsf'],\n    ['application/vnd.lotus-organizer', 'org'],\n    ['application/vnd.lotus-screencam', 'scm'],\n    ['application/vnd.lotus-wordpro', 'lwp'],\n    ['application/vnd.macports.portpkg', 'portpkg'],\n    ['application/vnd.mcd', 'mcd'],\n    ['application/vnd.medcalcdata', 'mc1'],\n    ['application/vnd.mediastation.cdkey', 'cdkey'],\n    ['application/vnd.mfer', 'mwf'],\n    ['application/vnd.mfmp', 'mfm'],\n    ['application/vnd.micrografx.flo', 'flo'],\n    ['application/vnd.micrografx.igx', 'igx'],\n    ['application/vnd.mif', 'mif'],\n    ['application/vnd.mobius.daf', 'daf'],\n    ['application/vnd.mobius.dis', 'dis'],\n    ['application/vnd.mobius.mbk', 'mbk'],\n    ['application/vnd.mobius.mqy', 'mqy'],\n    ['application/vnd.mobius.msl', 'msl'],\n    ['application/vnd.mobius.plc', 'plc'],\n    ['application/vnd.mobius.txf', 'txf'],\n    ['application/vnd.mophun.application', 'mpn'],\n    ['application/vnd.mophun.certificate', 'mpc'],\n    ['application/vnd.mozilla.xul+xml', 'xul'],\n    ['application/vnd.ms-artgalry', 'cil'],\n    ['application/vnd.ms-cab-compressed', 'cab'],\n    ['application/vnd.ms-excel', ['xls', 'xla', 'xlc', 'xlm', 'xlt', 'xlw', 'xlb', 'xll']],\n    ['application/vnd.ms-excel.addin.macroenabled.12', 'xlam'],\n    ['application/vnd.ms-excel.sheet.binary.macroenabled.12', 'xlsb'],\n    ['application/vnd.ms-excel.sheet.macroenabled.12', 'xlsm'],\n    ['application/vnd.ms-excel.template.macroenabled.12', 'xltm'],\n    ['application/vnd.ms-fontobject', 'eot'],\n    ['application/vnd.ms-htmlhelp', 'chm'],\n    ['application/vnd.ms-ims', 'ims'],\n    ['application/vnd.ms-lrm', 'lrm'],\n    ['application/vnd.ms-officetheme', 'thmx'],\n    ['application/vnd.ms-outlook', 'msg'],\n    ['application/vnd.ms-pki.certstore', 'sst'],\n    ['application/vnd.ms-pki.pko', 'pko'],\n    ['application/vnd.ms-pki.seccat', 'cat'],\n    ['application/vnd.ms-pki.stl', 'stl'],\n    ['application/vnd.ms-pkicertstore', 'sst'],\n    ['application/vnd.ms-pkiseccat', 'cat'],\n    ['application/vnd.ms-pkistl', 'stl'],\n    ['application/vnd.ms-powerpoint', ['ppt', 'pot', 'pps', 'ppa', 'pwz']],\n    ['application/vnd.ms-powerpoint.addin.macroenabled.12', 'ppam'],\n    ['application/vnd.ms-powerpoint.presentation.macroenabled.12', 'pptm'],\n    ['application/vnd.ms-powerpoint.slide.macroenabled.12', 'sldm'],\n    ['application/vnd.ms-powerpoint.slideshow.macroenabled.12', 'ppsm'],\n    ['application/vnd.ms-powerpoint.template.macroenabled.12', 'potm'],\n    ['application/vnd.ms-project', 'mpp'],\n    ['application/vnd.ms-word.document.macroenabled.12', 'docm'],\n    ['application/vnd.ms-word.template.macroenabled.12', 'dotm'],\n    ['application/vnd.ms-works', ['wks', 'wcm', 'wdb', 'wps']],\n    ['application/vnd.ms-wpl', 'wpl'],\n    ['application/vnd.ms-xpsdocument', 'xps'],\n    ['application/vnd.mseq', 'mseq'],\n    ['application/vnd.musician', 'mus'],\n    ['application/vnd.muvee.style', 'msty'],\n    ['application/vnd.neurolanguage.nlu', 'nlu'],\n    ['application/vnd.noblenet-directory', 'nnd'],\n    ['application/vnd.noblenet-sealer', 'nns'],\n    ['application/vnd.noblenet-web', 'nnw'],\n    ['application/vnd.nokia.configuration-message', 'ncm'],\n    ['application/vnd.nokia.n-gage.data', 'ngdat'],\n    ['application/vnd.nokia.n-gage.symbian.install', 'n-gage'],\n    ['application/vnd.nokia.radio-preset', 'rpst'],\n    ['application/vnd.nokia.radio-presets', 'rpss'],\n    ['application/vnd.nokia.ringing-tone', 'rng'],\n    ['application/vnd.novadigm.edm', 'edm'],\n    ['application/vnd.novadigm.edx', 'edx'],\n    ['application/vnd.novadigm.ext', 'ext'],\n    ['application/vnd.oasis.opendocument.chart', 'odc'],\n    ['application/vnd.oasis.opendocument.chart-template', 'otc'],\n    ['application/vnd.oasis.opendocument.database', 'odb'],\n    ['application/vnd.oasis.opendocument.formula', 'odf'],\n    ['application/vnd.oasis.opendocument.formula-template', 'odft'],\n    ['application/vnd.oasis.opendocument.graphics', 'odg'],\n    ['application/vnd.oasis.opendocument.graphics-template', 'otg'],\n    ['application/vnd.oasis.opendocument.image', 'odi'],\n    ['application/vnd.oasis.opendocument.image-template', 'oti'],\n    ['application/vnd.oasis.opendocument.presentation', 'odp'],\n    ['application/vnd.oasis.opendocument.presentation-template', 'otp'],\n    ['application/vnd.oasis.opendocument.spreadsheet', 'ods'],\n    ['application/vnd.oasis.opendocument.spreadsheet-template', 'ots'],\n    ['application/vnd.oasis.opendocument.text', 'odt'],\n    ['application/vnd.oasis.opendocument.text-master', 'odm'],\n    ['application/vnd.oasis.opendocument.text-template', 'ott'],\n    ['application/vnd.oasis.opendocument.text-web', 'oth'],\n    ['application/vnd.olpc-sugar', 'xo'],\n    ['application/vnd.oma.dd2+xml', 'dd2'],\n    ['application/vnd.openofficeorg.extension', 'oxt'],\n    ['application/vnd.openxmlformats-officedocument.presentationml.presentation', 'pptx'],\n    ['application/vnd.openxmlformats-officedocument.presentationml.slide', 'sldx'],\n    ['application/vnd.openxmlformats-officedocument.presentationml.slideshow', 'ppsx'],\n    ['application/vnd.openxmlformats-officedocument.presentationml.template', 'potx'],\n    ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'xlsx'],\n    ['application/vnd.openxmlformats-officedocument.spreadsheetml.template', 'xltx'],\n    ['application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'docx'],\n    ['application/vnd.openxmlformats-officedocument.wordprocessingml.template', 'dotx'],\n    ['application/vnd.osgeo.mapguide.package', 'mgp'],\n    ['application/vnd.osgi.dp', 'dp'],\n    ['application/vnd.palm', 'pdb'],\n    ['application/vnd.pawaafile', 'paw'],\n    ['application/vnd.pg.format', 'str'],\n    ['application/vnd.pg.osasli', 'ei6'],\n    ['application/vnd.picsel', 'efif'],\n    ['application/vnd.pmi.widget', 'wg'],\n    ['application/vnd.pocketlearn', 'plf'],\n    ['application/vnd.powerbuilder6', 'pbd'],\n    ['application/vnd.previewsystems.box', 'box'],\n    ['application/vnd.proteus.magazine', 'mgz'],\n    ['application/vnd.publishare-delta-tree', 'qps'],\n    ['application/vnd.pvi.ptid1', 'ptid'],\n    ['application/vnd.quark.quarkxpress', 'qxd'],\n    ['application/vnd.realvnc.bed', 'bed'],\n    ['application/vnd.recordare.musicxml', 'mxl'],\n    ['application/vnd.recordare.musicxml+xml', 'musicxml'],\n    ['application/vnd.rig.cryptonote', 'cryptonote'],\n    ['application/vnd.rim.cod', 'cod'],\n    ['application/vnd.rn-realmedia', 'rm'],\n    ['application/vnd.rn-realplayer', 'rnx'],\n    ['application/vnd.route66.link66+xml', 'link66'],\n    ['application/vnd.sailingtracker.track', 'st'],\n    ['application/vnd.seemail', 'see'],\n    ['application/vnd.sema', 'sema'],\n    ['application/vnd.semd', 'semd'],\n    ['application/vnd.semf', 'semf'],\n    ['application/vnd.shana.informed.formdata', 'ifm'],\n    ['application/vnd.shana.informed.formtemplate', 'itp'],\n    ['application/vnd.shana.informed.interchange', 'iif'],\n    ['application/vnd.shana.informed.package', 'ipk'],\n    ['application/vnd.simtech-mindmapper', 'twd'],\n    ['application/vnd.smaf', 'mmf'],\n    ['application/vnd.smart.teacher', 'teacher'],\n    ['application/vnd.solent.sdkm+xml', 'sdkm'],\n    ['application/vnd.spotfire.dxp', 'dxp'],\n    ['application/vnd.spotfire.sfs', 'sfs'],\n    ['application/vnd.stardivision.calc', 'sdc'],\n    ['application/vnd.stardivision.draw', 'sda'],\n    ['application/vnd.stardivision.impress', 'sdd'],\n    ['application/vnd.stardivision.math', 'smf'],\n    ['application/vnd.stardivision.writer', 'sdw'],\n    ['application/vnd.stardivision.writer-global', 'sgl'],\n    ['application/vnd.stepmania.stepchart', 'sm'],\n    ['application/vnd.sun.xml.calc', 'sxc'],\n    ['application/vnd.sun.xml.calc.template', 'stc'],\n    ['application/vnd.sun.xml.draw', 'sxd'],\n    ['application/vnd.sun.xml.draw.template', 'std'],\n    ['application/vnd.sun.xml.impress', 'sxi'],\n    ['application/vnd.sun.xml.impress.template', 'sti'],\n    ['application/vnd.sun.xml.math', 'sxm'],\n    ['application/vnd.sun.xml.writer', 'sxw'],\n    ['application/vnd.sun.xml.writer.global', 'sxg'],\n    ['application/vnd.sun.xml.writer.template', 'stw'],\n    ['application/vnd.sus-calendar', 'sus'],\n    ['application/vnd.svd', 'svd'],\n    ['application/vnd.symbian.install', 'sis'],\n    ['application/vnd.syncml+xml', 'xsm'],\n    ['application/vnd.syncml.dm+wbxml', 'bdm'],\n    ['application/vnd.syncml.dm+xml', 'xdm'],\n    ['application/vnd.tao.intent-module-archive', 'tao'],\n    ['application/vnd.tmobile-livetv', 'tmo'],\n    ['application/vnd.trid.tpt', 'tpt'],\n    ['application/vnd.triscape.mxs', 'mxs'],\n    ['application/vnd.trueapp', 'tra'],\n    ['application/vnd.ufdl', 'ufd'],\n    ['application/vnd.uiq.theme', 'utz'],\n    ['application/vnd.umajin', 'umj'],\n    ['application/vnd.unity', 'unityweb'],\n    ['application/vnd.uoml+xml', 'uoml'],\n    ['application/vnd.vcx', 'vcx'],\n    ['application/vnd.visio', 'vsd'],\n    ['application/vnd.visionary', 'vis'],\n    ['application/vnd.vsf', 'vsf'],\n    ['application/vnd.wap.wbxml', 'wbxml'],\n    ['application/vnd.wap.wmlc', 'wmlc'],\n    ['application/vnd.wap.wmlscriptc', 'wmlsc'],\n    ['application/vnd.webturbo', 'wtb'],\n    ['application/vnd.wolfram.player', 'nbp'],\n    ['application/vnd.wordperfect', 'wpd'],\n    ['application/vnd.wqd', 'wqd'],\n    ['application/vnd.wt.stf', 'stf'],\n    ['application/vnd.xara', ['web', 'xar']],\n    ['application/vnd.xfdl', 'xfdl'],\n    ['application/vnd.yamaha.hv-dic', 'hvd'],\n    ['application/vnd.yamaha.hv-script', 'hvs'],\n    ['application/vnd.yamaha.hv-voice', 'hvp'],\n    ['application/vnd.yamaha.openscoreformat', 'osf'],\n    ['application/vnd.yamaha.openscoreformat.osfpvg+xml', 'osfpvg'],\n    ['application/vnd.yamaha.smaf-audio', 'saf'],\n    ['application/vnd.yamaha.smaf-phrase', 'spf'],\n    ['application/vnd.yellowriver-custom-menu', 'cmp'],\n    ['application/vnd.zul', 'zir'],\n    ['application/vnd.zzazz.deck+xml', 'zaz'],\n    ['application/vocaltec-media-desc', 'vmd'],\n    ['application/vocaltec-media-file', 'vmf'],\n    ['application/voicexml+xml', 'vxml'],\n    ['application/widget', 'wgt'],\n    ['application/winhlp', 'hlp'],\n    ['application/wordperfect', ['wp', 'wp5', 'wp6', 'wpd']],\n    ['application/wordperfect6.0', ['w60', 'wp5']],\n    ['application/wordperfect6.1', 'w61'],\n    ['application/wsdl+xml', 'wsdl'],\n    ['application/wspolicy+xml', 'wspolicy'],\n    ['application/x-123', 'wk1'],\n    ['application/x-7z-compressed', '7z'],\n    ['application/x-abiword', 'abw'],\n    ['application/x-ace-compressed', 'ace'],\n    ['application/x-aim', 'aim'],\n    ['application/x-authorware-bin', 'aab'],\n    ['application/x-authorware-map', 'aam'],\n    ['application/x-authorware-seg', 'aas'],\n    ['application/x-bcpio', 'bcpio'],\n    ['application/x-binary', 'bin'],\n    ['application/x-binhex40', 'hqx'],\n    ['application/x-bittorrent', 'torrent'],\n    ['application/x-bsh', ['bsh', 'sh', 'shar']],\n    ['application/x-bytecode.elisp', 'elc'],\n    ['applicaiton/x-bytecode.python', 'pyc'],\n    ['application/x-bzip', 'bz'],\n    ['application/x-bzip2', ['boz', 'bz2']],\n    ['application/x-cdf', 'cdf'],\n    ['application/x-cdlink', 'vcd'],\n    ['application/x-chat', ['cha', 'chat']],\n    ['application/x-chess-pgn', 'pgn'],\n    ['application/x-cmu-raster', 'ras'],\n    ['application/x-cocoa', 'cco'],\n    ['application/x-compactpro', 'cpt'],\n    ['application/x-compress', 'z'],\n    ['application/x-compressed', ['tgz', 'gz', 'z', 'zip']],\n    ['application/x-conference', 'nsc'],\n    ['application/x-cpio', 'cpio'],\n    ['application/x-cpt', 'cpt'],\n    ['application/x-csh', 'csh'],\n    ['application/x-debian-package', 'deb'],\n    ['application/x-deepv', 'deepv'],\n    ['application/x-director', ['dir', 'dcr', 'dxr']],\n    ['application/x-doom', 'wad'],\n    ['application/x-dtbncx+xml', 'ncx'],\n    ['application/x-dtbook+xml', 'dtb'],\n    ['application/x-dtbresource+xml', 'res'],\n    ['application/x-dvi', 'dvi'],\n    ['application/x-elc', 'elc'],\n    ['application/x-envoy', ['env', 'evy']],\n    ['application/x-esrehber', 'es'],\n    ['application/x-excel', ['xls', 'xla', 'xlb', 'xlc', 'xld', 'xlk', 'xll', 'xlm', 'xlt', 'xlv', 'xlw']],\n    ['application/x-font-bdf', 'bdf'],\n    ['application/x-font-ghostscript', 'gsf'],\n    ['application/x-font-linux-psf', 'psf'],\n    ['application/x-font-otf', 'otf'],\n    ['application/x-font-pcf', 'pcf'],\n    ['application/x-font-snf', 'snf'],\n    ['application/x-font-ttf', 'ttf'],\n    ['application/x-font-type1', 'pfa'],\n    ['application/x-font-woff', 'woff'],\n    ['application/x-frame', 'mif'],\n    ['application/x-freelance', 'pre'],\n    ['application/x-futuresplash', 'spl'],\n    ['application/x-gnumeric', 'gnumeric'],\n    ['application/x-gsp', 'gsp'],\n    ['application/x-gss', 'gss'],\n    ['application/x-gtar', 'gtar'],\n    ['application/x-gzip', ['gz', 'gzip']],\n    ['application/x-hdf', 'hdf'],\n    ['application/x-helpfile', ['help', 'hlp']],\n    ['application/x-httpd-imap', 'imap'],\n    ['application/x-ima', 'ima'],\n    ['application/x-internet-signup', ['ins', 'isp']],\n    ['application/x-internett-signup', 'ins'],\n    ['application/x-inventor', 'iv'],\n    ['application/x-ip2', 'ip'],\n    ['application/x-iphone', 'iii'],\n    ['application/x-java-class', 'class'],\n    ['application/x-java-commerce', 'jcm'],\n    ['application/x-java-jnlp-file', 'jnlp'],\n    ['application/x-javascript', 'js'],\n    ['application/x-koan', ['skd', 'skm', 'skp', 'skt']],\n    ['application/x-ksh', 'ksh'],\n    ['application/x-latex', ['latex', 'ltx']],\n    ['application/x-lha', 'lha'],\n    ['application/x-lisp', 'lsp'],\n    ['application/x-livescreen', 'ivy'],\n    ['application/x-lotus', 'wq1'],\n    ['application/x-lotusscreencam', 'scm'],\n    ['application/x-lzh', 'lzh'],\n    ['application/x-lzx', 'lzx'],\n    ['application/x-mac-binhex40', 'hqx'],\n    ['application/x-macbinary', 'bin'],\n    ['application/x-magic-cap-package-1.0', 'mc$'],\n    ['application/x-mathcad', 'mcd'],\n    ['application/x-meme', 'mm'],\n    ['application/x-midi', ['mid', 'midi']],\n    ['application/x-mif', 'mif'],\n    ['application/x-mix-transfer', 'nix'],\n    ['application/x-mobipocket-ebook', 'prc'],\n    ['application/x-mplayer2', 'asx'],\n    ['application/x-ms-application', 'application'],\n    ['application/x-ms-wmd', 'wmd'],\n    ['application/x-ms-wmz', 'wmz'],\n    ['application/x-ms-xbap', 'xbap'],\n    ['application/x-msaccess', 'mdb'],\n    ['application/x-msbinder', 'obd'],\n    ['application/x-mscardfile', 'crd'],\n    ['application/x-msclip', 'clp'],\n    ['application/x-msdownload', ['exe', 'dll']],\n    ['application/x-msexcel', ['xls', 'xla', 'xlw']],\n    ['application/x-msmediaview', ['mvb', 'm13', 'm14']],\n    ['application/x-msmetafile', 'wmf'],\n    ['application/x-msmoney', 'mny'],\n    ['application/x-mspowerpoint', 'ppt'],\n    ['application/x-mspublisher', 'pub'],\n    ['application/x-msschedule', 'scd'],\n    ['application/x-msterminal', 'trm'],\n    ['application/x-mswrite', 'wri'],\n    ['application/x-navi-animation', 'ani'],\n    ['application/x-navidoc', 'nvd'],\n    ['application/x-navimap', 'map'],\n    ['application/x-navistyle', 'stl'],\n    ['application/x-netcdf', ['cdf', 'nc']],\n    ['application/x-newton-compatible-pkg', 'pkg'],\n    ['application/x-nokia-9000-communicator-add-on-software', 'aos'],\n    ['application/x-omc', 'omc'],\n    ['application/x-omcdatamaker', 'omcd'],\n    ['application/x-omcregerator', 'omcr'],\n    ['application/x-pagemaker', ['pm4', 'pm5']],\n    ['application/x-pcl', 'pcl'],\n    ['application/x-perfmon', ['pma', 'pmc', 'pml', 'pmr', 'pmw']],\n    ['application/x-pixclscript', 'plx'],\n    ['application/x-pkcs10', 'p10'],\n    ['application/x-pkcs12', ['p12', 'pfx']],\n    ['application/x-pkcs7-certificates', ['p7b', 'spc']],\n    ['application/x-pkcs7-certreqresp', 'p7r'],\n    ['application/x-pkcs7-mime', ['p7m', 'p7c']],\n    ['application/x-pkcs7-signature', ['p7s', 'p7a']],\n    ['application/x-pointplus', 'css'],\n    ['application/x-portable-anymap', 'pnm'],\n    ['application/x-project', ['mpc', 'mpt', 'mpv', 'mpx']],\n    ['application/x-qpro', 'wb1'],\n    ['application/x-rar-compressed', 'rar'],\n    ['application/x-rtf', 'rtf'],\n    ['application/x-sdp', 'sdp'],\n    ['application/x-sea', 'sea'],\n    ['application/x-seelogo', 'sl'],\n    ['application/x-sh', 'sh'],\n    ['application/x-shar', ['shar', 'sh']],\n    ['application/x-shockwave-flash', 'swf'],\n    ['application/x-silverlight-app', 'xap'],\n    ['application/x-sit', 'sit'],\n    ['application/x-sprite', ['spr', 'sprite']],\n    ['application/x-stuffit', 'sit'],\n    ['application/x-stuffitx', 'sitx'],\n    ['application/x-sv4cpio', 'sv4cpio'],\n    ['application/x-sv4crc', 'sv4crc'],\n    ['application/x-tar', 'tar'],\n    ['application/x-tbook', ['sbk', 'tbk']],\n    ['application/x-tcl', 'tcl'],\n    ['application/x-tex', 'tex'],\n    ['application/x-tex-tfm', 'tfm'],\n    ['application/x-texinfo', ['texi', 'texinfo']],\n    ['application/x-troff', ['roff', 't', 'tr']],\n    ['application/x-troff-man', 'man'],\n    ['application/x-troff-me', 'me'],\n    ['application/x-troff-ms', 'ms'],\n    ['application/x-troff-msvideo', 'avi'],\n    ['application/x-ustar', 'ustar'],\n    ['application/x-visio', ['vsd', 'vst', 'vsw']],\n    ['application/x-vnd.audioexplosion.mzz', 'mzz'],\n    ['application/x-vnd.ls-xpix', 'xpix'],\n    ['application/x-vrml', 'vrml'],\n    ['application/x-wais-source', ['src', 'wsrc']],\n    ['application/x-winhelp', 'hlp'],\n    ['application/x-wintalk', 'wtk'],\n    ['application/x-world', ['wrl', 'svr']],\n    ['application/x-wpwin', 'wpd'],\n    ['application/x-wri', 'wri'],\n    ['application/x-x509-ca-cert', ['cer', 'crt', 'der']],\n    ['application/x-x509-user-cert', 'crt'],\n    ['application/x-xfig', 'fig'],\n    ['application/x-xpinstall', 'xpi'],\n    ['application/x-zip-compressed', 'zip'],\n    ['application/xcap-diff+xml', 'xdf'],\n    ['application/xenc+xml', 'xenc'],\n    ['application/xhtml+xml', 'xhtml'],\n    ['application/xml', 'xml'],\n    ['application/xml-dtd', 'dtd'],\n    ['application/xop+xml', 'xop'],\n    ['application/xslt+xml', 'xslt'],\n    ['application/xspf+xml', 'xspf'],\n    ['application/xv+xml', 'mxml'],\n    ['application/yang', 'yang'],\n    ['application/yin+xml', 'yin'],\n    ['application/ynd.ms-pkipko', 'pko'],\n    ['application/zip', 'zip'],\n    ['audio/adpcm', 'adp'],\n    ['audio/aiff', ['aiff', 'aif', 'aifc']],\n    ['audio/basic', ['snd', 'au']],\n    ['audio/it', 'it'],\n    ['audio/make', ['funk', 'my', 'pfunk']],\n    ['audio/make.my.funk', 'pfunk'],\n    ['audio/mid', ['mid', 'rmi']],\n    ['audio/midi', ['midi', 'kar', 'mid']],\n    ['audio/mod', 'mod'],\n    ['audio/mp4', 'mp4a'],\n    ['audio/mpeg', ['mpga', 'mp3', 'm2a', 'mp2', 'mpa', 'mpg']],\n    ['audio/mpeg3', 'mp3'],\n    ['audio/nspaudio', ['la', 'lma']],\n    ['audio/ogg', 'oga'],\n    ['audio/s3m', 's3m'],\n    ['audio/tsp-audio', 'tsi'],\n    ['audio/tsplayer', 'tsp'],\n    ['audio/vnd.dece.audio', 'uva'],\n    ['audio/vnd.digital-winds', 'eol'],\n    ['audio/vnd.dra', 'dra'],\n    ['audio/vnd.dts', 'dts'],\n    ['audio/vnd.dts.hd', 'dtshd'],\n    ['audio/vnd.lucent.voice', 'lvp'],\n    ['audio/vnd.ms-playready.media.pya', 'pya'],\n    ['audio/vnd.nuera.ecelp4800', 'ecelp4800'],\n    ['audio/vnd.nuera.ecelp7470', 'ecelp7470'],\n    ['audio/vnd.nuera.ecelp9600', 'ecelp9600'],\n    ['audio/vnd.qcelp', 'qcp'],\n    ['audio/vnd.rip', 'rip'],\n    ['audio/voc', 'voc'],\n    ['audio/voxware', 'vox'],\n    ['audio/wav', 'wav'],\n    ['audio/webm', 'weba'],\n    ['audio/x-aac', 'aac'],\n    ['audio/x-adpcm', 'snd'],\n    ['audio/x-aiff', ['aiff', 'aif', 'aifc']],\n    ['audio/x-au', 'au'],\n    ['audio/x-gsm', ['gsd', 'gsm']],\n    ['audio/x-jam', 'jam'],\n    ['audio/x-liveaudio', 'lam'],\n    ['audio/x-mid', ['mid', 'midi']],\n    ['audio/x-midi', ['midi', 'mid']],\n    ['audio/x-mod', 'mod'],\n    ['audio/x-mpeg', 'mp2'],\n    ['audio/x-mpeg-3', 'mp3'],\n    ['audio/x-mpegurl', 'm3u'],\n    ['audio/x-mpequrl', 'm3u'],\n    ['audio/x-ms-wax', 'wax'],\n    ['audio/x-ms-wma', 'wma'],\n    ['audio/x-nspaudio', ['la', 'lma']],\n    ['audio/x-pn-realaudio', ['ra', 'ram', 'rm', 'rmm', 'rmp']],\n    ['audio/x-pn-realaudio-plugin', ['ra', 'rmp', 'rpm']],\n    ['audio/x-psid', 'sid'],\n    ['audio/x-realaudio', 'ra'],\n    ['audio/x-twinvq', 'vqf'],\n    ['audio/x-twinvq-plugin', ['vqe', 'vql']],\n    ['audio/x-vnd.audioexplosion.mjuicemediafile', 'mjf'],\n    ['audio/x-voc', 'voc'],\n    ['audio/x-wav', 'wav'],\n    ['audio/xm', 'xm'],\n    ['chemical/x-cdx', 'cdx'],\n    ['chemical/x-cif', 'cif'],\n    ['chemical/x-cmdf', 'cmdf'],\n    ['chemical/x-cml', 'cml'],\n    ['chemical/x-csml', 'csml'],\n    ['chemical/x-pdb', ['pdb', 'xyz']],\n    ['chemical/x-xyz', 'xyz'],\n    ['drawing/x-dwf', 'dwf'],\n    ['i-world/i-vrml', 'ivr'],\n    ['image/bmp', ['bmp', 'bm']],\n    ['image/cgm', 'cgm'],\n    ['image/cis-cod', 'cod'],\n    ['image/cmu-raster', ['ras', 'rast']],\n    ['image/fif', 'fif'],\n    ['image/florian', ['flo', 'turbot']],\n    ['image/g3fax', 'g3'],\n    ['image/gif', 'gif'],\n    ['image/ief', ['ief', 'iefs']],\n    ['image/jpeg', ['jpeg', 'jpe', 'jpg', 'jfif', 'jfif-tbnl']],\n    ['image/jutvision', 'jut'],\n    ['image/ktx', 'ktx'],\n    ['image/naplps', ['nap', 'naplps']],\n    ['image/pict', ['pic', 'pict']],\n    ['image/pipeg', 'jfif'],\n    ['image/pjpeg', ['jfif', 'jpe', 'jpeg', 'jpg']],\n    ['image/png', ['png', 'x-png']],\n    ['image/prs.btif', 'btif'],\n    ['image/svg+xml', 'svg'],\n    ['image/tiff', ['tif', 'tiff']],\n    ['image/vasa', 'mcf'],\n    ['image/vnd.adobe.photoshop', 'psd'],\n    ['image/vnd.dece.graphic', 'uvi'],\n    ['image/vnd.djvu', 'djvu'],\n    ['image/vnd.dvb.subtitle', 'sub'],\n    ['image/vnd.dwg', ['dwg', 'dxf', 'svf']],\n    ['image/vnd.dxf', 'dxf'],\n    ['image/vnd.fastbidsheet', 'fbs'],\n    ['image/vnd.fpx', 'fpx'],\n    ['image/vnd.fst', 'fst'],\n    ['image/vnd.fujixerox.edmics-mmr', 'mmr'],\n    ['image/vnd.fujixerox.edmics-rlc', 'rlc'],\n    ['image/vnd.ms-modi', 'mdi'],\n    ['image/vnd.net-fpx', ['fpx', 'npx']],\n    ['image/vnd.rn-realflash', 'rf'],\n    ['image/vnd.rn-realpix', 'rp'],\n    ['image/vnd.wap.wbmp', 'wbmp'],\n    ['image/vnd.xiff', 'xif'],\n    ['image/webp', 'webp'],\n    ['image/x-cmu-raster', 'ras'],\n    ['image/x-cmx', 'cmx'],\n    ['image/x-dwg', ['dwg', 'dxf', 'svf']],\n    ['image/x-freehand', 'fh'],\n    ['image/x-icon', 'ico'],\n    ['image/x-jg', 'art'],\n    ['image/x-jps', 'jps'],\n    ['image/x-niff', ['niff', 'nif']],\n    ['image/x-pcx', 'pcx'],\n    ['image/x-pict', ['pct', 'pic']],\n    ['image/x-portable-anymap', 'pnm'],\n    ['image/x-portable-bitmap', 'pbm'],\n    ['image/x-portable-graymap', 'pgm'],\n    ['image/x-portable-greymap', 'pgm'],\n    ['image/x-portable-pixmap', 'ppm'],\n    ['image/x-quicktime', ['qif', 'qti', 'qtif']],\n    ['image/x-rgb', 'rgb'],\n    ['image/x-tiff', ['tif', 'tiff']],\n    ['image/x-windows-bmp', 'bmp'],\n    ['image/x-xbitmap', 'xbm'],\n    ['image/x-xbm', 'xbm'],\n    ['image/x-xpixmap', ['xpm', 'pm']],\n    ['image/x-xwd', 'xwd'],\n    ['image/x-xwindowdump', 'xwd'],\n    ['image/xbm', 'xbm'],\n    ['image/xpm', 'xpm'],\n    ['message/rfc822', ['eml', 'mht', 'mhtml', 'nws', 'mime']],\n    ['model/iges', ['iges', 'igs']],\n    ['model/mesh', 'msh'],\n    ['model/vnd.collada+xml', 'dae'],\n    ['model/vnd.dwf', 'dwf'],\n    ['model/vnd.gdl', 'gdl'],\n    ['model/vnd.gtw', 'gtw'],\n    ['model/vnd.mts', 'mts'],\n    ['model/vnd.vtu', 'vtu'],\n    ['model/vrml', ['vrml', 'wrl', 'wrz']],\n    ['model/x-pov', 'pov'],\n    ['multipart/x-gzip', 'gzip'],\n    ['multipart/x-ustar', 'ustar'],\n    ['multipart/x-zip', 'zip'],\n    ['music/crescendo', ['mid', 'midi']],\n    ['music/x-karaoke', 'kar'],\n    ['paleovu/x-pv', 'pvu'],\n    ['text/asp', 'asp'],\n    ['text/calendar', 'ics'],\n    ['text/css', 'css'],\n    ['text/csv', 'csv'],\n    ['text/ecmascript', 'js'],\n    ['text/h323', '323'],\n    ['text/html', ['html', 'htm', 'stm', 'acgi', 'htmls', 'htx', 'shtml']],\n    ['text/iuls', 'uls'],\n    ['text/javascript', 'js'],\n    ['text/mcf', 'mcf'],\n    ['text/n3', 'n3'],\n    ['text/pascal', 'pas'],\n    [\n        'text/plain',\n        [\n            'txt',\n            'bas',\n            'c',\n            'h',\n            'c++',\n            'cc',\n            'com',\n            'conf',\n            'cxx',\n            'def',\n            'f',\n            'f90',\n            'for',\n            'g',\n            'hh',\n            'idc',\n            'jav',\n            'java',\n            'list',\n            'log',\n            'lst',\n            'm',\n            'mar',\n            'pl',\n            'sdml',\n            'text'\n        ]\n    ],\n    ['text/plain-bas', 'par'],\n    ['text/prs.lines.tag', 'dsc'],\n    ['text/richtext', ['rtx', 'rt', 'rtf']],\n    ['text/scriplet', 'wsc'],\n    ['text/scriptlet', 'sct'],\n    ['text/sgml', ['sgm', 'sgml']],\n    ['text/tab-separated-values', 'tsv'],\n    ['text/troff', 't'],\n    ['text/turtle', 'ttl'],\n    ['text/uri-list', ['uni', 'unis', 'uri', 'uris']],\n    ['text/vnd.abc', 'abc'],\n    ['text/vnd.curl', 'curl'],\n    ['text/vnd.curl.dcurl', 'dcurl'],\n    ['text/vnd.curl.mcurl', 'mcurl'],\n    ['text/vnd.curl.scurl', 'scurl'],\n    ['text/vnd.fly', 'fly'],\n    ['text/vnd.fmi.flexstor', 'flx'],\n    ['text/vnd.graphviz', 'gv'],\n    ['text/vnd.in3d.3dml', '3dml'],\n    ['text/vnd.in3d.spot', 'spot'],\n    ['text/vnd.rn-realtext', 'rt'],\n    ['text/vnd.sun.j2me.app-descriptor', 'jad'],\n    ['text/vnd.wap.wml', 'wml'],\n    ['text/vnd.wap.wmlscript', 'wmls'],\n    ['text/webviewhtml', 'htt'],\n    ['text/x-asm', ['asm', 's']],\n    ['text/x-audiosoft-intra', 'aip'],\n    ['text/x-c', ['c', 'cc', 'cpp']],\n    ['text/x-component', 'htc'],\n    ['text/x-fortran', ['for', 'f', 'f77', 'f90']],\n    ['text/x-h', ['h', 'hh']],\n    ['text/x-java-source', ['java', 'jav']],\n    ['text/x-java-source,java', 'java'],\n    ['text/x-la-asf', 'lsx'],\n    ['text/x-m', 'm'],\n    ['text/x-pascal', 'p'],\n    ['text/x-script', 'hlb'],\n    ['text/x-script.csh', 'csh'],\n    ['text/x-script.elisp', 'el'],\n    ['text/x-script.guile', 'scm'],\n    ['text/x-script.ksh', 'ksh'],\n    ['text/x-script.lisp', 'lsp'],\n    ['text/x-script.perl', 'pl'],\n    ['text/x-script.perl-module', 'pm'],\n    ['text/x-script.phyton', 'py'],\n    ['text/x-script.rexx', 'rexx'],\n    ['text/x-script.scheme', 'scm'],\n    ['text/x-script.sh', 'sh'],\n    ['text/x-script.tcl', 'tcl'],\n    ['text/x-script.tcsh', 'tcsh'],\n    ['text/x-script.zsh', 'zsh'],\n    ['text/x-server-parsed-html', ['shtml', 'ssi']],\n    ['text/x-setext', 'etx'],\n    ['text/x-sgml', ['sgm', 'sgml']],\n    ['text/x-speech', ['spc', 'talk']],\n    ['text/x-uil', 'uil'],\n    ['text/x-uuencode', ['uu', 'uue']],\n    ['text/x-vcalendar', 'vcs'],\n    ['text/x-vcard', 'vcf'],\n    ['text/xml', 'xml'],\n    ['video/3gpp', '3gp'],\n    ['video/3gpp2', '3g2'],\n    ['video/animaflex', 'afl'],\n    ['video/avi', 'avi'],\n    ['video/avs-video', 'avs'],\n    ['video/dl', 'dl'],\n    ['video/fli', 'fli'],\n    ['video/gl', 'gl'],\n    ['video/h261', 'h261'],\n    ['video/h263', 'h263'],\n    ['video/h264', 'h264'],\n    ['video/jpeg', 'jpgv'],\n    ['video/jpm', 'jpm'],\n    ['video/mj2', 'mj2'],\n    ['video/mp4', 'mp4'],\n    ['video/mpeg', ['mpeg', 'mp2', 'mpa', 'mpe', 'mpg', 'mpv2', 'm1v', 'm2v', 'mp3']],\n    ['video/msvideo', 'avi'],\n    ['video/ogg', 'ogv'],\n    ['video/quicktime', ['mov', 'qt', 'moov']],\n    ['video/vdo', 'vdo'],\n    ['video/vivo', ['viv', 'vivo']],\n    ['video/vnd.dece.hd', 'uvh'],\n    ['video/vnd.dece.mobile', 'uvm'],\n    ['video/vnd.dece.pd', 'uvp'],\n    ['video/vnd.dece.sd', 'uvs'],\n    ['video/vnd.dece.video', 'uvv'],\n    ['video/vnd.fvt', 'fvt'],\n    ['video/vnd.mpegurl', 'mxu'],\n    ['video/vnd.ms-playready.media.pyv', 'pyv'],\n    ['video/vnd.rn-realvideo', 'rv'],\n    ['video/vnd.uvvu.mp4', 'uvu'],\n    ['video/vnd.vivo', ['viv', 'vivo']],\n    ['video/vosaic', 'vos'],\n    ['video/webm', 'webm'],\n    ['video/x-amt-demorun', 'xdr'],\n    ['video/x-amt-showrun', 'xsr'],\n    ['video/x-atomic3d-feature', 'fmf'],\n    ['video/x-dl', 'dl'],\n    ['video/x-dv', ['dif', 'dv']],\n    ['video/x-f4v', 'f4v'],\n    ['video/x-fli', 'fli'],\n    ['video/x-flv', 'flv'],\n    ['video/x-gl', 'gl'],\n    ['video/x-isvideo', 'isu'],\n    ['video/x-la-asf', ['lsf', 'lsx']],\n    ['video/x-m4v', 'm4v'],\n    ['video/x-motion-jpeg', 'mjpg'],\n    ['video/x-mpeg', ['mp3', 'mp2']],\n    ['video/x-mpeq2a', 'mp2'],\n    ['video/x-ms-asf', ['asf', 'asr', 'asx']],\n    ['video/x-ms-asf-plugin', 'asx'],\n    ['video/x-ms-wm', 'wm'],\n    ['video/x-ms-wmv', 'wmv'],\n    ['video/x-ms-wmx', 'wmx'],\n    ['video/x-ms-wvx', 'wvx'],\n    ['video/x-msvideo', 'avi'],\n    ['video/x-qtc', 'qtc'],\n    ['video/x-scm', 'scm'],\n    ['video/x-sgi-movie', ['movie', 'mv']],\n    ['windows/metafile', 'wmf'],\n    ['www/mime', 'mime'],\n    ['x-conference/x-cooltalk', 'ice'],\n    ['x-music/x-midi', ['mid', 'midi']],\n    ['x-world/x-3dmf', ['3dm', '3dmf', 'qd3', 'qd3d']],\n    ['x-world/x-svr', 'svr'],\n    ['x-world/x-vrml', ['flr', 'vrml', 'wrl', 'wrz', 'xaf', 'xof']],\n    ['x-world/x-vrt', 'vrt'],\n    ['xgl/drawing', 'xgz'],\n    ['xgl/movie', 'xmz']\n]);\nconst extensions = new Map([\n    ['123', 'application/vnd.lotus-1-2-3'],\n    ['323', 'text/h323'],\n    ['*', 'application/octet-stream'],\n    ['3dm', 'x-world/x-3dmf'],\n    ['3dmf', 'x-world/x-3dmf'],\n    ['3dml', 'text/vnd.in3d.3dml'],\n    ['3g2', 'video/3gpp2'],\n    ['3gp', 'video/3gpp'],\n    ['7z', 'application/x-7z-compressed'],\n    ['a', 'application/octet-stream'],\n    ['aab', 'application/x-authorware-bin'],\n    ['aac', 'audio/x-aac'],\n    ['aam', 'application/x-authorware-map'],\n    ['aas', 'application/x-authorware-seg'],\n    ['abc', 'text/vnd.abc'],\n    ['abw', 'application/x-abiword'],\n    ['ac', 'application/pkix-attr-cert'],\n    ['acc', 'application/vnd.americandynamics.acc'],\n    ['ace', 'application/x-ace-compressed'],\n    ['acgi', 'text/html'],\n    ['acu', 'application/vnd.acucobol'],\n    ['acx', 'application/internet-property-stream'],\n    ['adp', 'audio/adpcm'],\n    ['aep', 'application/vnd.audiograph'],\n    ['afl', 'video/animaflex'],\n    ['afp', 'application/vnd.ibm.modcap'],\n    ['ahead', 'application/vnd.ahead.space'],\n    ['ai', 'application/postscript'],\n    ['aif', ['audio/aiff', 'audio/x-aiff']],\n    ['aifc', ['audio/aiff', 'audio/x-aiff']],\n    ['aiff', ['audio/aiff', 'audio/x-aiff']],\n    ['aim', 'application/x-aim'],\n    ['aip', 'text/x-audiosoft-intra'],\n    ['air', 'application/vnd.adobe.air-application-installer-package+zip'],\n    ['ait', 'application/vnd.dvb.ait'],\n    ['ami', 'application/vnd.amiga.ami'],\n    ['ani', 'application/x-navi-animation'],\n    ['aos', 'application/x-nokia-9000-communicator-add-on-software'],\n    ['apk', 'application/vnd.android.package-archive'],\n    ['application', 'application/x-ms-application'],\n    ['apr', 'application/vnd.lotus-approach'],\n    ['aps', 'application/mime'],\n    ['arc', 'application/octet-stream'],\n    ['arj', ['application/arj', 'application/octet-stream']],\n    ['art', 'image/x-jg'],\n    ['asf', 'video/x-ms-asf'],\n    ['asm', 'text/x-asm'],\n    ['aso', 'application/vnd.accpac.simply.aso'],\n    ['asp', 'text/asp'],\n    ['asr', 'video/x-ms-asf'],\n    ['asx', ['video/x-ms-asf', 'application/x-mplayer2', 'video/x-ms-asf-plugin']],\n    ['atc', 'application/vnd.acucorp'],\n    ['atomcat', 'application/atomcat+xml'],\n    ['atomsvc', 'application/atomsvc+xml'],\n    ['atx', 'application/vnd.antix.game-component'],\n    ['au', ['audio/basic', 'audio/x-au']],\n    ['avi', ['video/avi', 'video/msvideo', 'application/x-troff-msvideo', 'video/x-msvideo']],\n    ['avs', 'video/avs-video'],\n    ['aw', 'application/applixware'],\n    ['axs', 'application/olescript'],\n    ['azf', 'application/vnd.airzip.filesecure.azf'],\n    ['azs', 'application/vnd.airzip.filesecure.azs'],\n    ['azw', 'application/vnd.amazon.ebook'],\n    ['bas', 'text/plain'],\n    ['bcpio', 'application/x-bcpio'],\n    ['bdf', 'application/x-font-bdf'],\n    ['bdm', 'application/vnd.syncml.dm+wbxml'],\n    ['bed', 'application/vnd.realvnc.bed'],\n    ['bh2', 'application/vnd.fujitsu.oasysprs'],\n    ['bin', ['application/octet-stream', 'application/mac-binary', 'application/macbinary', 'application/x-macbinary', 'application/x-binary']],\n    ['bm', 'image/bmp'],\n    ['bmi', 'application/vnd.bmi'],\n    ['bmp', ['image/bmp', 'image/x-windows-bmp']],\n    ['boo', 'application/book'],\n    ['book', 'application/book'],\n    ['box', 'application/vnd.previewsystems.box'],\n    ['boz', 'application/x-bzip2'],\n    ['bsh', 'application/x-bsh'],\n    ['btif', 'image/prs.btif'],\n    ['bz', 'application/x-bzip'],\n    ['bz2', 'application/x-bzip2'],\n    ['c', ['text/plain', 'text/x-c']],\n    ['c++', 'text/plain'],\n    ['c11amc', 'application/vnd.cluetrust.cartomobile-config'],\n    ['c11amz', 'application/vnd.cluetrust.cartomobile-config-pkg'],\n    ['c4g', 'application/vnd.clonk.c4group'],\n    ['cab', 'application/vnd.ms-cab-compressed'],\n    ['car', 'application/vnd.curl.car'],\n    ['cat', ['application/vnd.ms-pkiseccat', 'application/vnd.ms-pki.seccat']],\n    ['cc', ['text/plain', 'text/x-c']],\n    ['ccad', 'application/clariscad'],\n    ['cco', 'application/x-cocoa'],\n    ['ccxml', 'application/ccxml+xml,'],\n    ['cdbcmsg', 'application/vnd.contact.cmsg'],\n    ['cdf', ['application/cdf', 'application/x-cdf', 'application/x-netcdf']],\n    ['cdkey', 'application/vnd.mediastation.cdkey'],\n    ['cdmia', 'application/cdmi-capability'],\n    ['cdmic', 'application/cdmi-container'],\n    ['cdmid', 'application/cdmi-domain'],\n    ['cdmio', 'application/cdmi-object'],\n    ['cdmiq', 'application/cdmi-queue'],\n    ['cdx', 'chemical/x-cdx'],\n    ['cdxml', 'application/vnd.chemdraw+xml'],\n    ['cdy', 'application/vnd.cinderella'],\n    ['cer', ['application/pkix-cert', 'application/x-x509-ca-cert']],\n    ['cgm', 'image/cgm'],\n    ['cha', 'application/x-chat'],\n    ['chat', 'application/x-chat'],\n    ['chm', 'application/vnd.ms-htmlhelp'],\n    ['chrt', 'application/vnd.kde.kchart'],\n    ['cif', 'chemical/x-cif'],\n    ['cii', 'application/vnd.anser-web-certificate-issue-initiation'],\n    ['cil', 'application/vnd.ms-artgalry'],\n    ['cla', 'application/vnd.claymore'],\n    ['class', ['application/octet-stream', 'application/java', 'application/java-byte-code', 'application/java-vm', 'application/x-java-class']],\n    ['clkk', 'application/vnd.crick.clicker.keyboard'],\n    ['clkp', 'application/vnd.crick.clicker.palette'],\n    ['clkt', 'application/vnd.crick.clicker.template'],\n    ['clkw', 'application/vnd.crick.clicker.wordbank'],\n    ['clkx', 'application/vnd.crick.clicker'],\n    ['clp', 'application/x-msclip'],\n    ['cmc', 'application/vnd.cosmocaller'],\n    ['cmdf', 'chemical/x-cmdf'],\n    ['cml', 'chemical/x-cml'],\n    ['cmp', 'application/vnd.yellowriver-custom-menu'],\n    ['cmx', 'image/x-cmx'],\n    ['cod', ['image/cis-cod', 'application/vnd.rim.cod']],\n    ['com', ['application/octet-stream', 'text/plain']],\n    ['conf', 'text/plain'],\n    ['cpio', 'application/x-cpio'],\n    ['cpp', 'text/x-c'],\n    ['cpt', ['application/mac-compactpro', 'application/x-compactpro', 'application/x-cpt']],\n    ['crd', 'application/x-mscardfile'],\n    ['crl', ['application/pkix-crl', 'application/pkcs-crl']],\n    ['crt', ['application/pkix-cert', 'application/x-x509-user-cert', 'application/x-x509-ca-cert']],\n    ['cryptonote', 'application/vnd.rig.cryptonote'],\n    ['csh', ['text/x-script.csh', 'application/x-csh']],\n    ['csml', 'chemical/x-csml'],\n    ['csp', 'application/vnd.commonspace'],\n    ['css', ['text/css', 'application/x-pointplus']],\n    ['csv', 'text/csv'],\n    ['cu', 'application/cu-seeme'],\n    ['curl', 'text/vnd.curl'],\n    ['cww', 'application/prs.cww'],\n    ['cxx', 'text/plain'],\n    ['dae', 'model/vnd.collada+xml'],\n    ['daf', 'application/vnd.mobius.daf'],\n    ['davmount', 'application/davmount+xml'],\n    ['dcr', 'application/x-director'],\n    ['dcurl', 'text/vnd.curl.dcurl'],\n    ['dd2', 'application/vnd.oma.dd2+xml'],\n    ['ddd', 'application/vnd.fujixerox.ddd'],\n    ['deb', 'application/x-debian-package'],\n    ['deepv', 'application/x-deepv'],\n    ['def', 'text/plain'],\n    ['der', 'application/x-x509-ca-cert'],\n    ['dfac', 'application/vnd.dreamfactory'],\n    ['dif', 'video/x-dv'],\n    ['dir', 'application/x-director'],\n    ['dis', 'application/vnd.mobius.dis'],\n    ['djvu', 'image/vnd.djvu'],\n    ['dl', ['video/dl', 'video/x-dl']],\n    ['dll', 'application/x-msdownload'],\n    ['dms', 'application/octet-stream'],\n    ['dna', 'application/vnd.dna'],\n    ['doc', 'application/msword'],\n    ['docm', 'application/vnd.ms-word.document.macroenabled.12'],\n    ['docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document'],\n    ['dot', 'application/msword'],\n    ['dotm', 'application/vnd.ms-word.template.macroenabled.12'],\n    ['dotx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.template'],\n    ['dp', ['application/commonground', 'application/vnd.osgi.dp']],\n    ['dpg', 'application/vnd.dpgraph'],\n    ['dra', 'audio/vnd.dra'],\n    ['drw', 'application/drafting'],\n    ['dsc', 'text/prs.lines.tag'],\n    ['dssc', 'application/dssc+der'],\n    ['dtb', 'application/x-dtbook+xml'],\n    ['dtd', 'application/xml-dtd'],\n    ['dts', 'audio/vnd.dts'],\n    ['dtshd', 'audio/vnd.dts.hd'],\n    ['dump', 'application/octet-stream'],\n    ['dv', 'video/x-dv'],\n    ['dvi', 'application/x-dvi'],\n    ['dwf', ['model/vnd.dwf', 'drawing/x-dwf']],\n    ['dwg', ['application/acad', 'image/vnd.dwg', 'image/x-dwg']],\n    ['dxf', ['application/dxf', 'image/vnd.dwg', 'image/vnd.dxf', 'image/x-dwg']],\n    ['dxp', 'application/vnd.spotfire.dxp'],\n    ['dxr', 'application/x-director'],\n    ['ecelp4800', 'audio/vnd.nuera.ecelp4800'],\n    ['ecelp7470', 'audio/vnd.nuera.ecelp7470'],\n    ['ecelp9600', 'audio/vnd.nuera.ecelp9600'],\n    ['edm', 'application/vnd.novadigm.edm'],\n    ['edx', 'application/vnd.novadigm.edx'],\n    ['efif', 'application/vnd.picsel'],\n    ['ei6', 'application/vnd.pg.osasli'],\n    ['el', 'text/x-script.elisp'],\n    ['elc', ['application/x-elc', 'application/x-bytecode.elisp']],\n    ['eml', 'message/rfc822'],\n    ['emma', 'application/emma+xml'],\n    ['env', 'application/x-envoy'],\n    ['eol', 'audio/vnd.digital-winds'],\n    ['eot', 'application/vnd.ms-fontobject'],\n    ['eps', 'application/postscript'],\n    ['epub', 'application/epub+zip'],\n    ['es', ['application/ecmascript', 'application/x-esrehber']],\n    ['es3', 'application/vnd.eszigno3+xml'],\n    ['esf', 'application/vnd.epson.esf'],\n    ['etx', 'text/x-setext'],\n    ['evy', ['application/envoy', 'application/x-envoy']],\n    ['exe', ['application/octet-stream', 'application/x-msdownload']],\n    ['exi', 'application/exi'],\n    ['ext', 'application/vnd.novadigm.ext'],\n    ['ez2', 'application/vnd.ezpix-album'],\n    ['ez3', 'application/vnd.ezpix-package'],\n    ['f', ['text/plain', 'text/x-fortran']],\n    ['f4v', 'video/x-f4v'],\n    ['f77', 'text/x-fortran'],\n    ['f90', ['text/plain', 'text/x-fortran']],\n    ['fbs', 'image/vnd.fastbidsheet'],\n    ['fcs', 'application/vnd.isac.fcs'],\n    ['fdf', 'application/vnd.fdf'],\n    ['fe_launch', 'application/vnd.denovo.fcselayout-link'],\n    ['fg5', 'application/vnd.fujitsu.oasysgp'],\n    ['fh', 'image/x-freehand'],\n    ['fif', ['application/fractals', 'image/fif']],\n    ['fig', 'application/x-xfig'],\n    ['fli', ['video/fli', 'video/x-fli']],\n    ['flo', ['image/florian', 'application/vnd.micrografx.flo']],\n    ['flr', 'x-world/x-vrml'],\n    ['flv', 'video/x-flv'],\n    ['flw', 'application/vnd.kde.kivio'],\n    ['flx', 'text/vnd.fmi.flexstor'],\n    ['fly', 'text/vnd.fly'],\n    ['fm', 'application/vnd.framemaker'],\n    ['fmf', 'video/x-atomic3d-feature'],\n    ['fnc', 'application/vnd.frogans.fnc'],\n    ['for', ['text/plain', 'text/x-fortran']],\n    ['fpx', ['image/vnd.fpx', 'image/vnd.net-fpx']],\n    ['frl', 'application/freeloader'],\n    ['fsc', 'application/vnd.fsc.weblaunch'],\n    ['fst', 'image/vnd.fst'],\n    ['ftc', 'application/vnd.fluxtime.clip'],\n    ['fti', 'application/vnd.anser-web-funds-transfer-initiation'],\n    ['funk', 'audio/make'],\n    ['fvt', 'video/vnd.fvt'],\n    ['fxp', 'application/vnd.adobe.fxp'],\n    ['fzs', 'application/vnd.fuzzysheet'],\n    ['g', 'text/plain'],\n    ['g2w', 'application/vnd.geoplan'],\n    ['g3', 'image/g3fax'],\n    ['g3w', 'application/vnd.geospace'],\n    ['gac', 'application/vnd.groove-account'],\n    ['gdl', 'model/vnd.gdl'],\n    ['geo', 'application/vnd.dynageo'],\n    ['gex', 'application/vnd.geometry-explorer'],\n    ['ggb', 'application/vnd.geogebra.file'],\n    ['ggt', 'application/vnd.geogebra.tool'],\n    ['ghf', 'application/vnd.groove-help'],\n    ['gif', 'image/gif'],\n    ['gim', 'application/vnd.groove-identity-message'],\n    ['gl', ['video/gl', 'video/x-gl']],\n    ['gmx', 'application/vnd.gmx'],\n    ['gnumeric', 'application/x-gnumeric'],\n    ['gph', 'application/vnd.flographit'],\n    ['gqf', 'application/vnd.grafeq'],\n    ['gram', 'application/srgs'],\n    ['grv', 'application/vnd.groove-injector'],\n    ['grxml', 'application/srgs+xml'],\n    ['gsd', 'audio/x-gsm'],\n    ['gsf', 'application/x-font-ghostscript'],\n    ['gsm', 'audio/x-gsm'],\n    ['gsp', 'application/x-gsp'],\n    ['gss', 'application/x-gss'],\n    ['gtar', 'application/x-gtar'],\n    ['gtm', 'application/vnd.groove-tool-message'],\n    ['gtw', 'model/vnd.gtw'],\n    ['gv', 'text/vnd.graphviz'],\n    ['gxt', 'application/vnd.geonext'],\n    ['gz', ['application/x-gzip', 'application/x-compressed']],\n    ['gzip', ['multipart/x-gzip', 'application/x-gzip']],\n    ['h', ['text/plain', 'text/x-h']],\n    ['h261', 'video/h261'],\n    ['h263', 'video/h263'],\n    ['h264', 'video/h264'],\n    ['hal', 'application/vnd.hal+xml'],\n    ['hbci', 'application/vnd.hbci'],\n    ['hdf', 'application/x-hdf'],\n    ['help', 'application/x-helpfile'],\n    ['hgl', 'application/vnd.hp-hpgl'],\n    ['hh', ['text/plain', 'text/x-h']],\n    ['hlb', 'text/x-script'],\n    ['hlp', ['application/winhlp', 'application/hlp', 'application/x-helpfile', 'application/x-winhelp']],\n    ['hpg', 'application/vnd.hp-hpgl'],\n    ['hpgl', 'application/vnd.hp-hpgl'],\n    ['hpid', 'application/vnd.hp-hpid'],\n    ['hps', 'application/vnd.hp-hps'],\n    [\n        'hqx',\n        [\n            'application/mac-binhex40',\n            'application/binhex',\n            'application/binhex4',\n            'application/mac-binhex',\n            'application/x-binhex40',\n            'application/x-mac-binhex40'\n        ]\n    ],\n    ['hta', 'application/hta'],\n    ['htc', 'text/x-component'],\n    ['htke', 'application/vnd.kenameaapp'],\n    ['htm', 'text/html'],\n    ['html', 'text/html'],\n    ['htmls', 'text/html'],\n    ['htt', 'text/webviewhtml'],\n    ['htx', 'text/html'],\n    ['hvd', 'application/vnd.yamaha.hv-dic'],\n    ['hvp', 'application/vnd.yamaha.hv-voice'],\n    ['hvs', 'application/vnd.yamaha.hv-script'],\n    ['i2g', 'application/vnd.intergeo'],\n    ['icc', 'application/vnd.iccprofile'],\n    ['ice', 'x-conference/x-cooltalk'],\n    ['ico', 'image/x-icon'],\n    ['ics', 'text/calendar'],\n    ['idc', 'text/plain'],\n    ['ief', 'image/ief'],\n    ['iefs', 'image/ief'],\n    ['ifm', 'application/vnd.shana.informed.formdata'],\n    ['iges', ['application/iges', 'model/iges']],\n    ['igl', 'application/vnd.igloader'],\n    ['igm', 'application/vnd.insors.igm'],\n    ['igs', ['application/iges', 'model/iges']],\n    ['igx', 'application/vnd.micrografx.igx'],\n    ['iif', 'application/vnd.shana.informed.interchange'],\n    ['iii', 'application/x-iphone'],\n    ['ima', 'application/x-ima'],\n    ['imap', 'application/x-httpd-imap'],\n    ['imp', 'application/vnd.accpac.simply.imp'],\n    ['ims', 'application/vnd.ms-ims'],\n    ['inf', 'application/inf'],\n    ['ins', ['application/x-internet-signup', 'application/x-internett-signup']],\n    ['ip', 'application/x-ip2'],\n    ['ipfix', 'application/ipfix'],\n    ['ipk', 'application/vnd.shana.informed.package'],\n    ['irm', 'application/vnd.ibm.rights-management'],\n    ['irp', 'application/vnd.irepository.package+xml'],\n    ['isp', 'application/x-internet-signup'],\n    ['isu', 'video/x-isvideo'],\n    ['it', 'audio/it'],\n    ['itp', 'application/vnd.shana.informed.formtemplate'],\n    ['iv', 'application/x-inventor'],\n    ['ivp', 'application/vnd.immervision-ivp'],\n    ['ivr', 'i-world/i-vrml'],\n    ['ivu', 'application/vnd.immervision-ivu'],\n    ['ivy', 'application/x-livescreen'],\n    ['jad', 'text/vnd.sun.j2me.app-descriptor'],\n    ['jam', ['application/vnd.jam', 'audio/x-jam']],\n    ['jar', 'application/java-archive'],\n    ['jav', ['text/plain', 'text/x-java-source']],\n    ['java', ['text/plain', 'text/x-java-source,java', 'text/x-java-source']],\n    ['jcm', 'application/x-java-commerce'],\n    ['jfif', ['image/pipeg', 'image/jpeg', 'image/pjpeg']],\n    ['jfif-tbnl', 'image/jpeg'],\n    ['jisp', 'application/vnd.jisp'],\n    ['jlt', 'application/vnd.hp-jlyt'],\n    ['jnlp', 'application/x-java-jnlp-file'],\n    ['joda', 'application/vnd.joost.joda-archive'],\n    ['jpe', ['image/jpeg', 'image/pjpeg']],\n    ['jpeg', ['image/jpeg', 'image/pjpeg']],\n    ['jpg', ['image/jpeg', 'image/pjpeg']],\n    ['jpgv', 'video/jpeg'],\n    ['jpm', 'video/jpm'],\n    ['jps', 'image/x-jps'],\n    ['js', ['application/javascript', 'application/ecmascript', 'text/javascript', 'text/ecmascript', 'application/x-javascript']],\n    ['json', 'application/json'],\n    ['jut', 'image/jutvision'],\n    ['kar', ['audio/midi', 'music/x-karaoke']],\n    ['karbon', 'application/vnd.kde.karbon'],\n    ['kfo', 'application/vnd.kde.kformula'],\n    ['kia', 'application/vnd.kidspiration'],\n    ['kml', 'application/vnd.google-earth.kml+xml'],\n    ['kmz', 'application/vnd.google-earth.kmz'],\n    ['kne', 'application/vnd.kinar'],\n    ['kon', 'application/vnd.kde.kontour'],\n    ['kpr', 'application/vnd.kde.kpresenter'],\n    ['ksh', ['application/x-ksh', 'text/x-script.ksh']],\n    ['ksp', 'application/vnd.kde.kspread'],\n    ['ktx', 'image/ktx'],\n    ['ktz', 'application/vnd.kahootz'],\n    ['kwd', 'application/vnd.kde.kword'],\n    ['la', ['audio/nspaudio', 'audio/x-nspaudio']],\n    ['lam', 'audio/x-liveaudio'],\n    ['lasxml', 'application/vnd.las.las+xml'],\n    ['latex', 'application/x-latex'],\n    ['lbd', 'application/vnd.llamagraphics.life-balance.desktop'],\n    ['lbe', 'application/vnd.llamagraphics.life-balance.exchange+xml'],\n    ['les', 'application/vnd.hhe.lesson-player'],\n    ['lha', ['application/octet-stream', 'application/lha', 'application/x-lha']],\n    ['lhx', 'application/octet-stream'],\n    ['link66', 'application/vnd.route66.link66+xml'],\n    ['list', 'text/plain'],\n    ['lma', ['audio/nspaudio', 'audio/x-nspaudio']],\n    ['log', 'text/plain'],\n    ['lrm', 'application/vnd.ms-lrm'],\n    ['lsf', 'video/x-la-asf'],\n    ['lsp', ['application/x-lisp', 'text/x-script.lisp']],\n    ['lst', 'text/plain'],\n    ['lsx', ['video/x-la-asf', 'text/x-la-asf']],\n    ['ltf', 'application/vnd.frogans.ltf'],\n    ['ltx', 'application/x-latex'],\n    ['lvp', 'audio/vnd.lucent.voice'],\n    ['lwp', 'application/vnd.lotus-wordpro'],\n    ['lzh', ['application/octet-stream', 'application/x-lzh']],\n    ['lzx', ['application/lzx', 'application/octet-stream', 'application/x-lzx']],\n    ['m', ['text/plain', 'text/x-m']],\n    ['m13', 'application/x-msmediaview'],\n    ['m14', 'application/x-msmediaview'],\n    ['m1v', 'video/mpeg'],\n    ['m21', 'application/mp21'],\n    ['m2a', 'audio/mpeg'],\n    ['m2v', 'video/mpeg'],\n    ['m3u', ['audio/x-mpegurl', 'audio/x-mpequrl']],\n    ['m3u8', 'application/vnd.apple.mpegurl'],\n    ['m4v', 'video/x-m4v'],\n    ['ma', 'application/mathematica'],\n    ['mads', 'application/mads+xml'],\n    ['mag', 'application/vnd.ecowin.chart'],\n    ['man', 'application/x-troff-man'],\n    ['map', 'application/x-navimap'],\n    ['mar', 'text/plain'],\n    ['mathml', 'application/mathml+xml'],\n    ['mbd', 'application/mbedlet'],\n    ['mbk', 'application/vnd.mobius.mbk'],\n    ['mbox', 'application/mbox'],\n    ['mc$', 'application/x-magic-cap-package-1.0'],\n    ['mc1', 'application/vnd.medcalcdata'],\n    ['mcd', ['application/mcad', 'application/vnd.mcd', 'application/x-mathcad']],\n    ['mcf', ['image/vasa', 'text/mcf']],\n    ['mcp', 'application/netmc'],\n    ['mcurl', 'text/vnd.curl.mcurl'],\n    ['mdb', 'application/x-msaccess'],\n    ['mdi', 'image/vnd.ms-modi'],\n    ['me', 'application/x-troff-me'],\n    ['meta4', 'application/metalink4+xml'],\n    ['mets', 'application/mets+xml'],\n    ['mfm', 'application/vnd.mfmp'],\n    ['mgp', 'application/vnd.osgeo.mapguide.package'],\n    ['mgz', 'application/vnd.proteus.magazine'],\n    ['mht', 'message/rfc822'],\n    ['mhtml', 'message/rfc822'],\n    ['mid', ['audio/mid', 'audio/midi', 'music/crescendo', 'x-music/x-midi', 'audio/x-midi', 'application/x-midi', 'audio/x-mid']],\n    ['midi', ['audio/midi', 'music/crescendo', 'x-music/x-midi', 'audio/x-midi', 'application/x-midi', 'audio/x-mid']],\n    ['mif', ['application/vnd.mif', 'application/x-mif', 'application/x-frame']],\n    ['mime', ['message/rfc822', 'www/mime']],\n    ['mj2', 'video/mj2'],\n    ['mjf', 'audio/x-vnd.audioexplosion.mjuicemediafile'],\n    ['mjpg', 'video/x-motion-jpeg'],\n    ['mlp', 'application/vnd.dolby.mlp'],\n    ['mm', ['application/base64', 'application/x-meme']],\n    ['mmd', 'application/vnd.chipnuts.karaoke-mmd'],\n    ['mme', 'application/base64'],\n    ['mmf', 'application/vnd.smaf'],\n    ['mmr', 'image/vnd.fujixerox.edmics-mmr'],\n    ['mny', 'application/x-msmoney'],\n    ['mod', ['audio/mod', 'audio/x-mod']],\n    ['mods', 'application/mods+xml'],\n    ['moov', 'video/quicktime'],\n    ['mov', 'video/quicktime'],\n    ['movie', 'video/x-sgi-movie'],\n    ['mp2', ['video/mpeg', 'audio/mpeg', 'video/x-mpeg', 'audio/x-mpeg', 'video/x-mpeq2a']],\n    ['mp3', ['audio/mpeg', 'audio/mpeg3', 'video/mpeg', 'audio/x-mpeg-3', 'video/x-mpeg']],\n    ['mp4', ['video/mp4', 'application/mp4']],\n    ['mp4a', 'audio/mp4'],\n    ['mpa', ['video/mpeg', 'audio/mpeg']],\n    ['mpc', ['application/vnd.mophun.certificate', 'application/x-project']],\n    ['mpe', 'video/mpeg'],\n    ['mpeg', 'video/mpeg'],\n    ['mpg', ['video/mpeg', 'audio/mpeg']],\n    ['mpga', 'audio/mpeg'],\n    ['mpkg', 'application/vnd.apple.installer+xml'],\n    ['mpm', 'application/vnd.blueice.multipass'],\n    ['mpn', 'application/vnd.mophun.application'],\n    ['mpp', 'application/vnd.ms-project'],\n    ['mpt', 'application/x-project'],\n    ['mpv', 'application/x-project'],\n    ['mpv2', 'video/mpeg'],\n    ['mpx', 'application/x-project'],\n    ['mpy', 'application/vnd.ibm.minipay'],\n    ['mqy', 'application/vnd.mobius.mqy'],\n    ['mrc', 'application/marc'],\n    ['mrcx', 'application/marcxml+xml'],\n    ['ms', 'application/x-troff-ms'],\n    ['mscml', 'application/mediaservercontrol+xml'],\n    ['mseq', 'application/vnd.mseq'],\n    ['msf', 'application/vnd.epson.msf'],\n    ['msg', 'application/vnd.ms-outlook'],\n    ['msh', 'model/mesh'],\n    ['msl', 'application/vnd.mobius.msl'],\n    ['msty', 'application/vnd.muvee.style'],\n    ['mts', 'model/vnd.mts'],\n    ['mus', 'application/vnd.musician'],\n    ['musicxml', 'application/vnd.recordare.musicxml+xml'],\n    ['mv', 'video/x-sgi-movie'],\n    ['mvb', 'application/x-msmediaview'],\n    ['mwf', 'application/vnd.mfer'],\n    ['mxf', 'application/mxf'],\n    ['mxl', 'application/vnd.recordare.musicxml'],\n    ['mxml', 'application/xv+xml'],\n    ['mxs', 'application/vnd.triscape.mxs'],\n    ['mxu', 'video/vnd.mpegurl'],\n    ['my', 'audio/make'],\n    ['mzz', 'application/x-vnd.audioexplosion.mzz'],\n    ['n-gage', 'application/vnd.nokia.n-gage.symbian.install'],\n    ['n3', 'text/n3'],\n    ['nap', 'image/naplps'],\n    ['naplps', 'image/naplps'],\n    ['nbp', 'application/vnd.wolfram.player'],\n    ['nc', 'application/x-netcdf'],\n    ['ncm', 'application/vnd.nokia.configuration-message'],\n    ['ncx', 'application/x-dtbncx+xml'],\n    ['ngdat', 'application/vnd.nokia.n-gage.data'],\n    ['nif', 'image/x-niff'],\n    ['niff', 'image/x-niff'],\n    ['nix', 'application/x-mix-transfer'],\n    ['nlu', 'application/vnd.neurolanguage.nlu'],\n    ['nml', 'application/vnd.enliven'],\n    ['nnd', 'application/vnd.noblenet-directory'],\n    ['nns', 'application/vnd.noblenet-sealer'],\n    ['nnw', 'application/vnd.noblenet-web'],\n    ['npx', 'image/vnd.net-fpx'],\n    ['nsc', 'application/x-conference'],\n    ['nsf', 'application/vnd.lotus-notes'],\n    ['nvd', 'application/x-navidoc'],\n    ['nws', 'message/rfc822'],\n    ['o', 'application/octet-stream'],\n    ['oa2', 'application/vnd.fujitsu.oasys2'],\n    ['oa3', 'application/vnd.fujitsu.oasys3'],\n    ['oas', 'application/vnd.fujitsu.oasys'],\n    ['obd', 'application/x-msbinder'],\n    ['oda', 'application/oda'],\n    ['odb', 'application/vnd.oasis.opendocument.database'],\n    ['odc', 'application/vnd.oasis.opendocument.chart'],\n    ['odf', 'application/vnd.oasis.opendocument.formula'],\n    ['odft', 'application/vnd.oasis.opendocument.formula-template'],\n    ['odg', 'application/vnd.oasis.opendocument.graphics'],\n    ['odi', 'application/vnd.oasis.opendocument.image'],\n    ['odm', 'application/vnd.oasis.opendocument.text-master'],\n    ['odp', 'application/vnd.oasis.opendocument.presentation'],\n    ['ods', 'application/vnd.oasis.opendocument.spreadsheet'],\n    ['odt', 'application/vnd.oasis.opendocument.text'],\n    ['oga', 'audio/ogg'],\n    ['ogv', 'video/ogg'],\n    ['ogx', 'application/ogg'],\n    ['omc', 'application/x-omc'],\n    ['omcd', 'application/x-omcdatamaker'],\n    ['omcr', 'application/x-omcregerator'],\n    ['onetoc', 'application/onenote'],\n    ['opf', 'application/oebps-package+xml'],\n    ['org', 'application/vnd.lotus-organizer'],\n    ['osf', 'application/vnd.yamaha.openscoreformat'],\n    ['osfpvg', 'application/vnd.yamaha.openscoreformat.osfpvg+xml'],\n    ['otc', 'application/vnd.oasis.opendocument.chart-template'],\n    ['otf', 'application/x-font-otf'],\n    ['otg', 'application/vnd.oasis.opendocument.graphics-template'],\n    ['oth', 'application/vnd.oasis.opendocument.text-web'],\n    ['oti', 'application/vnd.oasis.opendocument.image-template'],\n    ['otp', 'application/vnd.oasis.opendocument.presentation-template'],\n    ['ots', 'application/vnd.oasis.opendocument.spreadsheet-template'],\n    ['ott', 'application/vnd.oasis.opendocument.text-template'],\n    ['oxt', 'application/vnd.openofficeorg.extension'],\n    ['p', 'text/x-pascal'],\n    ['p10', ['application/pkcs10', 'application/x-pkcs10']],\n    ['p12', ['application/pkcs-12', 'application/x-pkcs12']],\n    ['p7a', 'application/x-pkcs7-signature'],\n    ['p7b', 'application/x-pkcs7-certificates'],\n    ['p7c', ['application/pkcs7-mime', 'application/x-pkcs7-mime']],\n    ['p7m', ['application/pkcs7-mime', 'application/x-pkcs7-mime']],\n    ['p7r', 'application/x-pkcs7-certreqresp'],\n    ['p7s', ['application/pkcs7-signature', 'application/x-pkcs7-signature']],\n    ['p8', 'application/pkcs8'],\n    ['par', 'text/plain-bas'],\n    ['part', 'application/pro_eng'],\n    ['pas', 'text/pascal'],\n    ['paw', 'application/vnd.pawaafile'],\n    ['pbd', 'application/vnd.powerbuilder6'],\n    ['pbm', 'image/x-portable-bitmap'],\n    ['pcf', 'application/x-font-pcf'],\n    ['pcl', ['application/vnd.hp-pcl', 'application/x-pcl']],\n    ['pclxl', 'application/vnd.hp-pclxl'],\n    ['pct', 'image/x-pict'],\n    ['pcurl', 'application/vnd.curl.pcurl'],\n    ['pcx', 'image/x-pcx'],\n    ['pdb', ['application/vnd.palm', 'chemical/x-pdb']],\n    ['pdf', 'application/pdf'],\n    ['pfa', 'application/x-font-type1'],\n    ['pfr', 'application/font-tdpfr'],\n    ['pfunk', ['audio/make', 'audio/make.my.funk']],\n    ['pfx', 'application/x-pkcs12'],\n    ['pgm', ['image/x-portable-graymap', 'image/x-portable-greymap']],\n    ['pgn', 'application/x-chess-pgn'],\n    ['pgp', 'application/pgp-signature'],\n    ['pic', ['image/pict', 'image/x-pict']],\n    ['pict', 'image/pict'],\n    ['pkg', 'application/x-newton-compatible-pkg'],\n    ['pki', 'application/pkixcmp'],\n    ['pkipath', 'application/pkix-pkipath'],\n    ['pko', ['application/ynd.ms-pkipko', 'application/vnd.ms-pki.pko']],\n    ['pl', ['text/plain', 'text/x-script.perl']],\n    ['plb', 'application/vnd.3gpp.pic-bw-large'],\n    ['plc', 'application/vnd.mobius.plc'],\n    ['plf', 'application/vnd.pocketlearn'],\n    ['pls', 'application/pls+xml'],\n    ['plx', 'application/x-pixclscript'],\n    ['pm', ['text/x-script.perl-module', 'image/x-xpixmap']],\n    ['pm4', 'application/x-pagemaker'],\n    ['pm5', 'application/x-pagemaker'],\n    ['pma', 'application/x-perfmon'],\n    ['pmc', 'application/x-perfmon'],\n    ['pml', ['application/vnd.ctc-posml', 'application/x-perfmon']],\n    ['pmr', 'application/x-perfmon'],\n    ['pmw', 'application/x-perfmon'],\n    ['png', 'image/png'],\n    ['pnm', ['application/x-portable-anymap', 'image/x-portable-anymap']],\n    ['portpkg', 'application/vnd.macports.portpkg'],\n    ['pot', ['application/vnd.ms-powerpoint', 'application/mspowerpoint']],\n    ['potm', 'application/vnd.ms-powerpoint.template.macroenabled.12'],\n    ['potx', 'application/vnd.openxmlformats-officedocument.presentationml.template'],\n    ['pov', 'model/x-pov'],\n    ['ppa', 'application/vnd.ms-powerpoint'],\n    ['ppam', 'application/vnd.ms-powerpoint.addin.macroenabled.12'],\n    ['ppd', 'application/vnd.cups-ppd'],\n    ['ppm', 'image/x-portable-pixmap'],\n    ['pps', ['application/vnd.ms-powerpoint', 'application/mspowerpoint']],\n    ['ppsm', 'application/vnd.ms-powerpoint.slideshow.macroenabled.12'],\n    ['ppsx', 'application/vnd.openxmlformats-officedocument.presentationml.slideshow'],\n    ['ppt', ['application/vnd.ms-powerpoint', 'application/mspowerpoint', 'application/powerpoint', 'application/x-mspowerpoint']],\n    ['pptm', 'application/vnd.ms-powerpoint.presentation.macroenabled.12'],\n    ['pptx', 'application/vnd.openxmlformats-officedocument.presentationml.presentation'],\n    ['ppz', 'application/mspowerpoint'],\n    ['prc', 'application/x-mobipocket-ebook'],\n    ['pre', ['application/vnd.lotus-freelance', 'application/x-freelance']],\n    ['prf', 'application/pics-rules'],\n    ['prt', 'application/pro_eng'],\n    ['ps', 'application/postscript'],\n    ['psb', 'application/vnd.3gpp.pic-bw-small'],\n    ['psd', ['application/octet-stream', 'image/vnd.adobe.photoshop']],\n    ['psf', 'application/x-font-linux-psf'],\n    ['pskcxml', 'application/pskc+xml'],\n    ['ptid', 'application/vnd.pvi.ptid1'],\n    ['pub', 'application/x-mspublisher'],\n    ['pvb', 'application/vnd.3gpp.pic-bw-var'],\n    ['pvu', 'paleovu/x-pv'],\n    ['pwn', 'application/vnd.3m.post-it-notes'],\n    ['pwz', 'application/vnd.ms-powerpoint'],\n    ['py', 'text/x-script.phyton'],\n    ['pya', 'audio/vnd.ms-playready.media.pya'],\n    ['pyc', 'applicaiton/x-bytecode.python'],\n    ['pyv', 'video/vnd.ms-playready.media.pyv'],\n    ['qam', 'application/vnd.epson.quickanime'],\n    ['qbo', 'application/vnd.intu.qbo'],\n    ['qcp', 'audio/vnd.qcelp'],\n    ['qd3', 'x-world/x-3dmf'],\n    ['qd3d', 'x-world/x-3dmf'],\n    ['qfx', 'application/vnd.intu.qfx'],\n    ['qif', 'image/x-quicktime'],\n    ['qps', 'application/vnd.publishare-delta-tree'],\n    ['qt', 'video/quicktime'],\n    ['qtc', 'video/x-qtc'],\n    ['qti', 'image/x-quicktime'],\n    ['qtif', 'image/x-quicktime'],\n    ['qxd', 'application/vnd.quark.quarkxpress'],\n    ['ra', ['audio/x-realaudio', 'audio/x-pn-realaudio', 'audio/x-pn-realaudio-plugin']],\n    ['ram', 'audio/x-pn-realaudio'],\n    ['rar', 'application/x-rar-compressed'],\n    ['ras', ['image/cmu-raster', 'application/x-cmu-raster', 'image/x-cmu-raster']],\n    ['rast', 'image/cmu-raster'],\n    ['rcprofile', 'application/vnd.ipunplugged.rcprofile'],\n    ['rdf', 'application/rdf+xml'],\n    ['rdz', 'application/vnd.data-vision.rdz'],\n    ['rep', 'application/vnd.businessobjects'],\n    ['res', 'application/x-dtbresource+xml'],\n    ['rexx', 'text/x-script.rexx'],\n    ['rf', 'image/vnd.rn-realflash'],\n    ['rgb', 'image/x-rgb'],\n    ['rif', 'application/reginfo+xml'],\n    ['rip', 'audio/vnd.rip'],\n    ['rl', 'application/resource-lists+xml'],\n    ['rlc', 'image/vnd.fujixerox.edmics-rlc'],\n    ['rld', 'application/resource-lists-diff+xml'],\n    ['rm', ['application/vnd.rn-realmedia', 'audio/x-pn-realaudio']],\n    ['rmi', 'audio/mid'],\n    ['rmm', 'audio/x-pn-realaudio'],\n    ['rmp', ['audio/x-pn-realaudio-plugin', 'audio/x-pn-realaudio']],\n    ['rms', 'application/vnd.jcp.javame.midlet-rms'],\n    ['rnc', 'application/relax-ng-compact-syntax'],\n    ['rng', ['application/ringing-tones', 'application/vnd.nokia.ringing-tone']],\n    ['rnx', 'application/vnd.rn-realplayer'],\n    ['roff', 'application/x-troff'],\n    ['rp', 'image/vnd.rn-realpix'],\n    ['rp9', 'application/vnd.cloanto.rp9'],\n    ['rpm', 'audio/x-pn-realaudio-plugin'],\n    ['rpss', 'application/vnd.nokia.radio-presets'],\n    ['rpst', 'application/vnd.nokia.radio-preset'],\n    ['rq', 'application/sparql-query'],\n    ['rs', 'application/rls-services+xml'],\n    ['rsd', 'application/rsd+xml'],\n    ['rt', ['text/richtext', 'text/vnd.rn-realtext']],\n    ['rtf', ['application/rtf', 'text/richtext', 'application/x-rtf']],\n    ['rtx', ['text/richtext', 'application/rtf']],\n    ['rv', 'video/vnd.rn-realvideo'],\n    ['s', 'text/x-asm'],\n    ['s3m', 'audio/s3m'],\n    ['saf', 'application/vnd.yamaha.smaf-audio'],\n    ['saveme', 'application/octet-stream'],\n    ['sbk', 'application/x-tbook'],\n    ['sbml', 'application/sbml+xml'],\n    ['sc', 'application/vnd.ibm.secure-container'],\n    ['scd', 'application/x-msschedule'],\n    ['scm', ['application/vnd.lotus-screencam', 'video/x-scm', 'text/x-script.guile', 'application/x-lotusscreencam', 'text/x-script.scheme']],\n    ['scq', 'application/scvp-cv-request'],\n    ['scs', 'application/scvp-cv-response'],\n    ['sct', 'text/scriptlet'],\n    ['scurl', 'text/vnd.curl.scurl'],\n    ['sda', 'application/vnd.stardivision.draw'],\n    ['sdc', 'application/vnd.stardivision.calc'],\n    ['sdd', 'application/vnd.stardivision.impress'],\n    ['sdkm', 'application/vnd.solent.sdkm+xml'],\n    ['sdml', 'text/plain'],\n    ['sdp', ['application/sdp', 'application/x-sdp']],\n    ['sdr', 'application/sounder'],\n    ['sdw', 'application/vnd.stardivision.writer'],\n    ['sea', ['application/sea', 'application/x-sea']],\n    ['see', 'application/vnd.seemail'],\n    ['seed', 'application/vnd.fdsn.seed'],\n    ['sema', 'application/vnd.sema'],\n    ['semd', 'application/vnd.semd'],\n    ['semf', 'application/vnd.semf'],\n    ['ser', 'application/java-serialized-object'],\n    ['set', 'application/set'],\n    ['setpay', 'application/set-payment-initiation'],\n    ['setreg', 'application/set-registration-initiation'],\n    ['sfd-hdstx', 'application/vnd.hydrostatix.sof-data'],\n    ['sfs', 'application/vnd.spotfire.sfs'],\n    ['sgl', 'application/vnd.stardivision.writer-global'],\n    ['sgm', ['text/sgml', 'text/x-sgml']],\n    ['sgml', ['text/sgml', 'text/x-sgml']],\n    ['sh', ['application/x-shar', 'application/x-bsh', 'application/x-sh', 'text/x-script.sh']],\n    ['shar', ['application/x-bsh', 'application/x-shar']],\n    ['shf', 'application/shf+xml'],\n    ['shtml', ['text/html', 'text/x-server-parsed-html']],\n    ['sid', 'audio/x-psid'],\n    ['sis', 'application/vnd.symbian.install'],\n    ['sit', ['application/x-stuffit', 'application/x-sit']],\n    ['sitx', 'application/x-stuffitx'],\n    ['skd', 'application/x-koan'],\n    ['skm', 'application/x-koan'],\n    ['skp', ['application/vnd.koan', 'application/x-koan']],\n    ['skt', 'application/x-koan'],\n    ['sl', 'application/x-seelogo'],\n    ['sldm', 'application/vnd.ms-powerpoint.slide.macroenabled.12'],\n    ['sldx', 'application/vnd.openxmlformats-officedocument.presentationml.slide'],\n    ['slt', 'application/vnd.epson.salt'],\n    ['sm', 'application/vnd.stepmania.stepchart'],\n    ['smf', 'application/vnd.stardivision.math'],\n    ['smi', ['application/smil', 'application/smil+xml']],\n    ['smil', 'application/smil'],\n    ['snd', ['audio/basic', 'audio/x-adpcm']],\n    ['snf', 'application/x-font-snf'],\n    ['sol', 'application/solids'],\n    ['spc', ['text/x-speech', 'application/x-pkcs7-certificates']],\n    ['spf', 'application/vnd.yamaha.smaf-phrase'],\n    ['spl', ['application/futuresplash', 'application/x-futuresplash']],\n    ['spot', 'text/vnd.in3d.spot'],\n    ['spp', 'application/scvp-vp-response'],\n    ['spq', 'application/scvp-vp-request'],\n    ['spr', 'application/x-sprite'],\n    ['sprite', 'application/x-sprite'],\n    ['src', 'application/x-wais-source'],\n    ['sru', 'application/sru+xml'],\n    ['srx', 'application/sparql-results+xml'],\n    ['sse', 'application/vnd.kodak-descriptor'],\n    ['ssf', 'application/vnd.epson.ssf'],\n    ['ssi', 'text/x-server-parsed-html'],\n    ['ssm', 'application/streamingmedia'],\n    ['ssml', 'application/ssml+xml'],\n    ['sst', ['application/vnd.ms-pkicertstore', 'application/vnd.ms-pki.certstore']],\n    ['st', 'application/vnd.sailingtracker.track'],\n    ['stc', 'application/vnd.sun.xml.calc.template'],\n    ['std', 'application/vnd.sun.xml.draw.template'],\n    ['step', 'application/step'],\n    ['stf', 'application/vnd.wt.stf'],\n    ['sti', 'application/vnd.sun.xml.impress.template'],\n    ['stk', 'application/hyperstudio'],\n    ['stl', ['application/vnd.ms-pkistl', 'application/sla', 'application/vnd.ms-pki.stl', 'application/x-navistyle']],\n    ['stm', 'text/html'],\n    ['stp', 'application/step'],\n    ['str', 'application/vnd.pg.format'],\n    ['stw', 'application/vnd.sun.xml.writer.template'],\n    ['sub', 'image/vnd.dvb.subtitle'],\n    ['sus', 'application/vnd.sus-calendar'],\n    ['sv4cpio', 'application/x-sv4cpio'],\n    ['sv4crc', 'application/x-sv4crc'],\n    ['svc', 'application/vnd.dvb.service'],\n    ['svd', 'application/vnd.svd'],\n    ['svf', ['image/vnd.dwg', 'image/x-dwg']],\n    ['svg', 'image/svg+xml'],\n    ['svr', ['x-world/x-svr', 'application/x-world']],\n    ['swf', 'application/x-shockwave-flash'],\n    ['swi', 'application/vnd.aristanetworks.swi'],\n    ['sxc', 'application/vnd.sun.xml.calc'],\n    ['sxd', 'application/vnd.sun.xml.draw'],\n    ['sxg', 'application/vnd.sun.xml.writer.global'],\n    ['sxi', 'application/vnd.sun.xml.impress'],\n    ['sxm', 'application/vnd.sun.xml.math'],\n    ['sxw', 'application/vnd.sun.xml.writer'],\n    ['t', ['text/troff', 'application/x-troff']],\n    ['talk', 'text/x-speech'],\n    ['tao', 'application/vnd.tao.intent-module-archive'],\n    ['tar', 'application/x-tar'],\n    ['tbk', ['application/toolbook', 'application/x-tbook']],\n    ['tcap', 'application/vnd.3gpp2.tcap'],\n    ['tcl', ['text/x-script.tcl', 'application/x-tcl']],\n    ['tcsh', 'text/x-script.tcsh'],\n    ['teacher', 'application/vnd.smart.teacher'],\n    ['tei', 'application/tei+xml'],\n    ['tex', 'application/x-tex'],\n    ['texi', 'application/x-texinfo'],\n    ['texinfo', 'application/x-texinfo'],\n    ['text', ['application/plain', 'text/plain']],\n    ['tfi', 'application/thraud+xml'],\n    ['tfm', 'application/x-tex-tfm'],\n    ['tgz', ['application/gnutar', 'application/x-compressed']],\n    ['thmx', 'application/vnd.ms-officetheme'],\n    ['tif', ['image/tiff', 'image/x-tiff']],\n    ['tiff', ['image/tiff', 'image/x-tiff']],\n    ['tmo', 'application/vnd.tmobile-livetv'],\n    ['torrent', 'application/x-bittorrent'],\n    ['tpl', 'application/vnd.groove-tool-template'],\n    ['tpt', 'application/vnd.trid.tpt'],\n    ['tr', 'application/x-troff'],\n    ['tra', 'application/vnd.trueapp'],\n    ['trm', 'application/x-msterminal'],\n    ['tsd', 'application/timestamped-data'],\n    ['tsi', 'audio/tsp-audio'],\n    ['tsp', ['application/dsptype', 'audio/tsplayer']],\n    ['tsv', 'text/tab-separated-values'],\n    ['ttf', 'application/x-font-ttf'],\n    ['ttl', 'text/turtle'],\n    ['turbot', 'image/florian'],\n    ['twd', 'application/vnd.simtech-mindmapper'],\n    ['txd', 'application/vnd.genomatix.tuxedo'],\n    ['txf', 'application/vnd.mobius.txf'],\n    ['txt', 'text/plain'],\n    ['ufd', 'application/vnd.ufdl'],\n    ['uil', 'text/x-uil'],\n    ['uls', 'text/iuls'],\n    ['umj', 'application/vnd.umajin'],\n    ['uni', 'text/uri-list'],\n    ['unis', 'text/uri-list'],\n    ['unityweb', 'application/vnd.unity'],\n    ['unv', 'application/i-deas'],\n    ['uoml', 'application/vnd.uoml+xml'],\n    ['uri', 'text/uri-list'],\n    ['uris', 'text/uri-list'],\n    ['ustar', ['application/x-ustar', 'multipart/x-ustar']],\n    ['utz', 'application/vnd.uiq.theme'],\n    ['uu', ['application/octet-stream', 'text/x-uuencode']],\n    ['uue', 'text/x-uuencode'],\n    ['uva', 'audio/vnd.dece.audio'],\n    ['uvh', 'video/vnd.dece.hd'],\n    ['uvi', 'image/vnd.dece.graphic'],\n    ['uvm', 'video/vnd.dece.mobile'],\n    ['uvp', 'video/vnd.dece.pd'],\n    ['uvs', 'video/vnd.dece.sd'],\n    ['uvu', 'video/vnd.uvvu.mp4'],\n    ['uvv', 'video/vnd.dece.video'],\n    ['vcd', 'application/x-cdlink'],\n    ['vcf', 'text/x-vcard'],\n    ['vcg', 'application/vnd.groove-vcard'],\n    ['vcs', 'text/x-vcalendar'],\n    ['vcx', 'application/vnd.vcx'],\n    ['vda', 'application/vda'],\n    ['vdo', 'video/vdo'],\n    ['vew', 'application/groupwise'],\n    ['vis', 'application/vnd.visionary'],\n    ['viv', ['video/vivo', 'video/vnd.vivo']],\n    ['vivo', ['video/vivo', 'video/vnd.vivo']],\n    ['vmd', 'application/vocaltec-media-desc'],\n    ['vmf', 'application/vocaltec-media-file'],\n    ['voc', ['audio/voc', 'audio/x-voc']],\n    ['vos', 'video/vosaic'],\n    ['vox', 'audio/voxware'],\n    ['vqe', 'audio/x-twinvq-plugin'],\n    ['vqf', 'audio/x-twinvq'],\n    ['vql', 'audio/x-twinvq-plugin'],\n    ['vrml', ['model/vrml', 'x-world/x-vrml', 'application/x-vrml']],\n    ['vrt', 'x-world/x-vrt'],\n    ['vsd', ['application/vnd.visio', 'application/x-visio']],\n    ['vsf', 'application/vnd.vsf'],\n    ['vst', 'application/x-visio'],\n    ['vsw', 'application/x-visio'],\n    ['vtu', 'model/vnd.vtu'],\n    ['vxml', 'application/voicexml+xml'],\n    ['w60', 'application/wordperfect6.0'],\n    ['w61', 'application/wordperfect6.1'],\n    ['w6w', 'application/msword'],\n    ['wad', 'application/x-doom'],\n    ['wav', ['audio/wav', 'audio/x-wav']],\n    ['wax', 'audio/x-ms-wax'],\n    ['wb1', 'application/x-qpro'],\n    ['wbmp', 'image/vnd.wap.wbmp'],\n    ['wbs', 'application/vnd.criticaltools.wbs+xml'],\n    ['wbxml', 'application/vnd.wap.wbxml'],\n    ['wcm', 'application/vnd.ms-works'],\n    ['wdb', 'application/vnd.ms-works'],\n    ['web', 'application/vnd.xara'],\n    ['weba', 'audio/webm'],\n    ['webm', 'video/webm'],\n    ['webp', 'image/webp'],\n    ['wg', 'application/vnd.pmi.widget'],\n    ['wgt', 'application/widget'],\n    ['wiz', 'application/msword'],\n    ['wk1', 'application/x-123'],\n    ['wks', 'application/vnd.ms-works'],\n    ['wm', 'video/x-ms-wm'],\n    ['wma', 'audio/x-ms-wma'],\n    ['wmd', 'application/x-ms-wmd'],\n    ['wmf', ['windows/metafile', 'application/x-msmetafile']],\n    ['wml', 'text/vnd.wap.wml'],\n    ['wmlc', 'application/vnd.wap.wmlc'],\n    ['wmls', 'text/vnd.wap.wmlscript'],\n    ['wmlsc', 'application/vnd.wap.wmlscriptc'],\n    ['wmv', 'video/x-ms-wmv'],\n    ['wmx', 'video/x-ms-wmx'],\n    ['wmz', 'application/x-ms-wmz'],\n    ['woff', 'application/x-font-woff'],\n    ['word', 'application/msword'],\n    ['wp', 'application/wordperfect'],\n    ['wp5', ['application/wordperfect', 'application/wordperfect6.0']],\n    ['wp6', 'application/wordperfect'],\n    ['wpd', ['application/wordperfect', 'application/vnd.wordperfect', 'application/x-wpwin']],\n    ['wpl', 'application/vnd.ms-wpl'],\n    ['wps', 'application/vnd.ms-works'],\n    ['wq1', 'application/x-lotus'],\n    ['wqd', 'application/vnd.wqd'],\n    ['wri', ['application/mswrite', 'application/x-wri', 'application/x-mswrite']],\n    ['wrl', ['model/vrml', 'x-world/x-vrml', 'application/x-world']],\n    ['wrz', ['model/vrml', 'x-world/x-vrml']],\n    ['wsc', 'text/scriplet'],\n    ['wsdl', 'application/wsdl+xml'],\n    ['wspolicy', 'application/wspolicy+xml'],\n    ['wsrc', 'application/x-wais-source'],\n    ['wtb', 'application/vnd.webturbo'],\n    ['wtk', 'application/x-wintalk'],\n    ['wvx', 'video/x-ms-wvx'],\n    ['x-png', 'image/png'],\n    ['x3d', 'application/vnd.hzn-3d-crossword'],\n    ['xaf', 'x-world/x-vrml'],\n    ['xap', 'application/x-silverlight-app'],\n    ['xar', 'application/vnd.xara'],\n    ['xbap', 'application/x-ms-xbap'],\n    ['xbd', 'application/vnd.fujixerox.docuworks.binder'],\n    ['xbm', ['image/xbm', 'image/x-xbm', 'image/x-xbitmap']],\n    ['xdf', 'application/xcap-diff+xml'],\n    ['xdm', 'application/vnd.syncml.dm+xml'],\n    ['xdp', 'application/vnd.adobe.xdp+xml'],\n    ['xdr', 'video/x-amt-demorun'],\n    ['xdssc', 'application/dssc+xml'],\n    ['xdw', 'application/vnd.fujixerox.docuworks'],\n    ['xenc', 'application/xenc+xml'],\n    ['xer', 'application/patch-ops-error+xml'],\n    ['xfdf', 'application/vnd.adobe.xfdf'],\n    ['xfdl', 'application/vnd.xfdl'],\n    ['xgz', 'xgl/drawing'],\n    ['xhtml', 'application/xhtml+xml'],\n    ['xif', 'image/vnd.xiff'],\n    ['xl', 'application/excel'],\n    ['xla', ['application/vnd.ms-excel', 'application/excel', 'application/x-msexcel', 'application/x-excel']],\n    ['xlam', 'application/vnd.ms-excel.addin.macroenabled.12'],\n    ['xlb', ['application/excel', 'application/vnd.ms-excel', 'application/x-excel']],\n    ['xlc', ['application/vnd.ms-excel', 'application/excel', 'application/x-excel']],\n    ['xld', ['application/excel', 'application/x-excel']],\n    ['xlk', ['application/excel', 'application/x-excel']],\n    ['xll', ['application/excel', 'application/vnd.ms-excel', 'application/x-excel']],\n    ['xlm', ['application/vnd.ms-excel', 'application/excel', 'application/x-excel']],\n    ['xls', ['application/vnd.ms-excel', 'application/excel', 'application/x-msexcel', 'application/x-excel']],\n    ['xlsb', 'application/vnd.ms-excel.sheet.binary.macroenabled.12'],\n    ['xlsm', 'application/vnd.ms-excel.sheet.macroenabled.12'],\n    ['xlsx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'],\n    ['xlt', ['application/vnd.ms-excel', 'application/excel', 'application/x-excel']],\n    ['xltm', 'application/vnd.ms-excel.template.macroenabled.12'],\n    ['xltx', 'application/vnd.openxmlformats-officedocument.spreadsheetml.template'],\n    ['xlv', ['application/excel', 'application/x-excel']],\n    ['xlw', ['application/vnd.ms-excel', 'application/excel', 'application/x-msexcel', 'application/x-excel']],\n    ['xm', 'audio/xm'],\n    ['xml', ['application/xml', 'text/xml', 'application/atom+xml', 'application/rss+xml']],\n    ['xmz', 'xgl/movie'],\n    ['xo', 'application/vnd.olpc-sugar'],\n    ['xof', 'x-world/x-vrml'],\n    ['xop', 'application/xop+xml'],\n    ['xpi', 'application/x-xpinstall'],\n    ['xpix', 'application/x-vnd.ls-xpix'],\n    ['xpm', ['image/xpm', 'image/x-xpixmap']],\n    ['xpr', 'application/vnd.is-xpr'],\n    ['xps', 'application/vnd.ms-xpsdocument'],\n    ['xpw', 'application/vnd.intercon.formnet'],\n    ['xslt', 'application/xslt+xml'],\n    ['xsm', 'application/vnd.syncml+xml'],\n    ['xspf', 'application/xspf+xml'],\n    ['xsr', 'video/x-amt-showrun'],\n    ['xul', 'application/vnd.mozilla.xul+xml'],\n    ['xwd', ['image/x-xwd', 'image/x-xwindowdump']],\n    ['xyz', ['chemical/x-xyz', 'chemical/x-pdb']],\n    ['yang', 'application/yang'],\n    ['yin', 'application/yin+xml'],\n    ['z', ['application/x-compressed', 'application/x-compress']],\n    ['zaz', 'application/vnd.zzazz.deck+xml'],\n    ['zip', ['application/zip', 'multipart/x-zip', 'application/x-zip-compressed', 'application/x-compressed']],\n    ['zir', 'application/vnd.zul'],\n    ['zmm', 'application/vnd.handheld-entertainment+xml'],\n    ['zoo', 'application/octet-stream'],\n    ['zsh', 'text/x-script.zsh']\n]);\n\nmodule.exports = {\n    detectMimeType(filename) {\n        if (!filename) {\n            return defaultMimeType;\n        }\n\n        let parsed = path.parse(filename);\n        let extension = (parsed.ext.substr(1) || parsed.name || '').split('?').shift().trim().toLowerCase();\n        let value = defaultMimeType;\n\n        if (extensions.has(extension)) {\n            value = extensions.get(extension);\n        }\n\n        if (Array.isArray(value)) {\n            return value[0];\n        }\n        return value;\n    },\n\n    detectExtension(mimeType) {\n        if (!mimeType) {\n            return defaultExtension;\n        }\n        let parts = (mimeType || '').toLowerCase().trim().split('/');\n        let rootType = parts.shift().trim();\n        let subType = parts.join('/').trim();\n\n        if (mimeTypes.has(rootType + '/' + subType)) {\n            let value = mimeTypes.get(rootType + '/' + subType);\n            if (Array.isArray(value)) {\n                return value[0];\n            }\n            return value;\n        }\n\n        switch (rootType) {\n            case 'text':\n                return 'txt';\n            default:\n                return 'bin';\n        }\n    }\n};\n","/* eslint no-undefined: 0, prefer-spread: 0, no-control-regex: 0 */\n\n'use strict';\n\nconst crypto = require('crypto');\nconst os = require('os');\nconst fs = require('fs');\nconst punycode = require('punycode');\nconst PassThrough = require('stream').PassThrough;\nconst shared = require('../shared');\n\nconst mimeFuncs = require('../mime-funcs');\nconst qp = require('../qp');\nconst base64 = require('../base64');\nconst addressparser = require('../addressparser');\nconst fetch = require('../fetch');\nconst LastNewline = require('./last-newline');\n\nconst LeWindows = require('./le-windows');\nconst LeUnix = require('./le-unix');\n\n/**\n * Creates a new mime tree node. Assumes 'multipart/*' as the content type\n * if it is a branch, anything else counts as leaf. If rootNode is missing from\n * the options, assumes this is the root.\n *\n * @param {String} contentType Define the content type for the node. Can be left blank for attachments (derived from filename)\n * @param {Object} [options] optional options\n * @param {Object} [options.rootNode] root node for this tree\n * @param {Object} [options.parentNode] immediate parent for this node\n * @param {Object} [options.filename] filename for an attachment node\n * @param {String} [options.baseBoundary] shared part of the unique multipart boundary\n * @param {Boolean} [options.keepBcc] If true, do not exclude Bcc from the generated headers\n * @param {Function} [options.normalizeHeaderKey] method to normalize header keys for custom caseing\n * @param {String} [options.textEncoding] either 'Q' (the default) or 'B'\n */\nclass MimeNode {\n    constructor(contentType, options) {\n        this.nodeCounter = 0;\n\n        options = options || {};\n\n        /**\n         * shared part of the unique multipart boundary\n         */\n        this.baseBoundary = options.baseBoundary || crypto.randomBytes(8).toString('hex');\n        this.boundaryPrefix = options.boundaryPrefix || '--_NmP';\n\n        this.disableFileAccess = !!options.disableFileAccess;\n        this.disableUrlAccess = !!options.disableUrlAccess;\n\n        this.normalizeHeaderKey = options.normalizeHeaderKey;\n\n        /**\n         * If date headers is missing and current node is the root, this value is used instead\n         */\n        this.date = new Date();\n\n        /**\n         * Root node for current mime tree\n         */\n        this.rootNode = options.rootNode || this;\n\n        /**\n         * If true include Bcc in generated headers (if available)\n         */\n        this.keepBcc = !!options.keepBcc;\n\n        /**\n         * If filename is specified but contentType is not (probably an attachment)\n         * detect the content type from filename extension\n         */\n        if (options.filename) {\n            /**\n             * Filename for this node. Useful with attachments\n             */\n            this.filename = options.filename;\n            if (!contentType) {\n                contentType = mimeFuncs.detectMimeType(this.filename.split('.').pop());\n            }\n        }\n\n        /**\n         * Indicates which encoding should be used for header strings: \"Q\" or \"B\"\n         */\n        this.textEncoding = (options.textEncoding || '').toString().trim().charAt(0).toUpperCase();\n\n        /**\n         * Immediate parent for this node (or undefined if not set)\n         */\n        this.parentNode = options.parentNode;\n\n        /**\n         * Hostname for default message-id values\n         */\n        this.hostname = options.hostname;\n\n        /**\n         * If set to 'win' then uses \\r\\n, if 'linux' then \\n. If not set (or `raw` is used) then newlines are kept as is.\n         */\n        this.newline = options.newline;\n\n        /**\n         * An array for possible child nodes\n         */\n        this.childNodes = [];\n\n        /**\n         * Used for generating unique boundaries (prepended to the shared base)\n         */\n        this._nodeId = ++this.rootNode.nodeCounter;\n\n        /**\n         * A list of header values for this node in the form of [{key:'', value:''}]\n         */\n        this._headers = [];\n\n        /**\n         * True if the content only uses ASCII printable characters\n         * @type {Boolean}\n         */\n        this._isPlainText = false;\n\n        /**\n         * True if the content is plain text but has longer lines than allowed\n         * @type {Boolean}\n         */\n        this._hasLongLines = false;\n\n        /**\n         * If set, use instead this value for envelopes instead of generating one\n         * @type {Boolean}\n         */\n        this._envelope = false;\n\n        /**\n         * If set then use this value as the stream content instead of building it\n         * @type {String|Buffer|Stream}\n         */\n        this._raw = false;\n\n        /**\n         * Additional transform streams that the message will be piped before\n         * exposing by createReadStream\n         * @type {Array}\n         */\n        this._transforms = [];\n\n        /**\n         * Additional process functions that the message will be piped through before\n         * exposing by createReadStream. These functions are run after transforms\n         * @type {Array}\n         */\n        this._processFuncs = [];\n\n        /**\n         * If content type is set (or derived from the filename) add it to headers\n         */\n        if (contentType) {\n            this.setHeader('Content-Type', contentType);\n        }\n    }\n\n    /////// PUBLIC METHODS\n\n    /**\n     * Creates and appends a child node.Arguments provided are passed to MimeNode constructor\n     *\n     * @param {String} [contentType] Optional content type\n     * @param {Object} [options] Optional options object\n     * @return {Object} Created node object\n     */\n    createChild(contentType, options) {\n        if (!options && typeof contentType === 'object') {\n            options = contentType;\n            contentType = undefined;\n        }\n        let node = new MimeNode(contentType, options);\n        this.appendChild(node);\n        return node;\n    }\n\n    /**\n     * Appends an existing node to the mime tree. Removes the node from an existing\n     * tree if needed\n     *\n     * @param {Object} childNode node to be appended\n     * @return {Object} Appended node object\n     */\n    appendChild(childNode) {\n        if (childNode.rootNode !== this.rootNode) {\n            childNode.rootNode = this.rootNode;\n            childNode._nodeId = ++this.rootNode.nodeCounter;\n        }\n\n        childNode.parentNode = this;\n\n        this.childNodes.push(childNode);\n        return childNode;\n    }\n\n    /**\n     * Replaces current node with another node\n     *\n     * @param {Object} node Replacement node\n     * @return {Object} Replacement node\n     */\n    replace(node) {\n        if (node === this) {\n            return this;\n        }\n\n        this.parentNode.childNodes.forEach((childNode, i) => {\n            if (childNode === this) {\n                node.rootNode = this.rootNode;\n                node.parentNode = this.parentNode;\n                node._nodeId = this._nodeId;\n\n                this.rootNode = this;\n                this.parentNode = undefined;\n\n                node.parentNode.childNodes[i] = node;\n            }\n        });\n\n        return node;\n    }\n\n    /**\n     * Removes current node from the mime tree\n     *\n     * @return {Object} removed node\n     */\n    remove() {\n        if (!this.parentNode) {\n            return this;\n        }\n\n        for (let i = this.parentNode.childNodes.length - 1; i >= 0; i--) {\n            if (this.parentNode.childNodes[i] === this) {\n                this.parentNode.childNodes.splice(i, 1);\n                this.parentNode = undefined;\n                this.rootNode = this;\n                return this;\n            }\n        }\n    }\n\n    /**\n     * Sets a header value. If the value for selected key exists, it is overwritten.\n     * You can set multiple values as well by using [{key:'', value:''}] or\n     * {key: 'value'} as the first argument.\n     *\n     * @param {String|Array|Object} key Header key or a list of key value pairs\n     * @param {String} value Header value\n     * @return {Object} current node\n     */\n    setHeader(key, value) {\n        let added = false,\n            headerValue;\n\n        // Allow setting multiple headers at once\n        if (!value && key && typeof key === 'object') {\n            // allow {key:'content-type', value: 'text/plain'}\n            if (key.key && 'value' in key) {\n                this.setHeader(key.key, key.value);\n            } else if (Array.isArray(key)) {\n                // allow [{key:'content-type', value: 'text/plain'}]\n                key.forEach(i => {\n                    this.setHeader(i.key, i.value);\n                });\n            } else {\n                // allow {'content-type': 'text/plain'}\n                Object.keys(key).forEach(i => {\n                    this.setHeader(i, key[i]);\n                });\n            }\n            return this;\n        }\n\n        key = this._normalizeHeaderKey(key);\n\n        headerValue = {\n            key,\n            value\n        };\n\n        // Check if the value exists and overwrite\n        for (let i = 0, len = this._headers.length; i < len; i++) {\n            if (this._headers[i].key === key) {\n                if (!added) {\n                    // replace the first match\n                    this._headers[i] = headerValue;\n                    added = true;\n                } else {\n                    // remove following matches\n                    this._headers.splice(i, 1);\n                    i--;\n                    len--;\n                }\n            }\n        }\n\n        // match not found, append the value\n        if (!added) {\n            this._headers.push(headerValue);\n        }\n\n        return this;\n    }\n\n    /**\n     * Adds a header value. If the value for selected key exists, the value is appended\n     * as a new field and old one is not touched.\n     * You can set multiple values as well by using [{key:'', value:''}] or\n     * {key: 'value'} as the first argument.\n     *\n     * @param {String|Array|Object} key Header key or a list of key value pairs\n     * @param {String} value Header value\n     * @return {Object} current node\n     */\n    addHeader(key, value) {\n        // Allow setting multiple headers at once\n        if (!value && key && typeof key === 'object') {\n            // allow {key:'content-type', value: 'text/plain'}\n            if (key.key && key.value) {\n                this.addHeader(key.key, key.value);\n            } else if (Array.isArray(key)) {\n                // allow [{key:'content-type', value: 'text/plain'}]\n                key.forEach(i => {\n                    this.addHeader(i.key, i.value);\n                });\n            } else {\n                // allow {'content-type': 'text/plain'}\n                Object.keys(key).forEach(i => {\n                    this.addHeader(i, key[i]);\n                });\n            }\n            return this;\n        } else if (Array.isArray(value)) {\n            value.forEach(val => {\n                this.addHeader(key, val);\n            });\n            return this;\n        }\n\n        this._headers.push({\n            key: this._normalizeHeaderKey(key),\n            value\n        });\n\n        return this;\n    }\n\n    /**\n     * Retrieves the first mathcing value of a selected key\n     *\n     * @param {String} key Key to search for\n     * @retun {String} Value for the key\n     */\n    getHeader(key) {\n        key = this._normalizeHeaderKey(key);\n        for (let i = 0, len = this._headers.length; i < len; i++) {\n            if (this._headers[i].key === key) {\n                return this._headers[i].value;\n            }\n        }\n    }\n\n    /**\n     * Sets body content for current node. If the value is a string, charset is added automatically\n     * to Content-Type (if it is text/*). If the value is a Buffer, you need to specify\n     * the charset yourself\n     *\n     * @param (String|Buffer) content Body content\n     * @return {Object} current node\n     */\n    setContent(content) {\n        this.content = content;\n        if (typeof this.content.pipe === 'function') {\n            // pre-stream handler. might be triggered if a stream is set as content\n            // and 'error' fires before anything is done with this stream\n            this._contentErrorHandler = err => {\n                this.content.removeListener('error', this._contentErrorHandler);\n                this.content = err;\n            };\n            this.content.once('error', this._contentErrorHandler);\n        } else if (typeof this.content === 'string') {\n            this._isPlainText = mimeFuncs.isPlainText(this.content);\n            if (this._isPlainText && mimeFuncs.hasLongerLines(this.content, 76)) {\n                // If there are lines longer than 76 symbols/bytes do not use 7bit\n                this._hasLongLines = true;\n            }\n        }\n        return this;\n    }\n\n    build(callback) {\n        let promise;\n\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n\n        let stream = this.createReadStream();\n        let buf = [];\n        let buflen = 0;\n        let returned = false;\n\n        stream.on('readable', () => {\n            let chunk;\n\n            while ((chunk = stream.read()) !== null) {\n                buf.push(chunk);\n                buflen += chunk.length;\n            }\n        });\n\n        stream.once('error', err => {\n            if (returned) {\n                return;\n            }\n            returned = true;\n\n            return callback(err);\n        });\n\n        stream.once('end', chunk => {\n            if (returned) {\n                return;\n            }\n            returned = true;\n\n            if (chunk && chunk.length) {\n                buf.push(chunk);\n                buflen += chunk.length;\n            }\n            return callback(null, Buffer.concat(buf, buflen));\n        });\n\n        return promise;\n    }\n\n    getTransferEncoding() {\n        let transferEncoding = false;\n        let contentType = (this.getHeader('Content-Type') || '').toString().toLowerCase().trim();\n\n        if (this.content) {\n            transferEncoding = (this.getHeader('Content-Transfer-Encoding') || '').toString().toLowerCase().trim();\n            if (!transferEncoding || !['base64', 'quoted-printable'].includes(transferEncoding)) {\n                if (/^text\\//i.test(contentType)) {\n                    // If there are no special symbols, no need to modify the text\n                    if (this._isPlainText && !this._hasLongLines) {\n                        transferEncoding = '7bit';\n                    } else if (typeof this.content === 'string' || this.content instanceof Buffer) {\n                        // detect preferred encoding for string value\n                        transferEncoding = this._getTextEncoding(this.content) === 'Q' ? 'quoted-printable' : 'base64';\n                    } else {\n                        // we can not check content for a stream, so either use preferred encoding or fallback to QP\n                        transferEncoding = this.textEncoding === 'B' ? 'base64' : 'quoted-printable';\n                    }\n                } else if (!/^(multipart|message)\\//i.test(contentType)) {\n                    transferEncoding = transferEncoding || 'base64';\n                }\n            }\n        }\n        return transferEncoding;\n    }\n\n    /**\n     * Builds the header block for the mime node. Append \\r\\n\\r\\n before writing the content\n     *\n     * @returns {String} Headers\n     */\n    buildHeaders() {\n        let transferEncoding = this.getTransferEncoding();\n        let headers = [];\n\n        if (transferEncoding) {\n            this.setHeader('Content-Transfer-Encoding', transferEncoding);\n        }\n\n        if (this.filename && !this.getHeader('Content-Disposition')) {\n            this.setHeader('Content-Disposition', 'attachment');\n        }\n\n        // Ensure mandatory header fields\n        if (this.rootNode === this) {\n            if (!this.getHeader('Date')) {\n                this.setHeader('Date', this.date.toUTCString().replace(/GMT/, '+0000'));\n            }\n\n            // ensure that Message-Id is present\n            this.messageId();\n\n            if (!this.getHeader('MIME-Version')) {\n                this.setHeader('MIME-Version', '1.0');\n            }\n        }\n\n        this._headers.forEach(header => {\n            let key = header.key;\n            let value = header.value;\n            let structured;\n            let param;\n            let options = {};\n            let formattedHeaders = ['From', 'Sender', 'To', 'Cc', 'Bcc', 'Reply-To', 'Date', 'References'];\n\n            if (value && typeof value === 'object' && !formattedHeaders.includes(key)) {\n                Object.keys(value).forEach(key => {\n                    if (key !== 'value') {\n                        options[key] = value[key];\n                    }\n                });\n                value = (value.value || '').toString();\n                if (!value.trim()) {\n                    return;\n                }\n            }\n\n            if (options.prepared) {\n                // header value is\n                if (options.foldLines) {\n                    headers.push(mimeFuncs.foldLines(key + ': ' + value));\n                } else {\n                    headers.push(key + ': ' + value);\n                }\n                return;\n            }\n\n            switch (header.key) {\n                case 'Content-Disposition':\n                    structured = mimeFuncs.parseHeaderValue(value);\n                    if (this.filename) {\n                        structured.params.filename = this.filename;\n                    }\n                    value = mimeFuncs.buildHeaderValue(structured);\n                    break;\n\n                case 'Content-Type':\n                    structured = mimeFuncs.parseHeaderValue(value);\n\n                    this._handleContentType(structured);\n\n                    if (structured.value.match(/^text\\/plain\\b/) && typeof this.content === 'string' && /[\\u0080-\\uFFFF]/.test(this.content)) {\n                        structured.params.charset = 'utf-8';\n                    }\n\n                    value = mimeFuncs.buildHeaderValue(structured);\n\n                    if (this.filename) {\n                        // add support for non-compliant clients like QQ webmail\n                        // we can't build the value with buildHeaderValue as the value is non standard and\n                        // would be converted to parameter continuation encoding that we do not want\n                        param = this._encodeWords(this.filename);\n\n                        if (param !== this.filename || /[\\s'\"\\\\;:/=(),<>@[\\]?]|^-/.test(param)) {\n                            // include value in quotes if needed\n                            param = '\"' + param + '\"';\n                        }\n                        value += '; name=' + param;\n                    }\n                    break;\n\n                case 'Bcc':\n                    if (!this.keepBcc) {\n                        // skip BCC values\n                        return;\n                    }\n                    break;\n            }\n\n            value = this._encodeHeaderValue(key, value);\n\n            // skip empty lines\n            if (!(value || '').toString().trim()) {\n                return;\n            }\n\n            if (typeof this.normalizeHeaderKey === 'function') {\n                let normalized = this.normalizeHeaderKey(key, value);\n                if (normalized && typeof normalized === 'string' && normalized.length) {\n                    key = normalized;\n                }\n            }\n\n            headers.push(mimeFuncs.foldLines(key + ': ' + value, 76));\n        });\n\n        return headers.join('\\r\\n');\n    }\n\n    /**\n     * Streams the rfc2822 message from the current node. If this is a root node,\n     * mandatory header fields are set if missing (Date, Message-Id, MIME-Version)\n     *\n     * @return {String} Compiled message\n     */\n    createReadStream(options) {\n        options = options || {};\n\n        let stream = new PassThrough(options);\n        let outputStream = stream;\n        let transform;\n\n        this.stream(stream, options, err => {\n            if (err) {\n                outputStream.emit('error', err);\n                return;\n            }\n            stream.end();\n        });\n\n        for (let i = 0, len = this._transforms.length; i < len; i++) {\n            transform = typeof this._transforms[i] === 'function' ? this._transforms[i]() : this._transforms[i];\n            outputStream.once('error', err => {\n                transform.emit('error', err);\n            });\n            outputStream = outputStream.pipe(transform);\n        }\n\n        // ensure terminating newline after possible user transforms\n        transform = new LastNewline();\n        outputStream.once('error', err => {\n            transform.emit('error', err);\n        });\n        outputStream = outputStream.pipe(transform);\n\n        // dkim and stuff\n        for (let i = 0, len = this._processFuncs.length; i < len; i++) {\n            transform = this._processFuncs[i];\n            outputStream = transform(outputStream);\n        }\n\n        if (this.newline) {\n            const winbreak = ['win', 'windows', 'dos', '\\r\\n'].includes(this.newline.toString().toLowerCase());\n            const newlineTransform = winbreak ? new LeWindows() : new LeUnix();\n\n            const stream = outputStream.pipe(newlineTransform);\n            outputStream.on('error', err => stream.emit('error', err));\n            return stream;\n        }\n\n        return outputStream;\n    }\n\n    /**\n     * Appends a transform stream object to the transforms list. Final output\n     * is passed through this stream before exposing\n     *\n     * @param {Object} transform Read-Write stream\n     */\n    transform(transform) {\n        this._transforms.push(transform);\n    }\n\n    /**\n     * Appends a post process function. The functon is run after transforms and\n     * uses the following syntax\n     *\n     *   processFunc(input) -> outputStream\n     *\n     * @param {Object} processFunc Read-Write stream\n     */\n    processFunc(processFunc) {\n        this._processFuncs.push(processFunc);\n    }\n\n    stream(outputStream, options, done) {\n        let transferEncoding = this.getTransferEncoding();\n        let contentStream;\n        let localStream;\n\n        // protect actual callback against multiple triggering\n        let returned = false;\n        let callback = err => {\n            if (returned) {\n                return;\n            }\n            returned = true;\n            done(err);\n        };\n\n        // for multipart nodes, push child nodes\n        // for content nodes end the stream\n        let finalize = () => {\n            let childId = 0;\n            let processChildNode = () => {\n                if (childId >= this.childNodes.length) {\n                    outputStream.write('\\r\\n--' + this.boundary + '--\\r\\n');\n                    return callback();\n                }\n                let child = this.childNodes[childId++];\n                outputStream.write((childId > 1 ? '\\r\\n' : '') + '--' + this.boundary + '\\r\\n');\n                child.stream(outputStream, options, err => {\n                    if (err) {\n                        return callback(err);\n                    }\n                    setImmediate(processChildNode);\n                });\n            };\n\n            if (this.multipart) {\n                setImmediate(processChildNode);\n            } else {\n                return callback();\n            }\n        };\n\n        // pushes node content\n        let sendContent = () => {\n            if (this.content) {\n                if (Object.prototype.toString.call(this.content) === '[object Error]') {\n                    // content is already errored\n                    return callback(this.content);\n                }\n\n                if (typeof this.content.pipe === 'function') {\n                    this.content.removeListener('error', this._contentErrorHandler);\n                    this._contentErrorHandler = err => callback(err);\n                    this.content.once('error', this._contentErrorHandler);\n                }\n\n                let createStream = () => {\n                    if (['quoted-printable', 'base64'].includes(transferEncoding)) {\n                        contentStream = new (transferEncoding === 'base64' ? base64 : qp).Encoder(options);\n\n                        contentStream.pipe(outputStream, {\n                            end: false\n                        });\n                        contentStream.once('end', finalize);\n                        contentStream.once('error', err => callback(err));\n\n                        localStream = this._getStream(this.content);\n                        localStream.pipe(contentStream);\n                    } else {\n                        // anything that is not QP or Base54 passes as-is\n                        localStream = this._getStream(this.content);\n                        localStream.pipe(outputStream, {\n                            end: false\n                        });\n                        localStream.once('end', finalize);\n                    }\n\n                    localStream.once('error', err => callback(err));\n                };\n\n                if (this.content._resolve) {\n                    let chunks = [];\n                    let chunklen = 0;\n                    let returned = false;\n                    let sourceStream = this._getStream(this.content);\n                    sourceStream.on('error', err => {\n                        if (returned) {\n                            return;\n                        }\n                        returned = true;\n                        callback(err);\n                    });\n                    sourceStream.on('readable', () => {\n                        let chunk;\n                        while ((chunk = sourceStream.read()) !== null) {\n                            chunks.push(chunk);\n                            chunklen += chunk.length;\n                        }\n                    });\n                    sourceStream.on('end', () => {\n                        if (returned) {\n                            return;\n                        }\n                        returned = true;\n                        this.content._resolve = false;\n                        this.content._resolvedValue = Buffer.concat(chunks, chunklen);\n                        setImmediate(createStream);\n                    });\n                } else {\n                    setImmediate(createStream);\n                }\n                return;\n            } else {\n                return setImmediate(finalize);\n            }\n        };\n\n        if (this._raw) {\n            setImmediate(() => {\n                if (Object.prototype.toString.call(this._raw) === '[object Error]') {\n                    // content is already errored\n                    return callback(this._raw);\n                }\n\n                // remove default error handler (if set)\n                if (typeof this._raw.pipe === 'function') {\n                    this._raw.removeListener('error', this._contentErrorHandler);\n                }\n\n                let raw = this._getStream(this._raw);\n                raw.pipe(outputStream, {\n                    end: false\n                });\n                raw.on('error', err => outputStream.emit('error', err));\n                raw.on('end', finalize);\n            });\n        } else {\n            outputStream.write(this.buildHeaders() + '\\r\\n\\r\\n');\n            setImmediate(sendContent);\n        }\n    }\n\n    /**\n     * Sets envelope to be used instead of the generated one\n     *\n     * @return {Object} SMTP envelope in the form of {from: 'from@example.com', to: ['to@example.com']}\n     */\n    setEnvelope(envelope) {\n        let list;\n\n        this._envelope = {\n            from: false,\n            to: []\n        };\n\n        if (envelope.from) {\n            list = [];\n            this._convertAddresses(this._parseAddresses(envelope.from), list);\n            list = list.filter(address => address && address.address);\n            if (list.length && list[0]) {\n                this._envelope.from = list[0].address;\n            }\n        }\n        ['to', 'cc', 'bcc'].forEach(key => {\n            if (envelope[key]) {\n                this._convertAddresses(this._parseAddresses(envelope[key]), this._envelope.to);\n            }\n        });\n\n        this._envelope.to = this._envelope.to.map(to => to.address).filter(address => address);\n\n        let standardFields = ['to', 'cc', 'bcc', 'from'];\n        Object.keys(envelope).forEach(key => {\n            if (!standardFields.includes(key)) {\n                this._envelope[key] = envelope[key];\n            }\n        });\n\n        return this;\n    }\n\n    /**\n     * Generates and returns an object with parsed address fields\n     *\n     * @return {Object} Address object\n     */\n    getAddresses() {\n        let addresses = {};\n\n        this._headers.forEach(header => {\n            let key = header.key.toLowerCase();\n            if (['from', 'sender', 'reply-to', 'to', 'cc', 'bcc'].includes(key)) {\n                if (!Array.isArray(addresses[key])) {\n                    addresses[key] = [];\n                }\n\n                this._convertAddresses(this._parseAddresses(header.value), addresses[key]);\n            }\n        });\n\n        return addresses;\n    }\n\n    /**\n     * Generates and returns SMTP envelope with the sender address and a list of recipients addresses\n     *\n     * @return {Object} SMTP envelope in the form of {from: 'from@example.com', to: ['to@example.com']}\n     */\n    getEnvelope() {\n        if (this._envelope) {\n            return this._envelope;\n        }\n\n        let envelope = {\n            from: false,\n            to: []\n        };\n        this._headers.forEach(header => {\n            let list = [];\n            if (header.key === 'From' || (!envelope.from && ['Reply-To', 'Sender'].includes(header.key))) {\n                this._convertAddresses(this._parseAddresses(header.value), list);\n                if (list.length && list[0]) {\n                    envelope.from = list[0].address;\n                }\n            } else if (['To', 'Cc', 'Bcc'].includes(header.key)) {\n                this._convertAddresses(this._parseAddresses(header.value), envelope.to);\n            }\n        });\n\n        envelope.to = envelope.to.map(to => to.address);\n\n        return envelope;\n    }\n\n    /**\n     * Returns Message-Id value. If it does not exist, then creates one\n     *\n     * @return {String} Message-Id value\n     */\n    messageId() {\n        let messageId = this.getHeader('Message-ID');\n        // You really should define your own Message-Id field!\n        if (!messageId) {\n            messageId = this._generateMessageId();\n            this.setHeader('Message-ID', messageId);\n        }\n        return messageId;\n    }\n\n    /**\n     * Sets pregenerated content that will be used as the output of this node\n     *\n     * @param {String|Buffer|Stream} Raw MIME contents\n     */\n    setRaw(raw) {\n        this._raw = raw;\n\n        if (this._raw && typeof this._raw.pipe === 'function') {\n            // pre-stream handler. might be triggered if a stream is set as content\n            // and 'error' fires before anything is done with this stream\n            this._contentErrorHandler = err => {\n                this._raw.removeListener('error', this._contentErrorHandler);\n                this._raw = err;\n            };\n            this._raw.once('error', this._contentErrorHandler);\n        }\n\n        return this;\n    }\n\n    /////// PRIVATE METHODS\n\n    /**\n     * Detects and returns handle to a stream related with the content.\n     *\n     * @param {Mixed} content Node content\n     * @returns {Object} Stream object\n     */\n    _getStream(content) {\n        let contentStream;\n\n        if (content._resolvedValue) {\n            // pass string or buffer content as a stream\n            contentStream = new PassThrough();\n            setImmediate(() => contentStream.end(content._resolvedValue));\n            return contentStream;\n        } else if (typeof content.pipe === 'function') {\n            // assume as stream\n            return content;\n        } else if (content && typeof content.path === 'string' && !content.href) {\n            if (this.disableFileAccess) {\n                contentStream = new PassThrough();\n                setImmediate(() => contentStream.emit('error', new Error('File access rejected for ' + content.path)));\n                return contentStream;\n            }\n            // read file\n            return fs.createReadStream(content.path);\n        } else if (content && typeof content.href === 'string') {\n            if (this.disableUrlAccess) {\n                contentStream = new PassThrough();\n                setImmediate(() => contentStream.emit('error', new Error('Url access rejected for ' + content.href)));\n                return contentStream;\n            }\n            // fetch URL\n            return fetch(content.href, { headers: content.httpHeaders });\n        } else {\n            // pass string or buffer content as a stream\n            contentStream = new PassThrough();\n            setImmediate(() => contentStream.end(content || ''));\n            return contentStream;\n        }\n    }\n\n    /**\n     * Parses addresses. Takes in a single address or an array or an\n     * array of address arrays (eg. To: [[first group], [second group],...])\n     *\n     * @param {Mixed} addresses Addresses to be parsed\n     * @return {Array} An array of address objects\n     */\n    _parseAddresses(addresses) {\n        return [].concat.apply(\n            [],\n            [].concat(addresses).map(address => {\n                // eslint-disable-line prefer-spread\n                if (address && address.address) {\n                    address.address = this._normalizeAddress(address.address);\n                    address.name = address.name || '';\n                    return [address];\n                }\n                return addressparser(address);\n            })\n        );\n    }\n\n    /**\n     * Normalizes a header key, uses Camel-Case form, except for uppercase MIME-\n     *\n     * @param {String} key Key to be normalized\n     * @return {String} key in Camel-Case form\n     */\n    _normalizeHeaderKey(key) {\n        key = (key || '')\n            .toString()\n            // no newlines in keys\n            .replace(/\\r?\\n|\\r/g, ' ')\n            .trim()\n            .toLowerCase()\n            // use uppercase words, except MIME\n            .replace(/^X-SMTPAPI$|^(MIME|DKIM|ARC|BIMI)\\b|^[a-z]|-(SPF|FBL|ID|MD5)$|-[a-z]/gi, c => c.toUpperCase())\n            // special case\n            .replace(/^Content-Features$/i, 'Content-features');\n\n        return key;\n    }\n\n    /**\n     * Checks if the content type is multipart and defines boundary if needed.\n     * Doesn't return anything, modifies object argument instead.\n     *\n     * @param {Object} structured Parsed header value for 'Content-Type' key\n     */\n    _handleContentType(structured) {\n        this.contentType = structured.value.trim().toLowerCase();\n\n        this.multipart = /^multipart\\//i.test(this.contentType) ? this.contentType.substr(this.contentType.indexOf('/') + 1) : false;\n\n        if (this.multipart) {\n            this.boundary = structured.params.boundary = structured.params.boundary || this.boundary || this._generateBoundary();\n        } else {\n            this.boundary = false;\n        }\n    }\n\n    /**\n     * Generates a multipart boundary value\n     *\n     * @return {String} boundary value\n     */\n    _generateBoundary() {\n        return this.rootNode.boundaryPrefix + '-' + this.rootNode.baseBoundary + '-Part_' + this._nodeId;\n    }\n\n    /**\n     * Encodes a header value for use in the generated rfc2822 email.\n     *\n     * @param {String} key Header key\n     * @param {String} value Header value\n     */\n    _encodeHeaderValue(key, value) {\n        key = this._normalizeHeaderKey(key);\n\n        switch (key) {\n            // Structured headers\n            case 'From':\n            case 'Sender':\n            case 'To':\n            case 'Cc':\n            case 'Bcc':\n            case 'Reply-To':\n                return this._convertAddresses(this._parseAddresses(value));\n\n            // values enclosed in <>\n            case 'Message-ID':\n            case 'In-Reply-To':\n            case 'Content-Id':\n                value = (value || '').toString().replace(/\\r?\\n|\\r/g, ' ');\n\n                if (value.charAt(0) !== '<') {\n                    value = '<' + value;\n                }\n\n                if (value.charAt(value.length - 1) !== '>') {\n                    value = value + '>';\n                }\n                return value;\n\n            // space separated list of values enclosed in <>\n            case 'References':\n                value = [].concat\n                    .apply(\n                        [],\n                        [].concat(value || '').map(elm => {\n                            // eslint-disable-line prefer-spread\n                            elm = (elm || '')\n                                .toString()\n                                .replace(/\\r?\\n|\\r/g, ' ')\n                                .trim();\n                            return elm.replace(/<[^>]*>/g, str => str.replace(/\\s/g, '')).split(/\\s+/);\n                        })\n                    )\n                    .map(elm => {\n                        if (elm.charAt(0) !== '<') {\n                            elm = '<' + elm;\n                        }\n                        if (elm.charAt(elm.length - 1) !== '>') {\n                            elm = elm + '>';\n                        }\n                        return elm;\n                    });\n\n                return value.join(' ').trim();\n\n            case 'Date':\n                if (Object.prototype.toString.call(value) === '[object Date]') {\n                    return value.toUTCString().replace(/GMT/, '+0000');\n                }\n\n                value = (value || '').toString().replace(/\\r?\\n|\\r/g, ' ');\n                return this._encodeWords(value);\n\n            case 'Content-Type':\n            case 'Content-Disposition':\n                // if it includes a filename then it is already encoded\n                return (value || '').toString().replace(/\\r?\\n|\\r/g, ' ');\n\n            default:\n                value = (value || '').toString().replace(/\\r?\\n|\\r/g, ' ');\n                // encodeWords only encodes if needed, otherwise the original string is returned\n                return this._encodeWords(value);\n        }\n    }\n\n    /**\n     * Rebuilds address object using punycode and other adjustments\n     *\n     * @param {Array} addresses An array of address objects\n     * @param {Array} [uniqueList] An array to be populated with addresses\n     * @return {String} address string\n     */\n    _convertAddresses(addresses, uniqueList) {\n        let values = [];\n\n        uniqueList = uniqueList || [];\n\n        [].concat(addresses || []).forEach(address => {\n            if (address.address) {\n                address.address = this._normalizeAddress(address.address);\n\n                if (!address.name) {\n                    values.push(address.address.indexOf(' ') >= 0 ? `<${address.address}>` : `${address.address}`);\n                } else if (address.name) {\n                    values.push(`${this._encodeAddressName(address.name)} <${address.address}>`);\n                }\n\n                if (address.address) {\n                    if (!uniqueList.filter(a => a.address === address.address).length) {\n                        uniqueList.push(address);\n                    }\n                }\n            } else if (address.group) {\n                let groupListAddresses = (address.group.length ? this._convertAddresses(address.group, uniqueList) : '').trim();\n                values.push(`${this._encodeAddressName(address.name)}:${groupListAddresses};`);\n            }\n        });\n\n        return values.join(', ');\n    }\n\n    /**\n     * Normalizes an email address\n     *\n     * @param {Array} address An array of address objects\n     * @return {String} address string\n     */\n    _normalizeAddress(address) {\n        address = (address || '')\n            .toString()\n            .replace(/[\\x00-\\x1F<>]+/g, ' ') // remove unallowed characters\n            .trim();\n\n        let lastAt = address.lastIndexOf('@');\n        if (lastAt < 0) {\n            // Bare username\n            return address;\n        }\n\n        let user = address.substr(0, lastAt);\n        let domain = address.substr(lastAt + 1);\n\n        // Usernames are not touched and are kept as is even if these include unicode\n        // Domains are punycoded by default\n        // 'jõgeva.ee' will be converted to 'xn--jgeva-dua.ee'\n        // non-unicode domains are left as is\n\n        let encodedDomain;\n\n        try {\n            encodedDomain = punycode.toASCII(domain.toLowerCase());\n        } catch (err) {\n            // keep as is?\n        }\n\n        if (user.indexOf(' ') >= 0) {\n            if (user.charAt(0) !== '\"') {\n                user = '\"' + user;\n            }\n            if (user.substr(-1) !== '\"') {\n                user = user + '\"';\n            }\n        }\n\n        return `${user}@${encodedDomain}`;\n    }\n\n    /**\n     * If needed, mime encodes the name part\n     *\n     * @param {String} name Name part of an address\n     * @returns {String} Mime word encoded string if needed\n     */\n    _encodeAddressName(name) {\n        if (!/^[\\w ']*$/.test(name)) {\n            if (/^[\\x20-\\x7e]*$/.test(name)) {\n                return '\"' + name.replace(/([\\\\\"])/g, '\\\\$1') + '\"';\n            } else {\n                return mimeFuncs.encodeWord(name, this._getTextEncoding(name), 52);\n            }\n        }\n        return name;\n    }\n\n    /**\n     * If needed, mime encodes the name part\n     *\n     * @param {String} name Name part of an address\n     * @returns {String} Mime word encoded string if needed\n     */\n    _encodeWords(value) {\n        // set encodeAll parameter to true even though it is against the recommendation of RFC2047,\n        // by default only words that include non-ascii should be converted into encoded words\n        // but some clients (eg. Zimbra) do not handle it properly and remove surrounding whitespace\n        return mimeFuncs.encodeWords(value, this._getTextEncoding(value), 52, true);\n    }\n\n    /**\n     * Detects best mime encoding for a text value\n     *\n     * @param {String} value Value to check for\n     * @return {String} either 'Q' or 'B'\n     */\n    _getTextEncoding(value) {\n        value = (value || '').toString();\n\n        let encoding = this.textEncoding;\n        let latinLen;\n        let nonLatinLen;\n\n        if (!encoding) {\n            // count latin alphabet symbols and 8-bit range symbols + control symbols\n            // if there are more latin characters, then use quoted-printable\n            // encoding, otherwise use base64\n            nonLatinLen = (value.match(/[\\x00-\\x08\\x0B\\x0C\\x0E-\\x1F\\u0080-\\uFFFF]/g) || []).length; // eslint-disable-line no-control-regex\n            latinLen = (value.match(/[a-z]/gi) || []).length;\n            // if there are more latin symbols than binary/unicode, then prefer Q, otherwise B\n            encoding = nonLatinLen < latinLen ? 'Q' : 'B';\n        }\n        return encoding;\n    }\n\n    /**\n     * Generates a message id\n     *\n     * @return {String} Random Message-ID value\n     */\n    _generateMessageId() {\n        return (\n            '<' +\n            [2, 2, 2, 6].reduce(\n                // crux to generate UUID-like random strings\n                (prev, len) => prev + '-' + crypto.randomBytes(len).toString('hex'),\n                crypto.randomBytes(4).toString('hex')\n            ) +\n            '@' +\n            // try to use the domain of the FROM address or fallback to server hostname\n            (this.getEnvelope().from || this.hostname || os.hostname() || 'localhost').split('@').pop() +\n            '>'\n        );\n    }\n}\n\nmodule.exports = MimeNode;\n","'use strict';\n\nconst Transform = require('stream').Transform;\n\nclass LastNewline extends Transform {\n    constructor() {\n        super();\n        this.lastByte = false;\n    }\n\n    _transform(chunk, encoding, done) {\n        if (chunk.length) {\n            this.lastByte = chunk[chunk.length - 1];\n        }\n\n        this.push(chunk);\n        done();\n    }\n\n    _flush(done) {\n        if (this.lastByte === 0x0a) {\n            return done();\n        }\n        if (this.lastByte === 0x0d) {\n            this.push(Buffer.from('\\n'));\n            return done();\n        }\n        this.push(Buffer.from('\\r\\n'));\n        return done();\n    }\n}\n\nmodule.exports = LastNewline;\n","'use strict';\n\nconst stream = require('stream');\nconst Transform = stream.Transform;\n\n/**\n * Ensures that only <LF> is used for linebreaks\n *\n * @param {Object} options Stream options\n */\nclass LeWindows extends Transform {\n    constructor(options) {\n        super(options);\n        // init Transform\n        this.options = options || {};\n    }\n\n    /**\n     * Escapes dots\n     */\n    _transform(chunk, encoding, done) {\n        let buf;\n        let lastPos = 0;\n\n        for (let i = 0, len = chunk.length; i < len; i++) {\n            if (chunk[i] === 0x0d) {\n                // \\n\n                buf = chunk.slice(lastPos, i);\n                lastPos = i + 1;\n                this.push(buf);\n            }\n        }\n        if (lastPos && lastPos < chunk.length) {\n            buf = chunk.slice(lastPos);\n            this.push(buf);\n        } else if (!lastPos) {\n            this.push(chunk);\n        }\n        done();\n    }\n}\n\nmodule.exports = LeWindows;\n","'use strict';\n\nconst stream = require('stream');\nconst Transform = stream.Transform;\n\n/**\n * Ensures that only <CR><LF> sequences are used for linebreaks\n *\n * @param {Object} options Stream options\n */\nclass LeWindows extends Transform {\n    constructor(options) {\n        super(options);\n        // init Transform\n        this.options = options || {};\n        this.lastByte = false;\n    }\n\n    /**\n     * Escapes dots\n     */\n    _transform(chunk, encoding, done) {\n        let buf;\n        let lastPos = 0;\n\n        for (let i = 0, len = chunk.length; i < len; i++) {\n            if (chunk[i] === 0x0a) {\n                // \\n\n                if ((i && chunk[i - 1] !== 0x0d) || (!i && this.lastByte !== 0x0d)) {\n                    if (i > lastPos) {\n                        buf = chunk.slice(lastPos, i);\n                        this.push(buf);\n                    }\n                    this.push(Buffer.from('\\r\\n'));\n                    lastPos = i + 1;\n                }\n            }\n        }\n\n        if (lastPos && lastPos < chunk.length) {\n            buf = chunk.slice(lastPos);\n            this.push(buf);\n        } else if (!lastPos) {\n            this.push(chunk);\n        }\n\n        this.lastByte = chunk[chunk.length - 1];\n        done();\n    }\n}\n\nmodule.exports = LeWindows;\n","'use strict';\n\nconst Mailer = require('./mailer');\nconst shared = require('./shared');\nconst SMTPPool = require('./smtp-pool');\nconst SMTPTransport = require('./smtp-transport');\nconst SendmailTransport = require('./sendmail-transport');\nconst StreamTransport = require('./stream-transport');\nconst JSONTransport = require('./json-transport');\nconst SESTransport = require('./ses-transport');\nconst fetch = require('./fetch');\nconst packageData = require('../package.json');\n\nconst ETHEREAL_API = (process.env.ETHEREAL_API || 'https://api.nodemailer.com').replace(/\\/+$/, '');\nconst ETHEREAL_WEB = (process.env.ETHEREAL_WEB || 'https://ethereal.email').replace(/\\/+$/, '');\nconst ETHEREAL_CACHE = ['true', 'yes', 'y', '1'].includes((process.env.ETHEREAL_CACHE || 'yes').toString().trim().toLowerCase());\n\nlet testAccount = false;\n\nmodule.exports.createTransport = function (transporter, defaults) {\n    let urlConfig;\n    let options;\n    let mailer;\n\n    if (\n        // provided transporter is a configuration object, not transporter plugin\n        (typeof transporter === 'object' && typeof transporter.send !== 'function') ||\n        // provided transporter looks like a connection url\n        (typeof transporter === 'string' && /^(smtps?|direct):/i.test(transporter))\n    ) {\n        if ((urlConfig = typeof transporter === 'string' ? transporter : transporter.url)) {\n            // parse a configuration URL into configuration options\n            options = shared.parseConnectionUrl(urlConfig);\n        } else {\n            options = transporter;\n        }\n\n        if (options.pool) {\n            transporter = new SMTPPool(options);\n        } else if (options.sendmail) {\n            transporter = new SendmailTransport(options);\n        } else if (options.streamTransport) {\n            transporter = new StreamTransport(options);\n        } else if (options.jsonTransport) {\n            transporter = new JSONTransport(options);\n        } else if (options.SES) {\n            transporter = new SESTransport(options);\n        } else {\n            transporter = new SMTPTransport(options);\n        }\n    }\n\n    mailer = new Mailer(transporter, options, defaults);\n\n    return mailer;\n};\n\nmodule.exports.createTestAccount = function (apiUrl, callback) {\n    let promise;\n\n    if (!callback && typeof apiUrl === 'function') {\n        callback = apiUrl;\n        apiUrl = false;\n    }\n\n    if (!callback) {\n        promise = new Promise((resolve, reject) => {\n            callback = shared.callbackPromise(resolve, reject);\n        });\n    }\n\n    if (ETHEREAL_CACHE && testAccount) {\n        setImmediate(() => callback(null, testAccount));\n        return promise;\n    }\n\n    apiUrl = apiUrl || ETHEREAL_API;\n\n    let chunks = [];\n    let chunklen = 0;\n\n    let req = fetch(apiUrl + '/user', {\n        contentType: 'application/json',\n        method: 'POST',\n        body: Buffer.from(\n            JSON.stringify({\n                requestor: packageData.name,\n                version: packageData.version\n            })\n        )\n    });\n\n    req.on('readable', () => {\n        let chunk;\n        while ((chunk = req.read()) !== null) {\n            chunks.push(chunk);\n            chunklen += chunk.length;\n        }\n    });\n\n    req.once('error', err => callback(err));\n\n    req.once('end', () => {\n        let res = Buffer.concat(chunks, chunklen);\n        let data;\n        let err;\n        try {\n            data = JSON.parse(res.toString());\n        } catch (E) {\n            err = E;\n        }\n        if (err) {\n            return callback(err);\n        }\n        if (data.status !== 'success' || data.error) {\n            return callback(new Error(data.error || 'Request failed'));\n        }\n        delete data.status;\n        testAccount = data;\n        callback(null, testAccount);\n    });\n\n    return promise;\n};\n\nmodule.exports.getTestMessageUrl = function (info) {\n    if (!info || !info.response) {\n        return false;\n    }\n\n    let infoProps = new Map();\n    info.response.replace(/\\[([^\\]]+)\\]$/, (m, props) => {\n        props.replace(/\\b([A-Z0-9]+)=([^\\s]+)/g, (m, key, value) => {\n            infoProps.set(key, value);\n        });\n    });\n\n    if (infoProps.has('STATUS') && infoProps.has('MSGID')) {\n        return (testAccount.web || ETHEREAL_WEB) + '/message/' + infoProps.get('MSGID');\n    }\n\n    return false;\n};\n","'use strict';\n\nconst Transform = require('stream').Transform;\n\n/**\n * Encodes a Buffer into a Quoted-Printable encoded string\n *\n * @param {Buffer} buffer Buffer to convert\n * @returns {String} Quoted-Printable encoded string\n */\nfunction encode(buffer) {\n    if (typeof buffer === 'string') {\n        buffer = Buffer.from(buffer, 'utf-8');\n    }\n\n    // usable characters that do not need encoding\n    let ranges = [\n        // https://tools.ietf.org/html/rfc2045#section-6.7\n        [0x09], // <TAB>\n        [0x0a], // <LF>\n        [0x0d], // <CR>\n        [0x20, 0x3c], // <SP>!\"#$%&'()*+,-./0123456789:;\n        [0x3e, 0x7e] // >?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}\n    ];\n    let result = '';\n    let ord;\n\n    for (let i = 0, len = buffer.length; i < len; i++) {\n        ord = buffer[i];\n        // if the char is in allowed range, then keep as is, unless it is a WS in the end of a line\n        if (checkRanges(ord, ranges) && !((ord === 0x20 || ord === 0x09) && (i === len - 1 || buffer[i + 1] === 0x0a || buffer[i + 1] === 0x0d))) {\n            result += String.fromCharCode(ord);\n            continue;\n        }\n        result += '=' + (ord < 0x10 ? '0' : '') + ord.toString(16).toUpperCase();\n    }\n\n    return result;\n}\n\n/**\n * Adds soft line breaks to a Quoted-Printable string\n *\n * @param {String} str Quoted-Printable encoded string that might need line wrapping\n * @param {Number} [lineLength=76] Maximum allowed length for a line\n * @returns {String} Soft-wrapped Quoted-Printable encoded string\n */\nfunction wrap(str, lineLength) {\n    str = (str || '').toString();\n    lineLength = lineLength || 76;\n\n    if (str.length <= lineLength) {\n        return str;\n    }\n\n    let pos = 0;\n    let len = str.length;\n    let match, code, line;\n    let lineMargin = Math.floor(lineLength / 3);\n    let result = '';\n\n    // insert soft linebreaks where needed\n    while (pos < len) {\n        line = str.substr(pos, lineLength);\n        if ((match = line.match(/\\r\\n/))) {\n            line = line.substr(0, match.index + match[0].length);\n            result += line;\n            pos += line.length;\n            continue;\n        }\n\n        if (line.substr(-1) === '\\n') {\n            // nothing to change here\n            result += line;\n            pos += line.length;\n            continue;\n        } else if ((match = line.substr(-lineMargin).match(/\\n.*?$/))) {\n            // truncate to nearest line break\n            line = line.substr(0, line.length - (match[0].length - 1));\n            result += line;\n            pos += line.length;\n            continue;\n        } else if (line.length > lineLength - lineMargin && (match = line.substr(-lineMargin).match(/[ \\t.,!?][^ \\t.,!?]*$/))) {\n            // truncate to nearest space\n            line = line.substr(0, line.length - (match[0].length - 1));\n        } else if (line.match(/[=][\\da-f]{0,2}$/i)) {\n            // push incomplete encoding sequences to the next line\n            if ((match = line.match(/[=][\\da-f]{0,1}$/i))) {\n                line = line.substr(0, line.length - match[0].length);\n            }\n\n            // ensure that utf-8 sequences are not split\n            while (line.length > 3 && line.length < len - pos && !line.match(/^(?:=[\\da-f]{2}){1,4}$/i) && (match = line.match(/[=][\\da-f]{2}$/gi))) {\n                code = parseInt(match[0].substr(1, 2), 16);\n                if (code < 128) {\n                    break;\n                }\n\n                line = line.substr(0, line.length - 3);\n\n                if (code >= 0xc0) {\n                    break;\n                }\n            }\n        }\n\n        if (pos + line.length < len && line.substr(-1) !== '\\n') {\n            if (line.length === lineLength && line.match(/[=][\\da-f]{2}$/i)) {\n                line = line.substr(0, line.length - 3);\n            } else if (line.length === lineLength) {\n                line = line.substr(0, line.length - 1);\n            }\n            pos += line.length;\n            line += '=\\r\\n';\n        } else {\n            pos += line.length;\n        }\n\n        result += line;\n    }\n\n    return result;\n}\n\n/**\n * Helper function to check if a number is inside provided ranges\n *\n * @param {Number} nr Number to check for\n * @param {Array} ranges An Array of allowed values\n * @returns {Boolean} True if the value was found inside allowed ranges, false otherwise\n */\nfunction checkRanges(nr, ranges) {\n    for (let i = ranges.length - 1; i >= 0; i--) {\n        if (!ranges[i].length) {\n            continue;\n        }\n        if (ranges[i].length === 1 && nr === ranges[i][0]) {\n            return true;\n        }\n        if (ranges[i].length === 2 && nr >= ranges[i][0] && nr <= ranges[i][1]) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Creates a transform stream for encoding data to Quoted-Printable encoding\n *\n * @constructor\n * @param {Object} options Stream options\n * @param {Number} [options.lineLength=76] Maximum length for lines, set to false to disable wrapping\n */\nclass Encoder extends Transform {\n    constructor(options) {\n        super();\n\n        // init Transform\n        this.options = options || {};\n\n        if (this.options.lineLength !== false) {\n            this.options.lineLength = this.options.lineLength || 76;\n        }\n\n        this._curLine = '';\n\n        this.inputBytes = 0;\n        this.outputBytes = 0;\n    }\n\n    _transform(chunk, encoding, done) {\n        let qp;\n\n        if (encoding !== 'buffer') {\n            chunk = Buffer.from(chunk, encoding);\n        }\n\n        if (!chunk || !chunk.length) {\n            return done();\n        }\n\n        this.inputBytes += chunk.length;\n\n        if (this.options.lineLength) {\n            qp = this._curLine + encode(chunk);\n            qp = wrap(qp, this.options.lineLength);\n            qp = qp.replace(/(^|\\n)([^\\n]*)$/, (match, lineBreak, lastLine) => {\n                this._curLine = lastLine;\n                return lineBreak;\n            });\n\n            if (qp) {\n                this.outputBytes += qp.length;\n                this.push(qp);\n            }\n        } else {\n            qp = encode(chunk);\n            this.outputBytes += qp.length;\n            this.push(qp, 'ascii');\n        }\n\n        done();\n    }\n\n    _flush(done) {\n        if (this._curLine) {\n            this.outputBytes += this._curLine.length;\n            this.push(this._curLine, 'ascii');\n        }\n        done();\n    }\n}\n\n// expose to the world\nmodule.exports = {\n    encode,\n    wrap,\n    Encoder\n};\n","'use strict';\n\nconst spawn = require('child_process').spawn;\nconst packageData = require('../../package.json');\nconst shared = require('../shared');\n\n/**\n * Generates a Transport object for Sendmail\n *\n * Possible options can be the following:\n *\n *  * **path** optional path to sendmail binary\n *  * **newline** either 'windows' or 'unix'\n *  * **args** an array of arguments for the sendmail binary\n *\n * @constructor\n * @param {Object} optional config parameter for Sendmail\n */\nclass SendmailTransport {\n    constructor(options) {\n        options = options || {};\n\n        // use a reference to spawn for mocking purposes\n        this._spawn = spawn;\n\n        this.options = options || {};\n\n        this.name = 'Sendmail';\n        this.version = packageData.version;\n\n        this.path = 'sendmail';\n        this.args = false;\n        this.winbreak = false;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'sendmail'\n        });\n\n        if (options) {\n            if (typeof options === 'string') {\n                this.path = options;\n            } else if (typeof options === 'object') {\n                if (options.path) {\n                    this.path = options.path;\n                }\n                if (Array.isArray(options.args)) {\n                    this.args = options.args;\n                }\n                this.winbreak = ['win', 'windows', 'dos', '\\r\\n'].includes((options.newline || '').toString().toLowerCase());\n            }\n        }\n    }\n\n    /**\n     * <p>Compiles a mailcomposer message and forwards it to handler that sends it.</p>\n     *\n     * @param {Object} emailMessage MailComposer object\n     * @param {Function} callback Callback function to run when the sending is completed\n     */\n    send(mail, done) {\n        // Sendmail strips this header line by itself\n        mail.message.keepBcc = true;\n\n        let envelope = mail.data.envelope || mail.message.getEnvelope();\n        let messageId = mail.message.messageId();\n        let args;\n        let sendmail;\n        let returned;\n\n        const hasInvalidAddresses = []\n            .concat(envelope.from || [])\n            .concat(envelope.to || [])\n            .some(addr => /^-/.test(addr));\n        if (hasInvalidAddresses) {\n            return done(new Error('Can not send mail. Invalid envelope addresses.'));\n        }\n\n        if (this.args) {\n            // force -i to keep single dots\n            args = ['-i'].concat(this.args).concat(envelope.to);\n        } else {\n            args = ['-i'].concat(envelope.from ? ['-f', envelope.from] : []).concat(envelope.to);\n        }\n\n        let callback = err => {\n            if (returned) {\n                // ignore any additional responses, already done\n                return;\n            }\n            returned = true;\n            if (typeof done === 'function') {\n                if (err) {\n                    return done(err);\n                } else {\n                    return done(null, {\n                        envelope: mail.data.envelope || mail.message.getEnvelope(),\n                        messageId,\n                        response: 'Messages queued for delivery'\n                    });\n                }\n            }\n        };\n\n        try {\n            sendmail = this._spawn(this.path, args);\n        } catch (E) {\n            this.logger.error(\n                {\n                    err: E,\n                    tnx: 'spawn',\n                    messageId\n                },\n                'Error occurred while spawning sendmail. %s',\n                E.message\n            );\n            return callback(E);\n        }\n\n        if (sendmail) {\n            sendmail.on('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'spawn',\n                        messageId\n                    },\n                    'Error occurred when sending message %s. %s',\n                    messageId,\n                    err.message\n                );\n                callback(err);\n            });\n\n            sendmail.once('exit', code => {\n                if (!code) {\n                    return callback();\n                }\n                let err;\n                if (code === 127) {\n                    err = new Error('Sendmail command not found, process exited with code ' + code);\n                } else {\n                    err = new Error('Sendmail exited with code ' + code);\n                }\n\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'stdin',\n                        messageId\n                    },\n                    'Error sending message %s to sendmail. %s',\n                    messageId,\n                    err.message\n                );\n                callback(err);\n            });\n            sendmail.once('close', callback);\n\n            sendmail.stdin.on('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'stdin',\n                        messageId\n                    },\n                    'Error occurred when piping message %s to sendmail. %s',\n                    messageId,\n                    err.message\n                );\n                callback(err);\n            });\n\n            let recipients = [].concat(envelope.to || []);\n            if (recipients.length > 3) {\n                recipients.push('...and ' + recipients.splice(2).length + ' more');\n            }\n            this.logger.info(\n                {\n                    tnx: 'send',\n                    messageId\n                },\n                'Sending message %s to <%s>',\n                messageId,\n                recipients.join(', ')\n            );\n\n            let sourceStream = mail.message.createReadStream();\n            sourceStream.once('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'stdin',\n                        messageId\n                    },\n                    'Error occurred when generating message %s. %s',\n                    messageId,\n                    err.message\n                );\n                sendmail.kill('SIGINT'); // do not deliver the message\n                callback(err);\n            });\n\n            sourceStream.pipe(sendmail.stdin);\n        } else {\n            return callback(new Error('sendmail was not found'));\n        }\n    }\n}\n\nmodule.exports = SendmailTransport;\n","'use strict';\n\nconst EventEmitter = require('events');\nconst packageData = require('../../package.json');\nconst shared = require('../shared');\nconst LeWindows = require('../mime-node/le-windows');\n\n/**\n * Generates a Transport object for AWS SES\n *\n * Possible options can be the following:\n *\n *  * **sendingRate** optional Number specifying how many messages per second should be delivered to SES\n *  * **maxConnections** optional Number specifying max number of parallel connections to SES\n *\n * @constructor\n * @param {Object} optional config parameter\n */\nclass SESTransport extends EventEmitter {\n    constructor(options) {\n        super();\n        options = options || {};\n\n        this.options = options || {};\n        this.ses = this.options.SES;\n\n        this.name = 'SESTransport';\n        this.version = packageData.version;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'ses-transport'\n        });\n\n        // parallel sending connections\n        this.maxConnections = Number(this.options.maxConnections) || Infinity;\n        this.connections = 0;\n\n        // max messages per second\n        this.sendingRate = Number(this.options.sendingRate) || Infinity;\n        this.sendingRateTTL = null;\n        this.rateInterval = 1000; // milliseconds\n        this.rateMessages = [];\n\n        this.pending = [];\n\n        this.idling = true;\n\n        setImmediate(() => {\n            if (this.idling) {\n                this.emit('idle');\n            }\n        });\n    }\n\n    /**\n     * Schedules a sending of a message\n     *\n     * @param {Object} emailMessage MailComposer object\n     * @param {Function} callback Callback function to run when the sending is completed\n     */\n    send(mail, callback) {\n        if (this.connections >= this.maxConnections) {\n            this.idling = false;\n            return this.pending.push({\n                mail,\n                callback\n            });\n        }\n\n        if (!this._checkSendingRate()) {\n            this.idling = false;\n            return this.pending.push({\n                mail,\n                callback\n            });\n        }\n\n        this._send(mail, (...args) => {\n            setImmediate(() => callback(...args));\n            this._sent();\n        });\n    }\n\n    _checkRatedQueue() {\n        if (this.connections >= this.maxConnections || !this._checkSendingRate()) {\n            return;\n        }\n\n        if (!this.pending.length) {\n            if (!this.idling) {\n                this.idling = true;\n                this.emit('idle');\n            }\n            return;\n        }\n\n        let next = this.pending.shift();\n        this._send(next.mail, (...args) => {\n            setImmediate(() => next.callback(...args));\n            this._sent();\n        });\n    }\n\n    _checkSendingRate() {\n        clearTimeout(this.sendingRateTTL);\n\n        let now = Date.now();\n        let oldest = false;\n        // delete older messages\n        for (let i = this.rateMessages.length - 1; i >= 0; i--) {\n            if (this.rateMessages[i].ts >= now - this.rateInterval && (!oldest || this.rateMessages[i].ts < oldest)) {\n                oldest = this.rateMessages[i].ts;\n            }\n\n            if (this.rateMessages[i].ts < now - this.rateInterval && !this.rateMessages[i].pending) {\n                this.rateMessages.splice(i, 1);\n            }\n        }\n\n        if (this.rateMessages.length < this.sendingRate) {\n            return true;\n        }\n\n        let delay = Math.max(oldest + 1001, now + 20);\n        this.sendingRateTTL = setTimeout(() => this._checkRatedQueue(), now - delay);\n\n        try {\n            this.sendingRateTTL.unref();\n        } catch (E) {\n            // Ignore. Happens on envs with non-node timer implementation\n        }\n\n        return false;\n    }\n\n    _sent() {\n        this.connections--;\n        this._checkRatedQueue();\n    }\n\n    /**\n     * Returns true if there are free slots in the queue\n     */\n    isIdle() {\n        return this.idling;\n    }\n\n    /**\n     * Compiles a mailcomposer message and forwards it to SES\n     *\n     * @param {Object} emailMessage MailComposer object\n     * @param {Function} callback Callback function to run when the sending is completed\n     */\n    _send(mail, callback) {\n        let statObject = {\n            ts: Date.now(),\n            pending: true\n        };\n        this.connections++;\n        this.rateMessages.push(statObject);\n\n        let envelope = mail.data.envelope || mail.message.getEnvelope();\n        let messageId = mail.message.messageId();\n\n        let recipients = [].concat(envelope.to || []);\n        if (recipients.length > 3) {\n            recipients.push('...and ' + recipients.splice(2).length + ' more');\n        }\n        this.logger.info(\n            {\n                tnx: 'send',\n                messageId\n            },\n            'Sending message %s to <%s>',\n            messageId,\n            recipients.join(', ')\n        );\n\n        let getRawMessage = next => {\n            // do not use Message-ID and Date in DKIM signature\n            if (!mail.data._dkim) {\n                mail.data._dkim = {};\n            }\n            if (mail.data._dkim.skipFields && typeof mail.data._dkim.skipFields === 'string') {\n                mail.data._dkim.skipFields += ':date:message-id';\n            } else {\n                mail.data._dkim.skipFields = 'date:message-id';\n            }\n\n            let sourceStream = mail.message.createReadStream();\n            let stream = sourceStream.pipe(new LeWindows());\n            let chunks = [];\n            let chunklen = 0;\n\n            stream.on('readable', () => {\n                let chunk;\n                while ((chunk = stream.read()) !== null) {\n                    chunks.push(chunk);\n                    chunklen += chunk.length;\n                }\n            });\n\n            sourceStream.once('error', err => stream.emit('error', err));\n\n            stream.once('error', err => {\n                next(err);\n            });\n\n            stream.once('end', () => next(null, Buffer.concat(chunks, chunklen)));\n        };\n\n        setImmediate(() =>\n            getRawMessage((err, raw) => {\n                if (err) {\n                    this.logger.error(\n                        {\n                            err,\n                            tnx: 'send',\n                            messageId\n                        },\n                        'Failed creating message for %s. %s',\n                        messageId,\n                        err.message\n                    );\n                    statObject.pending = false;\n                    return callback(err);\n                }\n\n                let sesMessage = {\n                    RawMessage: {\n                        // required\n                        Data: raw // required\n                    },\n                    Source: envelope.from,\n                    Destinations: envelope.to\n                };\n\n                Object.keys(mail.data.ses || {}).forEach(key => {\n                    sesMessage[key] = mail.data.ses[key];\n                });\n\n                let ses = (this.ses.aws ? this.ses.ses : this.ses) || {};\n                let aws = this.ses.aws || {};\n\n                let getRegion = cb => {\n                    if (ses.config && typeof ses.config.region === 'function') {\n                        // promise\n                        return ses.config\n                            .region()\n                            .then(region => cb(null, region))\n                            .catch(err => cb(err));\n                    }\n                    return cb(null, (ses.config && ses.config.region) || 'us-east-1');\n                };\n\n                getRegion((err, region) => {\n                    if (err || !region) {\n                        region = 'us-east-1';\n                    }\n\n                    let sendPromise;\n                    if (typeof ses.send === 'function' && aws.SendRawEmailCommand) {\n                        // v3 API\n                        sendPromise = ses.send(new aws.SendRawEmailCommand(sesMessage));\n                    } else {\n                        // v2 API\n                        sendPromise = ses.sendRawEmail(sesMessage).promise();\n                    }\n\n                    sendPromise\n                        .then(data => {\n                            if (region === 'us-east-1') {\n                                region = 'email';\n                            }\n\n                            statObject.pending = false;\n                            callback(null, {\n                                envelope: {\n                                    from: envelope.from,\n                                    to: envelope.to\n                                },\n                                messageId: '<' + data.MessageId + (!/@/.test(data.MessageId) ? '@' + region + '.amazonses.com' : '') + '>',\n                                response: data.MessageId,\n                                raw\n                            });\n                        })\n                        .catch(err => {\n                            this.logger.error(\n                                {\n                                    err,\n                                    tnx: 'send'\n                                },\n                                'Send error for %s: %s',\n                                messageId,\n                                err.message\n                            );\n                            statObject.pending = false;\n                            callback(err);\n                        });\n                });\n            })\n        );\n    }\n\n    /**\n     * Verifies SES configuration\n     *\n     * @param {Function} callback Callback function\n     */\n    verify(callback) {\n        let promise;\n        let ses = (this.ses.aws ? this.ses.ses : this.ses) || {};\n        let aws = this.ses.aws || {};\n\n        const sesMessage = {\n            RawMessage: {\n                // required\n                Data: 'From: invalid@invalid\\r\\nTo: invalid@invalid\\r\\n Subject: Invalid\\r\\n\\r\\nInvalid'\n            },\n            Source: 'invalid@invalid',\n            Destinations: ['invalid@invalid']\n        };\n\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n        const cb = err => {\n            if (err && (err.code || err.Code) !== 'InvalidParameterValue') {\n                return callback(err);\n            }\n            return callback(null, true);\n        };\n\n        if (typeof ses.send === 'function' && aws.SendRawEmailCommand) {\n            // v3 API\n            sesMessage.RawMessage.Data = Buffer.from(sesMessage.RawMessage.Data);\n            ses.send(new aws.SendRawEmailCommand(sesMessage), cb);\n        } else {\n            // v2 API\n            ses.sendRawEmail(sesMessage, cb);\n        }\n\n        return promise;\n    }\n}\n\nmodule.exports = SESTransport;\n","/* eslint no-console: 0 */\n\n'use strict';\n\nconst urllib = require('url');\nconst util = require('util');\nconst fs = require('fs');\nconst fetch = require('../fetch');\nconst dns = require('dns');\nconst net = require('net');\nconst os = require('os');\n\nconst DNS_TTL = 5 * 60 * 1000;\n\nconst networkInterfaces = (module.exports.networkInterfaces = os.networkInterfaces());\n\nconst resolver = (family, hostname, callback) => {\n    const familySupported =\n        // crux that replaces Object.values(networkInterfaces) as Object.values is not supported in nodejs v6\n        Object.keys(networkInterfaces)\n            .map(key => networkInterfaces[key])\n            // crux that replaces .flat() as it is not supported in older Node versions (v10 and older)\n            .reduce((acc, val) => acc.concat(val), [])\n            .filter(i => !i.internal)\n            .filter(i => i.family === 'IPv' + family).length > 0;\n\n    if (!familySupported) {\n        return callback(null, []);\n    }\n\n    dns['resolve' + family](hostname, (err, addresses) => {\n        if (err) {\n            switch (err.code) {\n                case dns.NODATA:\n                case dns.NOTFOUND:\n                case dns.NOTIMP:\n                case dns.SERVFAIL:\n                case dns.CONNREFUSED:\n                case 'EAI_AGAIN':\n                    return callback(null, []);\n            }\n            return callback(err);\n        }\n        return callback(null, Array.isArray(addresses) ? addresses : [].concat(addresses || []));\n    });\n};\n\nconst dnsCache = (module.exports.dnsCache = new Map());\n\nconst formatDNSValue = (value, extra) => {\n    if (!value) {\n        return Object.assign({}, extra || {});\n    }\n\n    return Object.assign(\n        {\n            servername: value.servername,\n            host:\n                !value.addresses || !value.addresses.length\n                    ? null\n                    : value.addresses.length === 1\n                    ? value.addresses[0]\n                    : value.addresses[Math.floor(Math.random() * value.addresses.length)]\n        },\n        extra || {}\n    );\n};\n\nmodule.exports.resolveHostname = (options, callback) => {\n    options = options || {};\n\n    if (!options.host && options.servername) {\n        options.host = options.servername;\n    }\n\n    if (!options.host || net.isIP(options.host)) {\n        // nothing to do here\n        let value = {\n            addresses: [options.host],\n            servername: options.servername || false\n        };\n        return callback(\n            null,\n            formatDNSValue(value, {\n                cached: false\n            })\n        );\n    }\n\n    let cached;\n\n    if (dnsCache.has(options.host)) {\n        cached = dnsCache.get(options.host);\n        if (!cached.expires || cached.expires >= Date.now()) {\n            return callback(\n                null,\n                formatDNSValue(cached.value, {\n                    cached: true\n                })\n            );\n        }\n    }\n\n    resolver(4, options.host, (err, addresses) => {\n        if (err) {\n            if (cached) {\n                // ignore error, use expired value\n                return callback(\n                    null,\n                    formatDNSValue(cached.value, {\n                        cached: true,\n                        error: err\n                    })\n                );\n            }\n            return callback(err);\n        }\n\n        if (addresses && addresses.length) {\n            let value = {\n                addresses,\n                servername: options.servername || options.host\n            };\n\n            dnsCache.set(options.host, {\n                value,\n                expires: Date.now() + DNS_TTL\n            });\n\n            return callback(\n                null,\n                formatDNSValue(value, {\n                    cached: false\n                })\n            );\n        }\n\n        resolver(6, options.host, (err, addresses) => {\n            if (err) {\n                if (cached) {\n                    // ignore error, use expired value\n                    return callback(\n                        null,\n                        formatDNSValue(cached.value, {\n                            cached: true,\n                            error: err\n                        })\n                    );\n                }\n                return callback(err);\n            }\n\n            if (addresses && addresses.length) {\n                let value = {\n                    addresses,\n                    servername: options.servername || options.host\n                };\n\n                dnsCache.set(options.host, {\n                    value,\n                    expires: Date.now() + DNS_TTL\n                });\n\n                return callback(\n                    null,\n                    formatDNSValue(value, {\n                        cached: false\n                    })\n                );\n            }\n\n            try {\n                dns.lookup(options.host, {}, (err, address) => {\n                    if (err) {\n                        if (cached) {\n                            // ignore error, use expired value\n                            return callback(\n                                null,\n                                formatDNSValue(cached.value, {\n                                    cached: true,\n                                    error: err\n                                })\n                            );\n                        }\n                        return callback(err);\n                    }\n\n                    if (!address && cached) {\n                        // nothing was found, fallback to cached value\n                        return callback(\n                            null,\n                            formatDNSValue(cached.value, {\n                                cached: true\n                            })\n                        );\n                    }\n\n                    let value = {\n                        addresses: address ? [address] : [options.host],\n                        servername: options.servername || options.host\n                    };\n\n                    dnsCache.set(options.host, {\n                        value,\n                        expires: Date.now() + DNS_TTL\n                    });\n\n                    return callback(\n                        null,\n                        formatDNSValue(value, {\n                            cached: false\n                        })\n                    );\n                });\n            } catch (err) {\n                if (cached) {\n                    // ignore error, use expired value\n                    return callback(\n                        null,\n                        formatDNSValue(cached.value, {\n                            cached: true,\n                            error: err\n                        })\n                    );\n                }\n                return callback(err);\n            }\n        });\n    });\n};\n/**\n * Parses connection url to a structured configuration object\n *\n * @param {String} str Connection url\n * @return {Object} Configuration object\n */\nmodule.exports.parseConnectionUrl = str => {\n    str = str || '';\n    let options = {};\n\n    [urllib.parse(str, true)].forEach(url => {\n        let auth;\n\n        switch (url.protocol) {\n            case 'smtp:':\n                options.secure = false;\n                break;\n            case 'smtps:':\n                options.secure = true;\n                break;\n            case 'direct:':\n                options.direct = true;\n                break;\n        }\n\n        if (!isNaN(url.port) && Number(url.port)) {\n            options.port = Number(url.port);\n        }\n\n        if (url.hostname) {\n            options.host = url.hostname;\n        }\n\n        if (url.auth) {\n            auth = url.auth.split(':');\n\n            if (!options.auth) {\n                options.auth = {};\n            }\n\n            options.auth.user = auth.shift();\n            options.auth.pass = auth.join(':');\n        }\n\n        Object.keys(url.query || {}).forEach(key => {\n            let obj = options;\n            let lKey = key;\n            let value = url.query[key];\n\n            if (!isNaN(value)) {\n                value = Number(value);\n            }\n\n            switch (value) {\n                case 'true':\n                    value = true;\n                    break;\n                case 'false':\n                    value = false;\n                    break;\n            }\n\n            // tls is nested object\n            if (key.indexOf('tls.') === 0) {\n                lKey = key.substr(4);\n                if (!options.tls) {\n                    options.tls = {};\n                }\n                obj = options.tls;\n            } else if (key.indexOf('.') >= 0) {\n                // ignore nested properties besides tls\n                return;\n            }\n\n            if (!(lKey in obj)) {\n                obj[lKey] = value;\n            }\n        });\n    });\n\n    return options;\n};\n\nmodule.exports._logFunc = (logger, level, defaults, data, message, ...args) => {\n    let entry = {};\n\n    Object.keys(defaults || {}).forEach(key => {\n        if (key !== 'level') {\n            entry[key] = defaults[key];\n        }\n    });\n\n    Object.keys(data || {}).forEach(key => {\n        if (key !== 'level') {\n            entry[key] = data[key];\n        }\n    });\n\n    logger[level](entry, message, ...args);\n};\n\n/**\n * Returns a bunyan-compatible logger interface. Uses either provided logger or\n * creates a default console logger\n *\n * @param {Object} [options] Options object that might include 'logger' value\n * @return {Object} bunyan compatible logger\n */\nmodule.exports.getLogger = (options, defaults) => {\n    options = options || {};\n\n    let response = {};\n    let levels = ['trace', 'debug', 'info', 'warn', 'error', 'fatal'];\n\n    if (!options.logger) {\n        // use vanity logger\n        levels.forEach(level => {\n            response[level] = () => false;\n        });\n        return response;\n    }\n\n    let logger = options.logger;\n\n    if (options.logger === true) {\n        // create console logger\n        logger = createDefaultLogger(levels);\n    }\n\n    levels.forEach(level => {\n        response[level] = (data, message, ...args) => {\n            module.exports._logFunc(logger, level, defaults, data, message, ...args);\n        };\n    });\n\n    return response;\n};\n\n/**\n * Wrapper for creating a callback that either resolves or rejects a promise\n * based on input\n *\n * @param {Function} resolve Function to run if callback is called\n * @param {Function} reject Function to run if callback ends with an error\n */\nmodule.exports.callbackPromise = (resolve, reject) =>\n    function () {\n        let args = Array.from(arguments);\n        let err = args.shift();\n        if (err) {\n            reject(err);\n        } else {\n            resolve(...args);\n        }\n    };\n\n/**\n * Resolves a String or a Buffer value for content value. Useful if the value\n * is a Stream or a file or an URL. If the value is a Stream, overwrites\n * the stream object with the resolved value (you can't stream a value twice).\n *\n * This is useful when you want to create a plugin that needs a content value,\n * for example the `html` or `text` value as a String or a Buffer but not as\n * a file path or an URL.\n *\n * @param {Object} data An object or an Array you want to resolve an element for\n * @param {String|Number} key Property name or an Array index\n * @param {Function} callback Callback function with (err, value)\n */\nmodule.exports.resolveContent = (data, key, callback) => {\n    let promise;\n\n    if (!callback) {\n        promise = new Promise((resolve, reject) => {\n            callback = module.exports.callbackPromise(resolve, reject);\n        });\n    }\n\n    let content = (data && data[key] && data[key].content) || data[key];\n    let contentStream;\n    let encoding = ((typeof data[key] === 'object' && data[key].encoding) || 'utf8')\n        .toString()\n        .toLowerCase()\n        .replace(/[-_\\s]/g, '');\n\n    if (!content) {\n        return callback(null, content);\n    }\n\n    if (typeof content === 'object') {\n        if (typeof content.pipe === 'function') {\n            return resolveStream(content, (err, value) => {\n                if (err) {\n                    return callback(err);\n                }\n                // we can't stream twice the same content, so we need\n                // to replace the stream object with the streaming result\n                if (data[key].content) {\n                    data[key].content = value;\n                } else {\n                    data[key] = value;\n                }\n                callback(null, value);\n            });\n        } else if (/^https?:\\/\\//i.test(content.path || content.href)) {\n            contentStream = fetch(content.path || content.href);\n            return resolveStream(contentStream, callback);\n        } else if (/^data:/i.test(content.path || content.href)) {\n            let parts = (content.path || content.href).match(/^data:((?:[^;]*;)*(?:[^,]*)),(.*)$/i);\n            if (!parts) {\n                return callback(null, Buffer.from(0));\n            }\n            return callback(null, /\\bbase64$/i.test(parts[1]) ? Buffer.from(parts[2], 'base64') : Buffer.from(decodeURIComponent(parts[2])));\n        } else if (content.path) {\n            return resolveStream(fs.createReadStream(content.path), callback);\n        }\n    }\n\n    if (typeof data[key].content === 'string' && !['utf8', 'usascii', 'ascii'].includes(encoding)) {\n        content = Buffer.from(data[key].content, encoding);\n    }\n\n    // default action, return as is\n    setImmediate(() => callback(null, content));\n\n    return promise;\n};\n\n/**\n * Copies properties from source objects to target objects\n */\nmodule.exports.assign = function (/* target, ... sources */) {\n    let args = Array.from(arguments);\n    let target = args.shift() || {};\n\n    args.forEach(source => {\n        Object.keys(source || {}).forEach(key => {\n            if (['tls', 'auth'].includes(key) && source[key] && typeof source[key] === 'object') {\n                // tls and auth are special keys that need to be enumerated separately\n                // other objects are passed as is\n                if (!target[key]) {\n                    // ensure that target has this key\n                    target[key] = {};\n                }\n                Object.keys(source[key]).forEach(subKey => {\n                    target[key][subKey] = source[key][subKey];\n                });\n            } else {\n                target[key] = source[key];\n            }\n        });\n    });\n    return target;\n};\n\nmodule.exports.encodeXText = str => {\n    // ! 0x21\n    // + 0x2B\n    // = 0x3D\n    // ~ 0x7E\n    if (!/[^\\x21-\\x2A\\x2C-\\x3C\\x3E-\\x7E]/.test(str)) {\n        return str;\n    }\n    let buf = Buffer.from(str);\n    let result = '';\n    for (let i = 0, len = buf.length; i < len; i++) {\n        let c = buf[i];\n        if (c < 0x21 || c > 0x7e || c === 0x2b || c === 0x3d) {\n            result += '+' + (c < 0x10 ? '0' : '') + c.toString(16).toUpperCase();\n        } else {\n            result += String.fromCharCode(c);\n        }\n    }\n    return result;\n};\n\n/**\n * Streams a stream value into a Buffer\n *\n * @param {Object} stream Readable stream\n * @param {Function} callback Callback function with (err, value)\n */\nfunction resolveStream(stream, callback) {\n    let responded = false;\n    let chunks = [];\n    let chunklen = 0;\n\n    stream.on('error', err => {\n        if (responded) {\n            return;\n        }\n\n        responded = true;\n        callback(err);\n    });\n\n    stream.on('readable', () => {\n        let chunk;\n        while ((chunk = stream.read()) !== null) {\n            chunks.push(chunk);\n            chunklen += chunk.length;\n        }\n    });\n\n    stream.on('end', () => {\n        if (responded) {\n            return;\n        }\n        responded = true;\n\n        let value;\n\n        try {\n            value = Buffer.concat(chunks, chunklen);\n        } catch (E) {\n            return callback(E);\n        }\n        callback(null, value);\n    });\n}\n\n/**\n * Generates a bunyan-like logger that prints to console\n *\n * @returns {Object} Bunyan logger instance\n */\nfunction createDefaultLogger(levels) {\n    let levelMaxLen = 0;\n    let levelNames = new Map();\n    levels.forEach(level => {\n        if (level.length > levelMaxLen) {\n            levelMaxLen = level.length;\n        }\n    });\n\n    levels.forEach(level => {\n        let levelName = level.toUpperCase();\n        if (levelName.length < levelMaxLen) {\n            levelName += ' '.repeat(levelMaxLen - levelName.length);\n        }\n        levelNames.set(level, levelName);\n    });\n\n    let print = (level, entry, message, ...args) => {\n        let prefix = '';\n        if (entry) {\n            if (entry.tnx === 'server') {\n                prefix = 'S: ';\n            } else if (entry.tnx === 'client') {\n                prefix = 'C: ';\n            }\n\n            if (entry.sid) {\n                prefix = '[' + entry.sid + '] ' + prefix;\n            }\n\n            if (entry.cid) {\n                prefix = '[#' + entry.cid + '] ' + prefix;\n            }\n        }\n\n        message = util.format(message, ...args);\n        message.split(/\\r?\\n/).forEach(line => {\n            console.log('[%s] %s %s', new Date().toISOString().substr(0, 19).replace(/T/, ' '), levelNames.get(level), prefix + line);\n        });\n    };\n\n    let logger = {};\n    levels.forEach(level => {\n        logger[level] = print.bind(null, level);\n    });\n\n    return logger;\n}\n","'use strict';\n\nconst stream = require('stream');\nconst Transform = stream.Transform;\n\n/**\n * Escapes dots in the beginning of lines. Ends the stream with <CR><LF>.<CR><LF>\n * Also makes sure that only <CR><LF> sequences are used for linebreaks\n *\n * @param {Object} options Stream options\n */\nclass DataStream extends Transform {\n    constructor(options) {\n        super(options);\n        // init Transform\n        this.options = options || {};\n        this._curLine = '';\n\n        this.inByteCount = 0;\n        this.outByteCount = 0;\n        this.lastByte = false;\n    }\n\n    /**\n     * Escapes dots\n     */\n    _transform(chunk, encoding, done) {\n        let chunks = [];\n        let chunklen = 0;\n        let i,\n            len,\n            lastPos = 0;\n        let buf;\n\n        if (!chunk || !chunk.length) {\n            return done();\n        }\n\n        if (typeof chunk === 'string') {\n            chunk = Buffer.from(chunk);\n        }\n\n        this.inByteCount += chunk.length;\n\n        for (i = 0, len = chunk.length; i < len; i++) {\n            if (chunk[i] === 0x2e) {\n                // .\n                if ((i && chunk[i - 1] === 0x0a) || (!i && (!this.lastByte || this.lastByte === 0x0a))) {\n                    buf = chunk.slice(lastPos, i + 1);\n                    chunks.push(buf);\n                    chunks.push(Buffer.from('.'));\n                    chunklen += buf.length + 1;\n                    lastPos = i + 1;\n                }\n            } else if (chunk[i] === 0x0a) {\n                // .\n                if ((i && chunk[i - 1] !== 0x0d) || (!i && this.lastByte !== 0x0d)) {\n                    if (i > lastPos) {\n                        buf = chunk.slice(lastPos, i);\n                        chunks.push(buf);\n                        chunklen += buf.length + 2;\n                    } else {\n                        chunklen += 2;\n                    }\n                    chunks.push(Buffer.from('\\r\\n'));\n                    lastPos = i + 1;\n                }\n            }\n        }\n\n        if (chunklen) {\n            // add last piece\n            if (lastPos < chunk.length) {\n                buf = chunk.slice(lastPos);\n                chunks.push(buf);\n                chunklen += buf.length;\n            }\n\n            this.outByteCount += chunklen;\n            this.push(Buffer.concat(chunks, chunklen));\n        } else {\n            this.outByteCount += chunk.length;\n            this.push(chunk);\n        }\n\n        this.lastByte = chunk[chunk.length - 1];\n        done();\n    }\n\n    /**\n     * Finalizes the stream with a dot on a single line\n     */\n    _flush(done) {\n        let buf;\n        if (this.lastByte === 0x0a) {\n            buf = Buffer.from('.\\r\\n');\n        } else if (this.lastByte === 0x0d) {\n            buf = Buffer.from('\\n.\\r\\n');\n        } else {\n            buf = Buffer.from('\\r\\n.\\r\\n');\n        }\n        this.outByteCount += buf.length;\n        this.push(buf);\n        done();\n    }\n}\n\nmodule.exports = DataStream;\n","'use strict';\n\n/**\n * Minimal HTTP/S proxy client\n */\n\nconst net = require('net');\nconst tls = require('tls');\nconst urllib = require('url');\n\n/**\n * Establishes proxied connection to destinationPort\n *\n * httpProxyClient(\"http://localhost:3128/\", 80, \"google.com\", function(err, socket){\n *     socket.write(\"GET / HTTP/1.0\\r\\n\\r\\n\");\n * });\n *\n * @param {String} proxyUrl proxy configuration, etg \"http://proxy.host:3128/\"\n * @param {Number} destinationPort Port to open in destination host\n * @param {String} destinationHost Destination hostname\n * @param {Function} callback Callback to run with the rocket object once connection is established\n */\nfunction httpProxyClient(proxyUrl, destinationPort, destinationHost, callback) {\n    let proxy = urllib.parse(proxyUrl);\n\n    // create a socket connection to the proxy server\n    let options;\n    let connect;\n    let socket;\n\n    options = {\n        host: proxy.hostname,\n        port: Number(proxy.port) ? Number(proxy.port) : proxy.protocol === 'https:' ? 443 : 80\n    };\n\n    if (proxy.protocol === 'https:') {\n        // we can use untrusted proxies as long as we verify actual SMTP certificates\n        options.rejectUnauthorized = false;\n        connect = tls.connect.bind(tls);\n    } else {\n        connect = net.connect.bind(net);\n    }\n\n    // Error harness for initial connection. Once connection is established, the responsibility\n    // to handle errors is passed to whoever uses this socket\n    let finished = false;\n    let tempSocketErr = function (err) {\n        if (finished) {\n            return;\n        }\n        finished = true;\n        try {\n            socket.destroy();\n        } catch (E) {\n            // ignore\n        }\n        callback(err);\n    };\n\n    socket = connect(options, () => {\n        if (finished) {\n            return;\n        }\n\n        let reqHeaders = {\n            Host: destinationHost + ':' + destinationPort,\n            Connection: 'close'\n        };\n        if (proxy.auth) {\n            reqHeaders['Proxy-Authorization'] = 'Basic ' + Buffer.from(proxy.auth).toString('base64');\n        }\n\n        socket.write(\n            // HTTP method\n            'CONNECT ' +\n                destinationHost +\n                ':' +\n                destinationPort +\n                ' HTTP/1.1\\r\\n' +\n                // HTTP request headers\n                Object.keys(reqHeaders)\n                    .map(key => key + ': ' + reqHeaders[key])\n                    .join('\\r\\n') +\n                // End request\n                '\\r\\n\\r\\n'\n        );\n\n        let headers = '';\n        let onSocketData = chunk => {\n            let match;\n            let remainder;\n\n            if (finished) {\n                return;\n            }\n\n            headers += chunk.toString('binary');\n            if ((match = headers.match(/\\r\\n\\r\\n/))) {\n                socket.removeListener('data', onSocketData);\n\n                remainder = headers.substr(match.index + match[0].length);\n                headers = headers.substr(0, match.index);\n                if (remainder) {\n                    socket.unshift(Buffer.from(remainder, 'binary'));\n                }\n\n                // proxy connection is now established\n                finished = true;\n\n                // check response code\n                match = headers.match(/^HTTP\\/\\d+\\.\\d+ (\\d+)/i);\n                if (!match || (match[1] || '').charAt(0) !== '2') {\n                    try {\n                        socket.destroy();\n                    } catch (E) {\n                        // ignore\n                    }\n                    return callback(new Error('Invalid response from proxy' + ((match && ': ' + match[1]) || '')));\n                }\n\n                socket.removeListener('error', tempSocketErr);\n                return callback(null, socket);\n            }\n        };\n        socket.on('data', onSocketData);\n    });\n\n    socket.once('error', tempSocketErr);\n}\n\nmodule.exports = httpProxyClient;\n","'use strict';\n\nconst packageInfo = require('../../package.json');\nconst EventEmitter = require('events').EventEmitter;\nconst net = require('net');\nconst tls = require('tls');\nconst os = require('os');\nconst crypto = require('crypto');\nconst DataStream = require('./data-stream');\nconst PassThrough = require('stream').PassThrough;\nconst shared = require('../shared');\n\n// default timeout values in ms\nconst CONNECTION_TIMEOUT = 2 * 60 * 1000; // how much to wait for the connection to be established\nconst SOCKET_TIMEOUT = 10 * 60 * 1000; // how much to wait for socket inactivity before disconnecting the client\nconst GREETING_TIMEOUT = 30 * 1000; // how much to wait after connection is established but SMTP greeting is not receieved\n\n/**\n * Generates a SMTP connection object\n *\n * Optional options object takes the following possible properties:\n *\n *  * **port** - is the port to connect to (defaults to 587 or 465)\n *  * **host** - is the hostname or IP address to connect to (defaults to 'localhost')\n *  * **secure** - use SSL\n *  * **ignoreTLS** - ignore server support for STARTTLS\n *  * **requireTLS** - forces the client to use STARTTLS\n *  * **name** - the name of the client server\n *  * **localAddress** - outbound address to bind to (see: http://nodejs.org/api/net.html#net_net_connect_options_connectionlistener)\n *  * **greetingTimeout** - Time to wait in ms until greeting message is received from the server (defaults to 10000)\n *  * **connectionTimeout** - how many milliseconds to wait for the connection to establish\n *  * **socketTimeout** - Time of inactivity until the connection is closed (defaults to 1 hour)\n *  * **lmtp** - if true, uses LMTP instead of SMTP protocol\n *  * **logger** - bunyan compatible logger interface\n *  * **debug** - if true pass SMTP traffic to the logger\n *  * **tls** - options for createCredentials\n *  * **socket** - existing socket to use instead of creating a new one (see: http://nodejs.org/api/net.html#net_class_net_socket)\n *  * **secured** - boolean indicates that the provided socket has already been upgraded to tls\n *\n * @constructor\n * @namespace SMTP Client module\n * @param {Object} [options] Option properties\n */\nclass SMTPConnection extends EventEmitter {\n    constructor(options) {\n        super(options);\n\n        this.id = crypto.randomBytes(8).toString('base64').replace(/\\W/g, '');\n        this.stage = 'init';\n\n        this.options = options || {};\n\n        this.secureConnection = !!this.options.secure;\n        this.alreadySecured = !!this.options.secured;\n\n        this.port = Number(this.options.port) || (this.secureConnection ? 465 : 587);\n        this.host = this.options.host || 'localhost';\n\n        if (typeof this.options.secure === 'undefined' && this.port === 465) {\n            // if secure option is not set but port is 465, then default to secure\n            this.secureConnection = true;\n        }\n\n        this.name = this.options.name || this._getHostname();\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'smtp-connection',\n            sid: this.id\n        });\n\n        this.customAuth = new Map();\n        Object.keys(this.options.customAuth || {}).forEach(key => {\n            let mapKey = (key || '').toString().trim().toUpperCase();\n            if (!mapKey) {\n                return;\n            }\n            this.customAuth.set(mapKey, this.options.customAuth[key]);\n        });\n\n        /**\n         * Expose version nr, just for the reference\n         * @type {String}\n         */\n        this.version = packageInfo.version;\n\n        /**\n         * If true, then the user is authenticated\n         * @type {Boolean}\n         */\n        this.authenticated = false;\n\n        /**\n         * If set to true, this instance is no longer active\n         * @private\n         */\n        this.destroyed = false;\n\n        /**\n         * Defines if the current connection is secure or not. If not,\n         * STARTTLS can be used if available\n         * @private\n         */\n        this.secure = !!this.secureConnection;\n\n        /**\n         * Store incomplete messages coming from the server\n         * @private\n         */\n        this._remainder = '';\n\n        /**\n         * Unprocessed responses from the server\n         * @type {Array}\n         */\n        this._responseQueue = [];\n\n        this.lastServerResponse = false;\n\n        /**\n         * The socket connecting to the server\n         * @publick\n         */\n        this._socket = false;\n\n        /**\n         * Lists supported auth mechanisms\n         * @private\n         */\n        this._supportedAuth = [];\n\n        /**\n         * Set to true, if EHLO response includes \"AUTH\".\n         * If false then authentication is not tried\n         */\n        this.allowsAuth = false;\n\n        /**\n         * Includes current envelope (from, to)\n         * @private\n         */\n        this._envelope = false;\n\n        /**\n         * Lists supported extensions\n         * @private\n         */\n        this._supportedExtensions = [];\n\n        /**\n         * Defines the maximum allowed size for a single message\n         * @private\n         */\n        this._maxAllowedSize = 0;\n\n        /**\n         * Function queue to run if a data chunk comes from the server\n         * @private\n         */\n        this._responseActions = [];\n        this._recipientQueue = [];\n\n        /**\n         * Timeout variable for waiting the greeting\n         * @private\n         */\n        this._greetingTimeout = false;\n\n        /**\n         * Timeout variable for waiting the connection to start\n         * @private\n         */\n        this._connectionTimeout = false;\n\n        /**\n         * If the socket is deemed already closed\n         * @private\n         */\n        this._destroyed = false;\n\n        /**\n         * If the socket is already being closed\n         * @private\n         */\n        this._closing = false;\n\n        /**\n         * Callbacks for socket's listeners\n         */\n        this._onSocketData = chunk => this._onData(chunk);\n        this._onSocketError = error => this._onError(error, 'ESOCKET', false, 'CONN');\n        this._onSocketClose = () => this._onClose();\n        this._onSocketEnd = () => this._onEnd();\n        this._onSocketTimeout = () => this._onTimeout();\n    }\n\n    /**\n     * Creates a connection to a SMTP server and sets up connection\n     * listener\n     */\n    connect(connectCallback) {\n        if (typeof connectCallback === 'function') {\n            this.once('connect', () => {\n                this.logger.debug(\n                    {\n                        tnx: 'smtp'\n                    },\n                    'SMTP handshake finished'\n                );\n                connectCallback();\n            });\n\n            const isDestroyedMessage = this._isDestroyedMessage('connect');\n            if (isDestroyedMessage) {\n                return connectCallback(this._formatError(isDestroyedMessage, 'ECONNECTION', false, 'CONN'));\n            }\n        }\n\n        let opts = {\n            port: this.port,\n            host: this.host\n        };\n\n        if (this.options.localAddress) {\n            opts.localAddress = this.options.localAddress;\n        }\n\n        let setupConnectionHandlers = () => {\n            this._connectionTimeout = setTimeout(() => {\n                this._onError('Connection timeout', 'ETIMEDOUT', false, 'CONN');\n            }, this.options.connectionTimeout || CONNECTION_TIMEOUT);\n\n            this._socket.on('error', this._onSocketError);\n        };\n\n        if (this.options.connection) {\n            // connection is already opened\n            this._socket = this.options.connection;\n            if (this.secureConnection && !this.alreadySecured) {\n                setImmediate(() =>\n                    this._upgradeConnection(err => {\n                        if (err) {\n                            this._onError(new Error('Error initiating TLS - ' + (err.message || err)), 'ETLS', false, 'CONN');\n                            return;\n                        }\n                        this._onConnect();\n                    })\n                );\n            } else {\n                setImmediate(() => this._onConnect());\n            }\n            return;\n        } else if (this.options.socket) {\n            // socket object is set up but not yet connected\n            this._socket = this.options.socket;\n            return shared.resolveHostname(opts, (err, resolved) => {\n                if (err) {\n                    return setImmediate(() => this._onError(err, 'EDNS', false, 'CONN'));\n                }\n                this.logger.debug(\n                    {\n                        tnx: 'dns',\n                        source: opts.host,\n                        resolved: resolved.host,\n                        cached: !!resolved.cached\n                    },\n                    'Resolved %s as %s [cache %s]',\n                    opts.host,\n                    resolved.host,\n                    resolved.cached ? 'hit' : 'miss'\n                );\n                Object.keys(resolved).forEach(key => {\n                    if (key.charAt(0) !== '_' && resolved[key]) {\n                        opts[key] = resolved[key];\n                    }\n                });\n                try {\n                    this._socket.connect(this.port, this.host, () => {\n                        this._socket.setKeepAlive(true);\n                        this._onConnect();\n                    });\n                    setupConnectionHandlers();\n                } catch (E) {\n                    return setImmediate(() => this._onError(E, 'ECONNECTION', false, 'CONN'));\n                }\n            });\n        } else if (this.secureConnection) {\n            // connect using tls\n            if (this.options.tls) {\n                Object.keys(this.options.tls).forEach(key => {\n                    opts[key] = this.options.tls[key];\n                });\n            }\n            return shared.resolveHostname(opts, (err, resolved) => {\n                if (err) {\n                    return setImmediate(() => this._onError(err, 'EDNS', false, 'CONN'));\n                }\n                this.logger.debug(\n                    {\n                        tnx: 'dns',\n                        source: opts.host,\n                        resolved: resolved.host,\n                        cached: !!resolved.cached\n                    },\n                    'Resolved %s as %s [cache %s]',\n                    opts.host,\n                    resolved.host,\n                    resolved.cached ? 'hit' : 'miss'\n                );\n                Object.keys(resolved).forEach(key => {\n                    if (key.charAt(0) !== '_' && resolved[key]) {\n                        opts[key] = resolved[key];\n                    }\n                });\n                try {\n                    this._socket = tls.connect(opts, () => {\n                        this._socket.setKeepAlive(true);\n                        this._onConnect();\n                    });\n                    setupConnectionHandlers();\n                } catch (E) {\n                    return setImmediate(() => this._onError(E, 'ECONNECTION', false, 'CONN'));\n                }\n            });\n        } else {\n            // connect using plaintext\n            return shared.resolveHostname(opts, (err, resolved) => {\n                if (err) {\n                    return setImmediate(() => this._onError(err, 'EDNS', false, 'CONN'));\n                }\n                this.logger.debug(\n                    {\n                        tnx: 'dns',\n                        source: opts.host,\n                        resolved: resolved.host,\n                        cached: !!resolved.cached\n                    },\n                    'Resolved %s as %s [cache %s]',\n                    opts.host,\n                    resolved.host,\n                    resolved.cached ? 'hit' : 'miss'\n                );\n                Object.keys(resolved).forEach(key => {\n                    if (key.charAt(0) !== '_' && resolved[key]) {\n                        opts[key] = resolved[key];\n                    }\n                });\n                try {\n                    this._socket = net.connect(opts, () => {\n                        this._socket.setKeepAlive(true);\n                        this._onConnect();\n                    });\n                    setupConnectionHandlers();\n                } catch (E) {\n                    return setImmediate(() => this._onError(E, 'ECONNECTION', false, 'CONN'));\n                }\n            });\n        }\n    }\n\n    /**\n     * Sends QUIT\n     */\n    quit() {\n        this._sendCommand('QUIT');\n        this._responseActions.push(this.close);\n    }\n\n    /**\n     * Closes the connection to the server\n     */\n    close() {\n        clearTimeout(this._connectionTimeout);\n        clearTimeout(this._greetingTimeout);\n        this._responseActions = [];\n\n        // allow to run this function only once\n        if (this._closing) {\n            return;\n        }\n        this._closing = true;\n\n        let closeMethod = 'end';\n\n        if (this.stage === 'init') {\n            // Close the socket immediately when connection timed out\n            closeMethod = 'destroy';\n        }\n\n        this.logger.debug(\n            {\n                tnx: 'smtp'\n            },\n            'Closing connection to the server using \"%s\"',\n            closeMethod\n        );\n\n        let socket = (this._socket && this._socket.socket) || this._socket;\n\n        if (socket && !socket.destroyed) {\n            try {\n                this._socket[closeMethod]();\n            } catch (E) {\n                // just ignore\n            }\n        }\n\n        this._destroy();\n    }\n\n    /**\n     * Authenticate user\n     */\n    login(authData, callback) {\n        const isDestroyedMessage = this._isDestroyedMessage('login');\n        if (isDestroyedMessage) {\n            return callback(this._formatError(isDestroyedMessage, 'ECONNECTION', false, 'API'));\n        }\n\n        this._auth = authData || {};\n        // Select SASL authentication method\n        this._authMethod = (this._auth.method || '').toString().trim().toUpperCase() || false;\n\n        if (!this._authMethod && this._auth.oauth2 && !this._auth.credentials) {\n            this._authMethod = 'XOAUTH2';\n        } else if (!this._authMethod || (this._authMethod === 'XOAUTH2' && !this._auth.oauth2)) {\n            // use first supported\n            this._authMethod = (this._supportedAuth[0] || 'PLAIN').toUpperCase().trim();\n        }\n\n        if (this._authMethod !== 'XOAUTH2' && (!this._auth.credentials || !this._auth.credentials.user || !this._auth.credentials.pass)) {\n            if (this._auth.user && this._auth.pass) {\n                this._auth.credentials = {\n                    user: this._auth.user,\n                    pass: this._auth.pass,\n                    options: this._auth.options\n                };\n            } else {\n                return callback(this._formatError('Missing credentials for \"' + this._authMethod + '\"', 'EAUTH', false, 'API'));\n            }\n        }\n\n        if (this.customAuth.has(this._authMethod)) {\n            let handler = this.customAuth.get(this._authMethod);\n            let lastResponse;\n            let returned = false;\n\n            let resolve = () => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                this.logger.info(\n                    {\n                        tnx: 'smtp',\n                        username: this._auth.user,\n                        action: 'authenticated',\n                        method: this._authMethod\n                    },\n                    'User %s authenticated',\n                    JSON.stringify(this._auth.user)\n                );\n                this.authenticated = true;\n                callback(null, true);\n            };\n\n            let reject = err => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                callback(this._formatError(err, 'EAUTH', lastResponse, 'AUTH ' + this._authMethod));\n            };\n\n            let handlerResponse = handler({\n                auth: this._auth,\n                method: this._authMethod,\n\n                extensions: [].concat(this._supportedExtensions),\n                authMethods: [].concat(this._supportedAuth),\n                maxAllowedSize: this._maxAllowedSize || false,\n\n                sendCommand: (cmd, done) => {\n                    let promise;\n\n                    if (!done) {\n                        promise = new Promise((resolve, reject) => {\n                            done = shared.callbackPromise(resolve, reject);\n                        });\n                    }\n\n                    this._responseActions.push(str => {\n                        lastResponse = str;\n\n                        let codes = str.match(/^(\\d+)(?:\\s(\\d+\\.\\d+\\.\\d+))?\\s/);\n                        let data = {\n                            command: cmd,\n                            response: str\n                        };\n                        if (codes) {\n                            data.status = Number(codes[1]) || 0;\n                            if (codes[2]) {\n                                data.code = codes[2];\n                            }\n                            data.text = str.substr(codes[0].length);\n                        } else {\n                            data.text = str;\n                            data.status = 0; // just in case we need to perform numeric comparisons\n                        }\n                        done(null, data);\n                    });\n                    setImmediate(() => this._sendCommand(cmd));\n\n                    return promise;\n                },\n\n                resolve,\n                reject\n            });\n\n            if (handlerResponse && typeof handlerResponse.catch === 'function') {\n                // a promise was returned\n                handlerResponse.then(resolve).catch(reject);\n            }\n\n            return;\n        }\n\n        switch (this._authMethod) {\n            case 'XOAUTH2':\n                this._handleXOauth2Token(false, callback);\n                return;\n            case 'LOGIN':\n                this._responseActions.push(str => {\n                    this._actionAUTH_LOGIN_USER(str, callback);\n                });\n                this._sendCommand('AUTH LOGIN');\n                return;\n            case 'PLAIN':\n                this._responseActions.push(str => {\n                    this._actionAUTHComplete(str, callback);\n                });\n                this._sendCommand(\n                    'AUTH PLAIN ' +\n                        Buffer.from(\n                            //this._auth.user+'\\u0000'+\n                            '\\u0000' + // skip authorization identity as it causes problems with some servers\n                                this._auth.credentials.user +\n                                '\\u0000' +\n                                this._auth.credentials.pass,\n                            'utf-8'\n                        ).toString('base64'),\n                    // log entry without passwords\n                    'AUTH PLAIN ' +\n                        Buffer.from(\n                            //this._auth.user+'\\u0000'+\n                            '\\u0000' + // skip authorization identity as it causes problems with some servers\n                                this._auth.credentials.user +\n                                '\\u0000' +\n                                '/* secret */',\n                            'utf-8'\n                        ).toString('base64')\n                );\n                return;\n            case 'CRAM-MD5':\n                this._responseActions.push(str => {\n                    this._actionAUTH_CRAM_MD5(str, callback);\n                });\n                this._sendCommand('AUTH CRAM-MD5');\n                return;\n        }\n\n        return callback(this._formatError('Unknown authentication method \"' + this._authMethod + '\"', 'EAUTH', false, 'API'));\n    }\n\n    /**\n     * Sends a message\n     *\n     * @param {Object} envelope Envelope object, {from: addr, to: [addr]}\n     * @param {Object} message String, Buffer or a Stream\n     * @param {Function} callback Callback to return once sending is completed\n     */\n    send(envelope, message, done) {\n        if (!message) {\n            return done(this._formatError('Empty message', 'EMESSAGE', false, 'API'));\n        }\n\n        const isDestroyedMessage = this._isDestroyedMessage('send message');\n        if (isDestroyedMessage) {\n            return done(this._formatError(isDestroyedMessage, 'ECONNECTION', false, 'API'));\n        }\n\n        // reject larger messages than allowed\n        if (this._maxAllowedSize && envelope.size > this._maxAllowedSize) {\n            return setImmediate(() => {\n                done(this._formatError('Message size larger than allowed ' + this._maxAllowedSize, 'EMESSAGE', false, 'MAIL FROM'));\n            });\n        }\n\n        // ensure that callback is only called once\n        let returned = false;\n        let callback = function () {\n            if (returned) {\n                return;\n            }\n            returned = true;\n\n            done(...arguments);\n        };\n\n        if (typeof message.on === 'function') {\n            message.on('error', err => callback(this._formatError(err, 'ESTREAM', false, 'API')));\n        }\n\n        let startTime = Date.now();\n        this._setEnvelope(envelope, (err, info) => {\n            if (err) {\n                return callback(err);\n            }\n            let envelopeTime = Date.now();\n            let stream = this._createSendStream((err, str) => {\n                if (err) {\n                    return callback(err);\n                }\n\n                info.envelopeTime = envelopeTime - startTime;\n                info.messageTime = Date.now() - envelopeTime;\n                info.messageSize = stream.outByteCount;\n                info.response = str;\n\n                return callback(null, info);\n            });\n            if (typeof message.pipe === 'function') {\n                message.pipe(stream);\n            } else {\n                stream.write(message);\n                stream.end();\n            }\n        });\n    }\n\n    /**\n     * Resets connection state\n     *\n     * @param {Function} callback Callback to return once connection is reset\n     */\n    reset(callback) {\n        this._sendCommand('RSET');\n        this._responseActions.push(str => {\n            if (str.charAt(0) !== '2') {\n                return callback(this._formatError('Could not reset session state. response=' + str, 'EPROTOCOL', str, 'RSET'));\n            }\n            this._envelope = false;\n            return callback(null, true);\n        });\n    }\n\n    /**\n     * Connection listener that is run when the connection to\n     * the server is opened\n     *\n     * @event\n     */\n    _onConnect() {\n        clearTimeout(this._connectionTimeout);\n\n        this.logger.info(\n            {\n                tnx: 'network',\n                localAddress: this._socket.localAddress,\n                localPort: this._socket.localPort,\n                remoteAddress: this._socket.remoteAddress,\n                remotePort: this._socket.remotePort\n            },\n            '%s established to %s:%s',\n            this.secure ? 'Secure connection' : 'Connection',\n            this._socket.remoteAddress,\n            this._socket.remotePort\n        );\n\n        if (this._destroyed) {\n            // Connection was established after we already had canceled it\n            this.close();\n            return;\n        }\n\n        this.stage = 'connected';\n\n        // clear existing listeners for the socket\n        this._socket.removeListener('data', this._onSocketData);\n        this._socket.removeListener('timeout', this._onSocketTimeout);\n        this._socket.removeListener('close', this._onSocketClose);\n        this._socket.removeListener('end', this._onSocketEnd);\n\n        this._socket.on('data', this._onSocketData);\n        this._socket.once('close', this._onSocketClose);\n        this._socket.once('end', this._onSocketEnd);\n\n        this._socket.setTimeout(this.options.socketTimeout || SOCKET_TIMEOUT);\n        this._socket.on('timeout', this._onSocketTimeout);\n\n        this._greetingTimeout = setTimeout(() => {\n            // if still waiting for greeting, give up\n            if (this._socket && !this._destroyed && this._responseActions[0] === this._actionGreeting) {\n                this._onError('Greeting never received', 'ETIMEDOUT', false, 'CONN');\n            }\n        }, this.options.greetingTimeout || GREETING_TIMEOUT);\n\n        this._responseActions.push(this._actionGreeting);\n\n        // we have a 'data' listener set up so resume socket if it was paused\n        this._socket.resume();\n    }\n\n    /**\n     * 'data' listener for data coming from the server\n     *\n     * @event\n     * @param {Buffer} chunk Data chunk coming from the server\n     */\n    _onData(chunk) {\n        if (this._destroyed || !chunk || !chunk.length) {\n            return;\n        }\n\n        let data = (chunk || '').toString('binary');\n        let lines = (this._remainder + data).split(/\\r?\\n/);\n        let lastline;\n\n        this._remainder = lines.pop();\n\n        for (let i = 0, len = lines.length; i < len; i++) {\n            if (this._responseQueue.length) {\n                lastline = this._responseQueue[this._responseQueue.length - 1];\n                if (/^\\d+-/.test(lastline.split('\\n').pop())) {\n                    this._responseQueue[this._responseQueue.length - 1] += '\\n' + lines[i];\n                    continue;\n                }\n            }\n            this._responseQueue.push(lines[i]);\n        }\n\n        if (this._responseQueue.length) {\n            lastline = this._responseQueue[this._responseQueue.length - 1];\n            if (/^\\d+-/.test(lastline.split('\\n').pop())) {\n                return;\n            }\n        }\n\n        this._processResponse();\n    }\n\n    /**\n     * 'error' listener for the socket\n     *\n     * @event\n     * @param {Error} err Error object\n     * @param {String} type Error name\n     */\n    _onError(err, type, data, command) {\n        clearTimeout(this._connectionTimeout);\n        clearTimeout(this._greetingTimeout);\n\n        if (this._destroyed) {\n            // just ignore, already closed\n            // this might happen when a socket is canceled because of reached timeout\n            // but the socket timeout error itself receives only after\n            return;\n        }\n\n        err = this._formatError(err, type, data, command);\n\n        this.logger.error(data, err.message);\n\n        this.emit('error', err);\n        this.close();\n    }\n\n    _formatError(message, type, response, command) {\n        let err;\n\n        if (/Error\\]$/i.test(Object.prototype.toString.call(message))) {\n            err = message;\n        } else {\n            err = new Error(message);\n        }\n\n        if (type && type !== 'Error') {\n            err.code = type;\n        }\n\n        if (response) {\n            err.response = response;\n            err.message += ': ' + response;\n        }\n\n        let responseCode = (typeof response === 'string' && Number((response.match(/^\\d+/) || [])[0])) || false;\n        if (responseCode) {\n            err.responseCode = responseCode;\n        }\n\n        if (command) {\n            err.command = command;\n        }\n\n        return err;\n    }\n\n    /**\n     * 'close' listener for the socket\n     *\n     * @event\n     */\n    _onClose() {\n        this.logger.info(\n            {\n                tnx: 'network'\n            },\n            'Connection closed'\n        );\n\n        if (this.upgrading && !this._destroyed) {\n            return this._onError(new Error('Connection closed unexpectedly'), 'ETLS', false, 'CONN');\n        } else if (![this._actionGreeting, this.close].includes(this._responseActions[0]) && !this._destroyed) {\n            return this._onError(new Error('Connection closed unexpectedly'), 'ECONNECTION', false, 'CONN');\n        }\n\n        this._destroy();\n    }\n\n    /**\n     * 'end' listener for the socket\n     *\n     * @event\n     */\n    _onEnd() {\n        if (this._socket && !this._socket.destroyed) {\n            this._socket.destroy();\n        }\n    }\n\n    /**\n     * 'timeout' listener for the socket\n     *\n     * @event\n     */\n    _onTimeout() {\n        return this._onError(new Error('Timeout'), 'ETIMEDOUT', false, 'CONN');\n    }\n\n    /**\n     * Destroys the client, emits 'end'\n     */\n    _destroy() {\n        if (this._destroyed) {\n            return;\n        }\n        this._destroyed = true;\n        this.emit('end');\n    }\n\n    /**\n     * Upgrades the connection to TLS\n     *\n     * @param {Function} callback Callback function to run when the connection\n     *        has been secured\n     */\n    _upgradeConnection(callback) {\n        // do not remove all listeners or it breaks node v0.10 as there's\n        // apparently a 'finish' event set that would be cleared as well\n\n        // we can safely keep 'error', 'end', 'close' etc. events\n        this._socket.removeListener('data', this._onSocketData); // incoming data is going to be gibberish from this point onwards\n        this._socket.removeListener('timeout', this._onSocketTimeout); // timeout will be re-set for the new socket object\n\n        let socketPlain = this._socket;\n        let opts = {\n            socket: this._socket,\n            host: this.host\n        };\n\n        Object.keys(this.options.tls || {}).forEach(key => {\n            opts[key] = this.options.tls[key];\n        });\n\n        this.upgrading = true;\n        // tls.connect is not an asynchronous function however it may still throw errors and requires to be wrapped with try/catch\n        try {\n            this._socket = tls.connect(opts, () => {\n                this.secure = true;\n                this.upgrading = false;\n                this._socket.on('data', this._onSocketData);\n\n                socketPlain.removeListener('close', this._onSocketClose);\n                socketPlain.removeListener('end', this._onSocketEnd);\n\n                return callback(null, true);\n            });\n        } catch (err) {\n            return callback(err);\n        }\n\n        this._socket.on('error', this._onSocketError);\n        this._socket.once('close', this._onSocketClose);\n        this._socket.once('end', this._onSocketEnd);\n\n        this._socket.setTimeout(this.options.socketTimeout || SOCKET_TIMEOUT); // 10 min.\n        this._socket.on('timeout', this._onSocketTimeout);\n\n        // resume in case the socket was paused\n        socketPlain.resume();\n    }\n\n    /**\n     * Processes queued responses from the server\n     *\n     * @param {Boolean} force If true, ignores _processing flag\n     */\n    _processResponse() {\n        if (!this._responseQueue.length) {\n            return false;\n        }\n\n        let str = (this.lastServerResponse = (this._responseQueue.shift() || '').toString());\n\n        if (/^\\d+-/.test(str.split('\\n').pop())) {\n            // keep waiting for the final part of multiline response\n            return;\n        }\n\n        if (this.options.debug || this.options.transactionLog) {\n            this.logger.debug(\n                {\n                    tnx: 'server'\n                },\n                str.replace(/\\r?\\n$/, '')\n            );\n        }\n\n        if (!str.trim()) {\n            // skip unexpected empty lines\n            setImmediate(() => this._processResponse(true));\n        }\n\n        let action = this._responseActions.shift();\n\n        if (typeof action === 'function') {\n            action.call(this, str);\n            setImmediate(() => this._processResponse(true));\n        } else {\n            return this._onError(new Error('Unexpected Response'), 'EPROTOCOL', str, 'CONN');\n        }\n    }\n\n    /**\n     * Send a command to the server, append \\r\\n\n     *\n     * @param {String} str String to be sent to the server\n     * @param {String} logStr Optional string to be used for logging instead of the actual string\n     */\n    _sendCommand(str, logStr) {\n        if (this._destroyed) {\n            // Connection already closed, can't send any more data\n            return;\n        }\n\n        if (this._socket.destroyed) {\n            return this.close();\n        }\n\n        if (this.options.debug || this.options.transactionLog) {\n            this.logger.debug(\n                {\n                    tnx: 'client'\n                },\n                (logStr || str || '').toString().replace(/\\r?\\n$/, '')\n            );\n        }\n\n        this._socket.write(Buffer.from(str + '\\r\\n', 'utf-8'));\n    }\n\n    /**\n     * Initiates a new message by submitting envelope data, starting with\n     * MAIL FROM: command\n     *\n     * @param {Object} envelope Envelope object in the form of\n     *        {from:'...', to:['...']}\n     *        or\n     *        {from:{address:'...',name:'...'}, to:[address:'...',name:'...']}\n     */\n    _setEnvelope(envelope, callback) {\n        let args = [];\n        let useSmtpUtf8 = false;\n\n        this._envelope = envelope || {};\n        this._envelope.from = ((this._envelope.from && this._envelope.from.address) || this._envelope.from || '').toString().trim();\n\n        this._envelope.to = [].concat(this._envelope.to || []).map(to => ((to && to.address) || to || '').toString().trim());\n\n        if (!this._envelope.to.length) {\n            return callback(this._formatError('No recipients defined', 'EENVELOPE', false, 'API'));\n        }\n\n        if (this._envelope.from && /[\\r\\n<>]/.test(this._envelope.from)) {\n            return callback(this._formatError('Invalid sender ' + JSON.stringify(this._envelope.from), 'EENVELOPE', false, 'API'));\n        }\n\n        // check if the sender address uses only ASCII characters,\n        // otherwise require usage of SMTPUTF8 extension\n        if (/[\\x80-\\uFFFF]/.test(this._envelope.from)) {\n            useSmtpUtf8 = true;\n        }\n\n        for (let i = 0, len = this._envelope.to.length; i < len; i++) {\n            if (!this._envelope.to[i] || /[\\r\\n<>]/.test(this._envelope.to[i])) {\n                return callback(this._formatError('Invalid recipient ' + JSON.stringify(this._envelope.to[i]), 'EENVELOPE', false, 'API'));\n            }\n\n            // check if the recipients addresses use only ASCII characters,\n            // otherwise require usage of SMTPUTF8 extension\n            if (/[\\x80-\\uFFFF]/.test(this._envelope.to[i])) {\n                useSmtpUtf8 = true;\n            }\n        }\n\n        // clone the recipients array for latter manipulation\n        this._envelope.rcptQueue = JSON.parse(JSON.stringify(this._envelope.to || []));\n        this._envelope.rejected = [];\n        this._envelope.rejectedErrors = [];\n        this._envelope.accepted = [];\n\n        if (this._envelope.dsn) {\n            try {\n                this._envelope.dsn = this._setDsnEnvelope(this._envelope.dsn);\n            } catch (err) {\n                return callback(this._formatError('Invalid DSN ' + err.message, 'EENVELOPE', false, 'API'));\n            }\n        }\n\n        this._responseActions.push(str => {\n            this._actionMAIL(str, callback);\n        });\n\n        // If the server supports SMTPUTF8 and the envelope includes an internationalized\n        // email address then append SMTPUTF8 keyword to the MAIL FROM command\n        if (useSmtpUtf8 && this._supportedExtensions.includes('SMTPUTF8')) {\n            args.push('SMTPUTF8');\n            this._usingSmtpUtf8 = true;\n        }\n\n        // If the server supports 8BITMIME and the message might contain non-ascii bytes\n        // then append the 8BITMIME keyword to the MAIL FROM command\n        if (this._envelope.use8BitMime && this._supportedExtensions.includes('8BITMIME')) {\n            args.push('BODY=8BITMIME');\n            this._using8BitMime = true;\n        }\n\n        if (this._envelope.size && this._supportedExtensions.includes('SIZE')) {\n            args.push('SIZE=' + this._envelope.size);\n        }\n\n        // If the server supports DSN and the envelope includes an DSN prop\n        // then append DSN params to the MAIL FROM command\n        if (this._envelope.dsn && this._supportedExtensions.includes('DSN')) {\n            if (this._envelope.dsn.ret) {\n                args.push('RET=' + shared.encodeXText(this._envelope.dsn.ret));\n            }\n            if (this._envelope.dsn.envid) {\n                args.push('ENVID=' + shared.encodeXText(this._envelope.dsn.envid));\n            }\n        }\n\n        this._sendCommand('MAIL FROM:<' + this._envelope.from + '>' + (args.length ? ' ' + args.join(' ') : ''));\n    }\n\n    _setDsnEnvelope(params) {\n        let ret = (params.ret || params.return || '').toString().toUpperCase() || null;\n        if (ret) {\n            switch (ret) {\n                case 'HDRS':\n                case 'HEADERS':\n                    ret = 'HDRS';\n                    break;\n                case 'FULL':\n                case 'BODY':\n                    ret = 'FULL';\n                    break;\n            }\n        }\n\n        if (ret && !['FULL', 'HDRS'].includes(ret)) {\n            throw new Error('ret: ' + JSON.stringify(ret));\n        }\n\n        let envid = (params.envid || params.id || '').toString() || null;\n\n        let notify = params.notify || null;\n        if (notify) {\n            if (typeof notify === 'string') {\n                notify = notify.split(',');\n            }\n            notify = notify.map(n => n.trim().toUpperCase());\n            let validNotify = ['NEVER', 'SUCCESS', 'FAILURE', 'DELAY'];\n            let invaliNotify = notify.filter(n => !validNotify.includes(n));\n            if (invaliNotify.length || (notify.length > 1 && notify.includes('NEVER'))) {\n                throw new Error('notify: ' + JSON.stringify(notify.join(',')));\n            }\n            notify = notify.join(',');\n        }\n\n        let orcpt = (params.recipient || params.orcpt || '').toString() || null;\n        if (orcpt && orcpt.indexOf(';') < 0) {\n            orcpt = 'rfc822;' + orcpt;\n        }\n\n        return {\n            ret,\n            envid,\n            notify,\n            orcpt\n        };\n    }\n\n    _getDsnRcptToArgs() {\n        let args = [];\n        // If the server supports DSN and the envelope includes an DSN prop\n        // then append DSN params to the RCPT TO command\n        if (this._envelope.dsn && this._supportedExtensions.includes('DSN')) {\n            if (this._envelope.dsn.notify) {\n                args.push('NOTIFY=' + shared.encodeXText(this._envelope.dsn.notify));\n            }\n            if (this._envelope.dsn.orcpt) {\n                args.push('ORCPT=' + shared.encodeXText(this._envelope.dsn.orcpt));\n            }\n        }\n        return args.length ? ' ' + args.join(' ') : '';\n    }\n\n    _createSendStream(callback) {\n        let dataStream = new DataStream();\n        let logStream;\n\n        if (this.options.lmtp) {\n            this._envelope.accepted.forEach((recipient, i) => {\n                let final = i === this._envelope.accepted.length - 1;\n                this._responseActions.push(str => {\n                    this._actionLMTPStream(recipient, final, str, callback);\n                });\n            });\n        } else {\n            this._responseActions.push(str => {\n                this._actionSMTPStream(str, callback);\n            });\n        }\n\n        dataStream.pipe(this._socket, {\n            end: false\n        });\n\n        if (this.options.debug) {\n            logStream = new PassThrough();\n            logStream.on('readable', () => {\n                let chunk;\n                while ((chunk = logStream.read())) {\n                    this.logger.debug(\n                        {\n                            tnx: 'message'\n                        },\n                        chunk.toString('binary').replace(/\\r?\\n$/, '')\n                    );\n                }\n            });\n            dataStream.pipe(logStream);\n        }\n\n        dataStream.once('end', () => {\n            this.logger.info(\n                {\n                    tnx: 'message',\n                    inByteCount: dataStream.inByteCount,\n                    outByteCount: dataStream.outByteCount\n                },\n                '<%s bytes encoded mime message (source size %s bytes)>',\n                dataStream.outByteCount,\n                dataStream.inByteCount\n            );\n        });\n\n        return dataStream;\n    }\n\n    /** ACTIONS **/\n\n    /**\n     * Will be run after the connection is created and the server sends\n     * a greeting. If the incoming message starts with 220 initiate\n     * SMTP session by sending EHLO command\n     *\n     * @param {String} str Message from the server\n     */\n    _actionGreeting(str) {\n        clearTimeout(this._greetingTimeout);\n\n        if (str.substr(0, 3) !== '220') {\n            this._onError(new Error('Invalid greeting. response=' + str), 'EPROTOCOL', str, 'CONN');\n            return;\n        }\n\n        if (this.options.lmtp) {\n            this._responseActions.push(this._actionLHLO);\n            this._sendCommand('LHLO ' + this.name);\n        } else {\n            this._responseActions.push(this._actionEHLO);\n            this._sendCommand('EHLO ' + this.name);\n        }\n    }\n\n    /**\n     * Handles server response for LHLO command. If it yielded in\n     * error, emit 'error', otherwise treat this as an EHLO response\n     *\n     * @param {String} str Message from the server\n     */\n    _actionLHLO(str) {\n        if (str.charAt(0) !== '2') {\n            this._onError(new Error('Invalid LHLO. response=' + str), 'EPROTOCOL', str, 'LHLO');\n            return;\n        }\n\n        this._actionEHLO(str);\n    }\n\n    /**\n     * Handles server response for EHLO command. If it yielded in\n     * error, try HELO instead, otherwise initiate TLS negotiation\n     * if STARTTLS is supported by the server or move into the\n     * authentication phase.\n     *\n     * @param {String} str Message from the server\n     */\n    _actionEHLO(str) {\n        let match;\n\n        if (str.substr(0, 3) === '421') {\n            this._onError(new Error('Server terminates connection. response=' + str), 'ECONNECTION', str, 'EHLO');\n            return;\n        }\n\n        if (str.charAt(0) !== '2') {\n            if (this.options.requireTLS) {\n                this._onError(new Error('EHLO failed but HELO does not support required STARTTLS. response=' + str), 'ECONNECTION', str, 'EHLO');\n                return;\n            }\n\n            // Try HELO instead\n            this._responseActions.push(this._actionHELO);\n            this._sendCommand('HELO ' + this.name);\n            return;\n        }\n\n        // Detect if the server supports STARTTLS\n        if (!this.secure && !this.options.ignoreTLS && (/[ -]STARTTLS\\b/im.test(str) || this.options.requireTLS)) {\n            this._sendCommand('STARTTLS');\n            this._responseActions.push(this._actionSTARTTLS);\n            return;\n        }\n\n        // Detect if the server supports SMTPUTF8\n        if (/[ -]SMTPUTF8\\b/im.test(str)) {\n            this._supportedExtensions.push('SMTPUTF8');\n        }\n\n        // Detect if the server supports DSN\n        if (/[ -]DSN\\b/im.test(str)) {\n            this._supportedExtensions.push('DSN');\n        }\n\n        // Detect if the server supports 8BITMIME\n        if (/[ -]8BITMIME\\b/im.test(str)) {\n            this._supportedExtensions.push('8BITMIME');\n        }\n\n        // Detect if the server supports PIPELINING\n        if (/[ -]PIPELINING\\b/im.test(str)) {\n            this._supportedExtensions.push('PIPELINING');\n        }\n\n        // Detect if the server supports AUTH\n        if (/[ -]AUTH\\b/i.test(str)) {\n            this.allowsAuth = true;\n        }\n\n        // Detect if the server supports PLAIN auth\n        if (/[ -]AUTH(?:(\\s+|=)[^\\n]*\\s+|\\s+|=)PLAIN/i.test(str)) {\n            this._supportedAuth.push('PLAIN');\n        }\n\n        // Detect if the server supports LOGIN auth\n        if (/[ -]AUTH(?:(\\s+|=)[^\\n]*\\s+|\\s+|=)LOGIN/i.test(str)) {\n            this._supportedAuth.push('LOGIN');\n        }\n\n        // Detect if the server supports CRAM-MD5 auth\n        if (/[ -]AUTH(?:(\\s+|=)[^\\n]*\\s+|\\s+|=)CRAM-MD5/i.test(str)) {\n            this._supportedAuth.push('CRAM-MD5');\n        }\n\n        // Detect if the server supports XOAUTH2 auth\n        if (/[ -]AUTH(?:(\\s+|=)[^\\n]*\\s+|\\s+|=)XOAUTH2/i.test(str)) {\n            this._supportedAuth.push('XOAUTH2');\n        }\n\n        // Detect if the server supports SIZE extensions (and the max allowed size)\n        if ((match = str.match(/[ -]SIZE(?:[ \\t]+(\\d+))?/im))) {\n            this._supportedExtensions.push('SIZE');\n            this._maxAllowedSize = Number(match[1]) || 0;\n        }\n\n        this.emit('connect');\n    }\n\n    /**\n     * Handles server response for HELO command. If it yielded in\n     * error, emit 'error', otherwise move into the authentication phase.\n     *\n     * @param {String} str Message from the server\n     */\n    _actionHELO(str) {\n        if (str.charAt(0) !== '2') {\n            this._onError(new Error('Invalid HELO. response=' + str), 'EPROTOCOL', str, 'HELO');\n            return;\n        }\n\n        // assume that authentication is enabled (most probably is not though)\n        this.allowsAuth = true;\n\n        this.emit('connect');\n    }\n\n    /**\n     * Handles server response for STARTTLS command. If there's an error\n     * try HELO instead, otherwise initiate TLS upgrade. If the upgrade\n     * succeedes restart the EHLO\n     *\n     * @param {String} str Message from the server\n     */\n    _actionSTARTTLS(str) {\n        if (str.charAt(0) !== '2') {\n            if (this.options.opportunisticTLS) {\n                this.logger.info(\n                    {\n                        tnx: 'smtp'\n                    },\n                    'Failed STARTTLS upgrade, continuing unencrypted'\n                );\n                return this.emit('connect');\n            }\n            this._onError(new Error('Error upgrading connection with STARTTLS'), 'ETLS', str, 'STARTTLS');\n            return;\n        }\n\n        this._upgradeConnection((err, secured) => {\n            if (err) {\n                this._onError(new Error('Error initiating TLS - ' + (err.message || err)), 'ETLS', false, 'STARTTLS');\n                return;\n            }\n\n            this.logger.info(\n                {\n                    tnx: 'smtp'\n                },\n                'Connection upgraded with STARTTLS'\n            );\n\n            if (secured) {\n                // restart session\n                if (this.options.lmtp) {\n                    this._responseActions.push(this._actionLHLO);\n                    this._sendCommand('LHLO ' + this.name);\n                } else {\n                    this._responseActions.push(this._actionEHLO);\n                    this._sendCommand('EHLO ' + this.name);\n                }\n            } else {\n                this.emit('connect');\n            }\n        });\n    }\n\n    /**\n     * Handle the response for AUTH LOGIN command. We are expecting\n     * '334 VXNlcm5hbWU6' (base64 for 'Username:'). Data to be sent as\n     * response needs to be base64 encoded username. We do not need\n     * exact match but settle with 334 response in general as some\n     * hosts invalidly use a longer message than VXNlcm5hbWU6\n     *\n     * @param {String} str Message from the server\n     */\n    _actionAUTH_LOGIN_USER(str, callback) {\n        if (!/^334[ -]/.test(str)) {\n            // expecting '334 VXNlcm5hbWU6'\n            callback(this._formatError('Invalid login sequence while waiting for \"334 VXNlcm5hbWU6\"', 'EAUTH', str, 'AUTH LOGIN'));\n            return;\n        }\n\n        this._responseActions.push(str => {\n            this._actionAUTH_LOGIN_PASS(str, callback);\n        });\n\n        this._sendCommand(Buffer.from(this._auth.credentials.user + '', 'utf-8').toString('base64'));\n    }\n\n    /**\n     * Handle the response for AUTH CRAM-MD5 command. We are expecting\n     * '334 <challenge string>'. Data to be sent as response needs to be\n     * base64 decoded challenge string, MD5 hashed using the password as\n     * a HMAC key, prefixed by the username and a space, and finally all\n     * base64 encoded again.\n     *\n     * @param {String} str Message from the server\n     */\n    _actionAUTH_CRAM_MD5(str, callback) {\n        let challengeMatch = str.match(/^334\\s+(.+)$/);\n        let challengeString = '';\n\n        if (!challengeMatch) {\n            return callback(this._formatError('Invalid login sequence while waiting for server challenge string', 'EAUTH', str, 'AUTH CRAM-MD5'));\n        } else {\n            challengeString = challengeMatch[1];\n        }\n\n        // Decode from base64\n        let base64decoded = Buffer.from(challengeString, 'base64').toString('ascii'),\n            hmacMD5 = crypto.createHmac('md5', this._auth.credentials.pass);\n\n        hmacMD5.update(base64decoded);\n\n        let prepended = this._auth.credentials.user + ' ' + hmacMD5.digest('hex');\n\n        this._responseActions.push(str => {\n            this._actionAUTH_CRAM_MD5_PASS(str, callback);\n        });\n\n        this._sendCommand(\n            Buffer.from(prepended).toString('base64'),\n            // hidden hash for logs\n            Buffer.from(this._auth.credentials.user + ' /* secret */').toString('base64')\n        );\n    }\n\n    /**\n     * Handles the response to CRAM-MD5 authentication, if there's no error,\n     * the user can be considered logged in. Start waiting for a message to send\n     *\n     * @param {String} str Message from the server\n     */\n    _actionAUTH_CRAM_MD5_PASS(str, callback) {\n        if (!str.match(/^235\\s+/)) {\n            return callback(this._formatError('Invalid login sequence while waiting for \"235\"', 'EAUTH', str, 'AUTH CRAM-MD5'));\n        }\n\n        this.logger.info(\n            {\n                tnx: 'smtp',\n                username: this._auth.user,\n                action: 'authenticated',\n                method: this._authMethod\n            },\n            'User %s authenticated',\n            JSON.stringify(this._auth.user)\n        );\n        this.authenticated = true;\n        callback(null, true);\n    }\n\n    /**\n     * Handle the response for AUTH LOGIN command. We are expecting\n     * '334 UGFzc3dvcmQ6' (base64 for 'Password:'). Data to be sent as\n     * response needs to be base64 encoded password.\n     *\n     * @param {String} str Message from the server\n     */\n    _actionAUTH_LOGIN_PASS(str, callback) {\n        if (!/^334[ -]/.test(str)) {\n            // expecting '334 UGFzc3dvcmQ6'\n            return callback(this._formatError('Invalid login sequence while waiting for \"334 UGFzc3dvcmQ6\"', 'EAUTH', str, 'AUTH LOGIN'));\n        }\n\n        this._responseActions.push(str => {\n            this._actionAUTHComplete(str, callback);\n        });\n\n        this._sendCommand(\n            Buffer.from((this._auth.credentials.pass || '').toString(), 'utf-8').toString('base64'),\n            // Hidden pass for logs\n            Buffer.from('/* secret */', 'utf-8').toString('base64')\n        );\n    }\n\n    /**\n     * Handles the response for authentication, if there's no error,\n     * the user can be considered logged in. Start waiting for a message to send\n     *\n     * @param {String} str Message from the server\n     */\n    _actionAUTHComplete(str, isRetry, callback) {\n        if (!callback && typeof isRetry === 'function') {\n            callback = isRetry;\n            isRetry = false;\n        }\n\n        if (str.substr(0, 3) === '334') {\n            this._responseActions.push(str => {\n                if (isRetry || this._authMethod !== 'XOAUTH2') {\n                    this._actionAUTHComplete(str, true, callback);\n                } else {\n                    // fetch a new OAuth2 access token\n                    setImmediate(() => this._handleXOauth2Token(true, callback));\n                }\n            });\n            this._sendCommand('');\n            return;\n        }\n\n        if (str.charAt(0) !== '2') {\n            this.logger.info(\n                {\n                    tnx: 'smtp',\n                    username: this._auth.user,\n                    action: 'authfail',\n                    method: this._authMethod\n                },\n                'User %s failed to authenticate',\n                JSON.stringify(this._auth.user)\n            );\n            return callback(this._formatError('Invalid login', 'EAUTH', str, 'AUTH ' + this._authMethod));\n        }\n\n        this.logger.info(\n            {\n                tnx: 'smtp',\n                username: this._auth.user,\n                action: 'authenticated',\n                method: this._authMethod\n            },\n            'User %s authenticated',\n            JSON.stringify(this._auth.user)\n        );\n        this.authenticated = true;\n        callback(null, true);\n    }\n\n    /**\n     * Handle response for a MAIL FROM: command\n     *\n     * @param {String} str Message from the server\n     */\n    _actionMAIL(str, callback) {\n        let message, curRecipient;\n        if (Number(str.charAt(0)) !== 2) {\n            if (this._usingSmtpUtf8 && /^550 /.test(str) && /[\\x80-\\uFFFF]/.test(this._envelope.from)) {\n                message = 'Internationalized mailbox name not allowed';\n            } else {\n                message = 'Mail command failed';\n            }\n            return callback(this._formatError(message, 'EENVELOPE', str, 'MAIL FROM'));\n        }\n\n        if (!this._envelope.rcptQueue.length) {\n            return callback(this._formatError('Can\\x27t send mail - no recipients defined', 'EENVELOPE', false, 'API'));\n        } else {\n            this._recipientQueue = [];\n\n            if (this._supportedExtensions.includes('PIPELINING')) {\n                while (this._envelope.rcptQueue.length) {\n                    curRecipient = this._envelope.rcptQueue.shift();\n                    this._recipientQueue.push(curRecipient);\n                    this._responseActions.push(str => {\n                        this._actionRCPT(str, callback);\n                    });\n                    this._sendCommand('RCPT TO:<' + curRecipient + '>' + this._getDsnRcptToArgs());\n                }\n            } else {\n                curRecipient = this._envelope.rcptQueue.shift();\n                this._recipientQueue.push(curRecipient);\n                this._responseActions.push(str => {\n                    this._actionRCPT(str, callback);\n                });\n                this._sendCommand('RCPT TO:<' + curRecipient + '>' + this._getDsnRcptToArgs());\n            }\n        }\n    }\n\n    /**\n     * Handle response for a RCPT TO: command\n     *\n     * @param {String} str Message from the server\n     */\n    _actionRCPT(str, callback) {\n        let message,\n            err,\n            curRecipient = this._recipientQueue.shift();\n        if (Number(str.charAt(0)) !== 2) {\n            // this is a soft error\n            if (this._usingSmtpUtf8 && /^553 /.test(str) && /[\\x80-\\uFFFF]/.test(curRecipient)) {\n                message = 'Internationalized mailbox name not allowed';\n            } else {\n                message = 'Recipient command failed';\n            }\n            this._envelope.rejected.push(curRecipient);\n            // store error for the failed recipient\n            err = this._formatError(message, 'EENVELOPE', str, 'RCPT TO');\n            err.recipient = curRecipient;\n            this._envelope.rejectedErrors.push(err);\n        } else {\n            this._envelope.accepted.push(curRecipient);\n        }\n\n        if (!this._envelope.rcptQueue.length && !this._recipientQueue.length) {\n            if (this._envelope.rejected.length < this._envelope.to.length) {\n                this._responseActions.push(str => {\n                    this._actionDATA(str, callback);\n                });\n                this._sendCommand('DATA');\n            } else {\n                err = this._formatError('Can\\x27t send mail - all recipients were rejected', 'EENVELOPE', str, 'RCPT TO');\n                err.rejected = this._envelope.rejected;\n                err.rejectedErrors = this._envelope.rejectedErrors;\n                return callback(err);\n            }\n        } else if (this._envelope.rcptQueue.length) {\n            curRecipient = this._envelope.rcptQueue.shift();\n            this._recipientQueue.push(curRecipient);\n            this._responseActions.push(str => {\n                this._actionRCPT(str, callback);\n            });\n            this._sendCommand('RCPT TO:<' + curRecipient + '>' + this._getDsnRcptToArgs());\n        }\n    }\n\n    /**\n     * Handle response for a DATA command\n     *\n     * @param {String} str Message from the server\n     */\n    _actionDATA(str, callback) {\n        // response should be 354 but according to this issue https://github.com/eleith/emailjs/issues/24\n        // some servers might use 250 instead, so lets check for 2 or 3 as the first digit\n        if (!/^[23]/.test(str)) {\n            return callback(this._formatError('Data command failed', 'EENVELOPE', str, 'DATA'));\n        }\n\n        let response = {\n            accepted: this._envelope.accepted,\n            rejected: this._envelope.rejected\n        };\n\n        if (this._envelope.rejectedErrors.length) {\n            response.rejectedErrors = this._envelope.rejectedErrors;\n        }\n\n        callback(null, response);\n    }\n\n    /**\n     * Handle response for a DATA stream when using SMTP\n     * We expect a single response that defines if the sending succeeded or failed\n     *\n     * @param {String} str Message from the server\n     */\n    _actionSMTPStream(str, callback) {\n        if (Number(str.charAt(0)) !== 2) {\n            // Message failed\n            return callback(this._formatError('Message failed', 'EMESSAGE', str, 'DATA'));\n        } else {\n            // Message sent succesfully\n            return callback(null, str);\n        }\n    }\n\n    /**\n     * Handle response for a DATA stream\n     * We expect a separate response for every recipient. All recipients can either\n     * succeed or fail separately\n     *\n     * @param {String} recipient The recipient this response applies to\n     * @param {Boolean} final Is this the final recipient?\n     * @param {String} str Message from the server\n     */\n    _actionLMTPStream(recipient, final, str, callback) {\n        let err;\n        if (Number(str.charAt(0)) !== 2) {\n            // Message failed\n            err = this._formatError('Message failed for recipient ' + recipient, 'EMESSAGE', str, 'DATA');\n            err.recipient = recipient;\n            this._envelope.rejected.push(recipient);\n            this._envelope.rejectedErrors.push(err);\n            for (let i = 0, len = this._envelope.accepted.length; i < len; i++) {\n                if (this._envelope.accepted[i] === recipient) {\n                    this._envelope.accepted.splice(i, 1);\n                }\n            }\n        }\n        if (final) {\n            return callback(null, str);\n        }\n    }\n\n    _handleXOauth2Token(isRetry, callback) {\n        this._auth.oauth2.getToken(isRetry, (err, accessToken) => {\n            if (err) {\n                this.logger.info(\n                    {\n                        tnx: 'smtp',\n                        username: this._auth.user,\n                        action: 'authfail',\n                        method: this._authMethod\n                    },\n                    'User %s failed to authenticate',\n                    JSON.stringify(this._auth.user)\n                );\n                return callback(this._formatError(err, 'EAUTH', false, 'AUTH XOAUTH2'));\n            }\n            this._responseActions.push(str => {\n                this._actionAUTHComplete(str, isRetry, callback);\n            });\n            this._sendCommand(\n                'AUTH XOAUTH2 ' + this._auth.oauth2.buildXOAuth2Token(accessToken),\n                //  Hidden for logs\n                'AUTH XOAUTH2 ' + this._auth.oauth2.buildXOAuth2Token('/* secret */')\n            );\n        });\n    }\n\n    /**\n     *\n     * @param {string} command\n     * @private\n     */\n    _isDestroyedMessage(command) {\n        if (this._destroyed) {\n            return 'Cannot ' + command + ' - smtp connection is already destroyed.';\n        }\n\n        if (this._socket) {\n            if (this._socket.destroyed) {\n                return 'Cannot ' + command + ' - smtp connection socket is already destroyed.';\n            }\n\n            if (!this._socket.writable) {\n                return 'Cannot ' + command + ' - smtp connection socket is already half-closed.';\n            }\n        }\n    }\n\n    _getHostname() {\n        // defaul hostname is machine hostname or [IP]\n        let defaultHostname = os.hostname() || '';\n\n        // ignore if not FQDN\n        if (defaultHostname.indexOf('.') < 0) {\n            defaultHostname = '[127.0.0.1]';\n        }\n\n        // IP should be enclosed in []\n        if (defaultHostname.match(/^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/)) {\n            defaultHostname = '[' + defaultHostname + ']';\n        }\n\n        return defaultHostname;\n    }\n}\n\nmodule.exports = SMTPConnection;\n","'use strict';\n\nconst EventEmitter = require('events');\nconst PoolResource = require('./pool-resource');\nconst SMTPConnection = require('../smtp-connection');\nconst wellKnown = require('../well-known');\nconst shared = require('../shared');\nconst packageData = require('../../package.json');\n\n/**\n * Creates a SMTP pool transport object for Nodemailer\n *\n * @constructor\n * @param {Object} options SMTP Connection options\n */\nclass SMTPPool extends EventEmitter {\n    constructor(options) {\n        super();\n\n        options = options || {};\n        if (typeof options === 'string') {\n            options = {\n                url: options\n            };\n        }\n\n        let urlData;\n        let service = options.service;\n\n        if (typeof options.getSocket === 'function') {\n            this.getSocket = options.getSocket;\n        }\n\n        if (options.url) {\n            urlData = shared.parseConnectionUrl(options.url);\n            service = service || urlData.service;\n        }\n\n        this.options = shared.assign(\n            false, // create new object\n            options, // regular options\n            urlData, // url options\n            service && wellKnown(service) // wellknown options\n        );\n\n        this.options.maxConnections = this.options.maxConnections || 5;\n        this.options.maxMessages = this.options.maxMessages || 100;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'smtp-pool'\n        });\n\n        // temporary object\n        let connection = new SMTPConnection(this.options);\n\n        this.name = 'SMTP (pool)';\n        this.version = packageData.version + '[client:' + connection.version + ']';\n\n        this._rateLimit = {\n            counter: 0,\n            timeout: null,\n            waiting: [],\n            checkpoint: false,\n            delta: Number(this.options.rateDelta) || 1000,\n            limit: Number(this.options.rateLimit) || 0\n        };\n        this._closed = false;\n        this._queue = [];\n        this._connections = [];\n        this._connectionCounter = 0;\n\n        this.idling = true;\n\n        setImmediate(() => {\n            if (this.idling) {\n                this.emit('idle');\n            }\n        });\n    }\n\n    /**\n     * Placeholder function for creating proxy sockets. This method immediatelly returns\n     * without a socket\n     *\n     * @param {Object} options Connection options\n     * @param {Function} callback Callback function to run with the socket keys\n     */\n    getSocket(options, callback) {\n        // return immediatelly\n        return setImmediate(() => callback(null, false));\n    }\n\n    /**\n     * Queues an e-mail to be sent using the selected settings\n     *\n     * @param {Object} mail Mail object\n     * @param {Function} callback Callback function\n     */\n    send(mail, callback) {\n        if (this._closed) {\n            return false;\n        }\n\n        this._queue.push({\n            mail,\n            requeueAttempts: 0,\n            callback\n        });\n\n        if (this.idling && this._queue.length >= this.options.maxConnections) {\n            this.idling = false;\n        }\n\n        setImmediate(() => this._processMessages());\n\n        return true;\n    }\n\n    /**\n     * Closes all connections in the pool. If there is a message being sent, the connection\n     * is closed later\n     */\n    close() {\n        let connection;\n        let len = this._connections.length;\n        this._closed = true;\n\n        // clear rate limit timer if it exists\n        clearTimeout(this._rateLimit.timeout);\n\n        if (!len && !this._queue.length) {\n            return;\n        }\n\n        // remove all available connections\n        for (let i = len - 1; i >= 0; i--) {\n            if (this._connections[i] && this._connections[i].available) {\n                connection = this._connections[i];\n                connection.close();\n                this.logger.info(\n                    {\n                        tnx: 'connection',\n                        cid: connection.id,\n                        action: 'removed'\n                    },\n                    'Connection #%s removed',\n                    connection.id\n                );\n            }\n        }\n\n        if (len && !this._connections.length) {\n            this.logger.debug(\n                {\n                    tnx: 'connection'\n                },\n                'All connections removed'\n            );\n        }\n\n        if (!this._queue.length) {\n            return;\n        }\n\n        // make sure that entire queue would be cleaned\n        let invokeCallbacks = () => {\n            if (!this._queue.length) {\n                this.logger.debug(\n                    {\n                        tnx: 'connection'\n                    },\n                    'Pending queue entries cleared'\n                );\n                return;\n            }\n            let entry = this._queue.shift();\n            if (entry && typeof entry.callback === 'function') {\n                try {\n                    entry.callback(new Error('Connection pool was closed'));\n                } catch (E) {\n                    this.logger.error(\n                        {\n                            err: E,\n                            tnx: 'callback',\n                            cid: connection.id\n                        },\n                        'Callback error for #%s: %s',\n                        connection.id,\n                        E.message\n                    );\n                }\n            }\n            setImmediate(invokeCallbacks);\n        };\n        setImmediate(invokeCallbacks);\n    }\n\n    /**\n     * Check the queue and available connections. If there is a message to be sent and there is\n     * an available connection, then use this connection to send the mail\n     */\n    _processMessages() {\n        let connection;\n        let i, len;\n\n        // do nothing if already closed\n        if (this._closed) {\n            return;\n        }\n\n        // do nothing if queue is empty\n        if (!this._queue.length) {\n            if (!this.idling) {\n                // no pending jobs\n                this.idling = true;\n                this.emit('idle');\n            }\n            return;\n        }\n\n        // find first available connection\n        for (i = 0, len = this._connections.length; i < len; i++) {\n            if (this._connections[i].available) {\n                connection = this._connections[i];\n                break;\n            }\n        }\n\n        if (!connection && this._connections.length < this.options.maxConnections) {\n            connection = this._createConnection();\n        }\n\n        if (!connection) {\n            // no more free connection slots available\n            this.idling = false;\n            return;\n        }\n\n        // check if there is free space in the processing queue\n        if (!this.idling && this._queue.length < this.options.maxConnections) {\n            this.idling = true;\n            this.emit('idle');\n        }\n\n        let entry = (connection.queueEntry = this._queue.shift());\n        entry.messageId = (connection.queueEntry.mail.message.getHeader('message-id') || '').replace(/[<>\\s]/g, '');\n\n        connection.available = false;\n\n        this.logger.debug(\n            {\n                tnx: 'pool',\n                cid: connection.id,\n                messageId: entry.messageId,\n                action: 'assign'\n            },\n            'Assigned message <%s> to #%s (%s)',\n            entry.messageId,\n            connection.id,\n            connection.messages + 1\n        );\n\n        if (this._rateLimit.limit) {\n            this._rateLimit.counter++;\n            if (!this._rateLimit.checkpoint) {\n                this._rateLimit.checkpoint = Date.now();\n            }\n        }\n\n        connection.send(entry.mail, (err, info) => {\n            // only process callback if current handler is not changed\n            if (entry === connection.queueEntry) {\n                try {\n                    entry.callback(err, info);\n                } catch (E) {\n                    this.logger.error(\n                        {\n                            err: E,\n                            tnx: 'callback',\n                            cid: connection.id\n                        },\n                        'Callback error for #%s: %s',\n                        connection.id,\n                        E.message\n                    );\n                }\n                connection.queueEntry = false;\n            }\n        });\n    }\n\n    /**\n     * Creates a new pool resource\n     */\n    _createConnection() {\n        let connection = new PoolResource(this);\n\n        connection.id = ++this._connectionCounter;\n\n        this.logger.info(\n            {\n                tnx: 'pool',\n                cid: connection.id,\n                action: 'conection'\n            },\n            'Created new pool resource #%s',\n            connection.id\n        );\n\n        // resource comes available\n        connection.on('available', () => {\n            this.logger.debug(\n                {\n                    tnx: 'connection',\n                    cid: connection.id,\n                    action: 'available'\n                },\n                'Connection #%s became available',\n                connection.id\n            );\n\n            if (this._closed) {\n                // if already closed run close() that will remove this connections from connections list\n                this.close();\n            } else {\n                // check if there's anything else to send\n                this._processMessages();\n            }\n        });\n\n        // resource is terminated with an error\n        connection.once('error', err => {\n            if (err.code !== 'EMAXLIMIT') {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'pool',\n                        cid: connection.id\n                    },\n                    'Pool Error for #%s: %s',\n                    connection.id,\n                    err.message\n                );\n            } else {\n                this.logger.debug(\n                    {\n                        tnx: 'pool',\n                        cid: connection.id,\n                        action: 'maxlimit'\n                    },\n                    'Max messages limit exchausted for #%s',\n                    connection.id\n                );\n            }\n\n            if (connection.queueEntry) {\n                try {\n                    connection.queueEntry.callback(err);\n                } catch (E) {\n                    this.logger.error(\n                        {\n                            err: E,\n                            tnx: 'callback',\n                            cid: connection.id\n                        },\n                        'Callback error for #%s: %s',\n                        connection.id,\n                        E.message\n                    );\n                }\n                connection.queueEntry = false;\n            }\n\n            // remove the erroneus connection from connections list\n            this._removeConnection(connection);\n\n            this._continueProcessing();\n        });\n\n        connection.once('close', () => {\n            this.logger.info(\n                {\n                    tnx: 'connection',\n                    cid: connection.id,\n                    action: 'closed'\n                },\n                'Connection #%s was closed',\n                connection.id\n            );\n\n            this._removeConnection(connection);\n\n            if (connection.queueEntry) {\n                // If the connection closed when sending, add the message to the queue again\n                // if max number of requeues is not reached yet\n                // Note that we must wait a bit.. because the callback of the 'error' handler might be called\n                // in the next event loop\n                setTimeout(() => {\n                    if (connection.queueEntry) {\n                        if (this._shouldRequeuOnConnectionClose(connection.queueEntry)) {\n                            this._requeueEntryOnConnectionClose(connection);\n                        } else {\n                            this._failDeliveryOnConnectionClose(connection);\n                        }\n                    }\n                    this._continueProcessing();\n                }, 50);\n            } else {\n                this._continueProcessing();\n            }\n        });\n\n        this._connections.push(connection);\n\n        return connection;\n    }\n\n    _shouldRequeuOnConnectionClose(queueEntry) {\n        if (this.options.maxRequeues === undefined || this.options.maxRequeues < 0) {\n            return true;\n        }\n\n        return queueEntry.requeueAttempts < this.options.maxRequeues;\n    }\n\n    _failDeliveryOnConnectionClose(connection) {\n        if (connection.queueEntry && connection.queueEntry.callback) {\n            try {\n                connection.queueEntry.callback(new Error('Reached maximum number of retries after connection was closed'));\n            } catch (E) {\n                this.logger.error(\n                    {\n                        err: E,\n                        tnx: 'callback',\n                        messageId: connection.queueEntry.messageId,\n                        cid: connection.id\n                    },\n                    'Callback error for #%s: %s',\n                    connection.id,\n                    E.message\n                );\n            }\n            connection.queueEntry = false;\n        }\n    }\n\n    _requeueEntryOnConnectionClose(connection) {\n        connection.queueEntry.requeueAttempts = connection.queueEntry.requeueAttempts + 1;\n        this.logger.debug(\n            {\n                tnx: 'pool',\n                cid: connection.id,\n                messageId: connection.queueEntry.messageId,\n                action: 'requeue'\n            },\n            'Re-queued message <%s> for #%s. Attempt: #%s',\n            connection.queueEntry.messageId,\n            connection.id,\n            connection.queueEntry.requeueAttempts\n        );\n        this._queue.unshift(connection.queueEntry);\n        connection.queueEntry = false;\n    }\n\n    /**\n     * Continue to process message if the pool hasn't closed\n     */\n    _continueProcessing() {\n        if (this._closed) {\n            this.close();\n        } else {\n            setTimeout(() => this._processMessages(), 100);\n        }\n    }\n\n    /**\n     * Remove resource from pool\n     *\n     * @param {Object} connection The PoolResource to remove\n     */\n    _removeConnection(connection) {\n        let index = this._connections.indexOf(connection);\n\n        if (index !== -1) {\n            this._connections.splice(index, 1);\n        }\n    }\n\n    /**\n     * Checks if connections have hit current rate limit and if so, queues the availability callback\n     *\n     * @param {Function} callback Callback function to run once rate limiter has been cleared\n     */\n    _checkRateLimit(callback) {\n        if (!this._rateLimit.limit) {\n            return callback();\n        }\n\n        let now = Date.now();\n\n        if (this._rateLimit.counter < this._rateLimit.limit) {\n            return callback();\n        }\n\n        this._rateLimit.waiting.push(callback);\n\n        if (this._rateLimit.checkpoint <= now - this._rateLimit.delta) {\n            return this._clearRateLimit();\n        } else if (!this._rateLimit.timeout) {\n            this._rateLimit.timeout = setTimeout(() => this._clearRateLimit(), this._rateLimit.delta - (now - this._rateLimit.checkpoint));\n            this._rateLimit.checkpoint = now;\n        }\n    }\n\n    /**\n     * Clears current rate limit limitation and runs paused callback\n     */\n    _clearRateLimit() {\n        clearTimeout(this._rateLimit.timeout);\n        this._rateLimit.timeout = null;\n        this._rateLimit.counter = 0;\n        this._rateLimit.checkpoint = false;\n\n        // resume all paused connections\n        while (this._rateLimit.waiting.length) {\n            let cb = this._rateLimit.waiting.shift();\n            setImmediate(cb);\n        }\n    }\n\n    /**\n     * Returns true if there are free slots in the queue\n     */\n    isIdle() {\n        return this.idling;\n    }\n\n    /**\n     * Verifies SMTP configuration\n     *\n     * @param {Function} callback Callback function\n     */\n    verify(callback) {\n        let promise;\n\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n\n        let auth = new PoolResource(this).auth;\n\n        this.getSocket(this.options, (err, socketOptions) => {\n            if (err) {\n                return callback(err);\n            }\n\n            let options = this.options;\n            if (socketOptions && socketOptions.connection) {\n                this.logger.info(\n                    {\n                        tnx: 'proxy',\n                        remoteAddress: socketOptions.connection.remoteAddress,\n                        remotePort: socketOptions.connection.remotePort,\n                        destHost: options.host || '',\n                        destPort: options.port || '',\n                        action: 'connected'\n                    },\n                    'Using proxied socket from %s:%s to %s:%s',\n                    socketOptions.connection.remoteAddress,\n                    socketOptions.connection.remotePort,\n                    options.host || '',\n                    options.port || ''\n                );\n                options = shared.assign(false, options);\n                Object.keys(socketOptions).forEach(key => {\n                    options[key] = socketOptions[key];\n                });\n            }\n\n            let connection = new SMTPConnection(options);\n            let returned = false;\n\n            connection.once('error', err => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                connection.close();\n                return callback(err);\n            });\n\n            connection.once('end', () => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                return callback(new Error('Connection closed'));\n            });\n\n            let finalize = () => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                connection.quit();\n                return callback(null, true);\n            };\n\n            connection.connect(() => {\n                if (returned) {\n                    return;\n                }\n\n                if (auth && (connection.allowsAuth || options.forceAuth)) {\n                    connection.login(auth, err => {\n                        if (returned) {\n                            return;\n                        }\n\n                        if (err) {\n                            returned = true;\n                            connection.close();\n                            return callback(err);\n                        }\n\n                        finalize();\n                    });\n                } else {\n                    finalize();\n                }\n            });\n        });\n\n        return promise;\n    }\n}\n\n// expose to the world\nmodule.exports = SMTPPool;\n","'use strict';\n\nconst SMTPConnection = require('../smtp-connection');\nconst assign = require('../shared').assign;\nconst XOAuth2 = require('../xoauth2');\nconst EventEmitter = require('events');\n\n/**\n * Creates an element for the pool\n *\n * @constructor\n * @param {Object} options SMTPPool instance\n */\nclass PoolResource extends EventEmitter {\n    constructor(pool) {\n        super();\n\n        this.pool = pool;\n        this.options = pool.options;\n        this.logger = this.pool.logger;\n\n        if (this.options.auth) {\n            switch ((this.options.auth.type || '').toString().toUpperCase()) {\n                case 'OAUTH2': {\n                    let oauth2 = new XOAuth2(this.options.auth, this.logger);\n                    oauth2.provisionCallback = (this.pool.mailer && this.pool.mailer.get('oauth2_provision_cb')) || oauth2.provisionCallback;\n                    this.auth = {\n                        type: 'OAUTH2',\n                        user: this.options.auth.user,\n                        oauth2,\n                        method: 'XOAUTH2'\n                    };\n                    oauth2.on('token', token => this.pool.mailer.emit('token', token));\n                    oauth2.on('error', err => this.emit('error', err));\n                    break;\n                }\n                default:\n                    if (!this.options.auth.user && !this.options.auth.pass) {\n                        break;\n                    }\n                    this.auth = {\n                        type: (this.options.auth.type || '').toString().toUpperCase() || 'LOGIN',\n                        user: this.options.auth.user,\n                        credentials: {\n                            user: this.options.auth.user || '',\n                            pass: this.options.auth.pass,\n                            options: this.options.auth.options\n                        },\n                        method: (this.options.auth.method || '').trim().toUpperCase() || this.options.authMethod || false\n                    };\n            }\n        }\n\n        this._connection = false;\n        this._connected = false;\n\n        this.messages = 0;\n        this.available = true;\n    }\n\n    /**\n     * Initiates a connection to the SMTP server\n     *\n     * @param {Function} callback Callback function to run once the connection is established or failed\n     */\n    connect(callback) {\n        this.pool.getSocket(this.options, (err, socketOptions) => {\n            if (err) {\n                return callback(err);\n            }\n\n            let returned = false;\n            let options = this.options;\n            if (socketOptions && socketOptions.connection) {\n                this.logger.info(\n                    {\n                        tnx: 'proxy',\n                        remoteAddress: socketOptions.connection.remoteAddress,\n                        remotePort: socketOptions.connection.remotePort,\n                        destHost: options.host || '',\n                        destPort: options.port || '',\n                        action: 'connected'\n                    },\n                    'Using proxied socket from %s:%s to %s:%s',\n                    socketOptions.connection.remoteAddress,\n                    socketOptions.connection.remotePort,\n                    options.host || '',\n                    options.port || ''\n                );\n\n                options = assign(false, options);\n                Object.keys(socketOptions).forEach(key => {\n                    options[key] = socketOptions[key];\n                });\n            }\n\n            this.connection = new SMTPConnection(options);\n\n            this.connection.once('error', err => {\n                this.emit('error', err);\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                return callback(err);\n            });\n\n            this.connection.once('end', () => {\n                this.close();\n                if (returned) {\n                    return;\n                }\n                returned = true;\n\n                let timer = setTimeout(() => {\n                    if (returned) {\n                        return;\n                    }\n                    // still have not returned, this means we have an unexpected connection close\n                    let err = new Error('Unexpected socket close');\n                    if (this.connection && this.connection._socket && this.connection._socket.upgrading) {\n                        // starttls connection errors\n                        err.code = 'ETLS';\n                    }\n                    callback(err);\n                }, 1000);\n\n                try {\n                    timer.unref();\n                } catch (E) {\n                    // Ignore. Happens on envs with non-node timer implementation\n                }\n            });\n\n            this.connection.connect(() => {\n                if (returned) {\n                    return;\n                }\n\n                if (this.auth && (this.connection.allowsAuth || options.forceAuth)) {\n                    this.connection.login(this.auth, err => {\n                        if (returned) {\n                            return;\n                        }\n                        returned = true;\n\n                        if (err) {\n                            this.connection.close();\n                            this.emit('error', err);\n                            return callback(err);\n                        }\n\n                        this._connected = true;\n                        callback(null, true);\n                    });\n                } else {\n                    returned = true;\n                    this._connected = true;\n                    return callback(null, true);\n                }\n            });\n        });\n    }\n\n    /**\n     * Sends an e-mail to be sent using the selected settings\n     *\n     * @param {Object} mail Mail object\n     * @param {Function} callback Callback function\n     */\n    send(mail, callback) {\n        if (!this._connected) {\n            return this.connect(err => {\n                if (err) {\n                    return callback(err);\n                }\n                return this.send(mail, callback);\n            });\n        }\n\n        let envelope = mail.message.getEnvelope();\n        let messageId = mail.message.messageId();\n\n        let recipients = [].concat(envelope.to || []);\n        if (recipients.length > 3) {\n            recipients.push('...and ' + recipients.splice(2).length + ' more');\n        }\n        this.logger.info(\n            {\n                tnx: 'send',\n                messageId,\n                cid: this.id\n            },\n            'Sending message %s using #%s to <%s>',\n            messageId,\n            this.id,\n            recipients.join(', ')\n        );\n\n        if (mail.data.dsn) {\n            envelope.dsn = mail.data.dsn;\n        }\n\n        this.connection.send(envelope, mail.message.createReadStream(), (err, info) => {\n            this.messages++;\n\n            if (err) {\n                this.connection.close();\n                this.emit('error', err);\n                return callback(err);\n            }\n\n            info.envelope = {\n                from: envelope.from,\n                to: envelope.to\n            };\n            info.messageId = messageId;\n\n            setImmediate(() => {\n                let err;\n                if (this.messages >= this.options.maxMessages) {\n                    err = new Error('Resource exhausted');\n                    err.code = 'EMAXLIMIT';\n                    this.connection.close();\n                    this.emit('error', err);\n                } else {\n                    this.pool._checkRateLimit(() => {\n                        this.available = true;\n                        this.emit('available');\n                    });\n                }\n            });\n\n            callback(null, info);\n        });\n    }\n\n    /**\n     * Closes the connection\n     */\n    close() {\n        this._connected = false;\n        if (this.auth && this.auth.oauth2) {\n            this.auth.oauth2.removeAllListeners();\n        }\n        if (this.connection) {\n            this.connection.close();\n        }\n        this.emit('close');\n    }\n}\n\nmodule.exports = PoolResource;\n","'use strict';\n\nconst EventEmitter = require('events');\nconst SMTPConnection = require('../smtp-connection');\nconst wellKnown = require('../well-known');\nconst shared = require('../shared');\nconst XOAuth2 = require('../xoauth2');\nconst packageData = require('../../package.json');\n\n/**\n * Creates a SMTP transport object for Nodemailer\n *\n * @constructor\n * @param {Object} options Connection options\n */\nclass SMTPTransport extends EventEmitter {\n    constructor(options) {\n        super();\n\n        options = options || {};\n        if (typeof options === 'string') {\n            options = {\n                url: options\n            };\n        }\n\n        let urlData;\n        let service = options.service;\n\n        if (typeof options.getSocket === 'function') {\n            this.getSocket = options.getSocket;\n        }\n\n        if (options.url) {\n            urlData = shared.parseConnectionUrl(options.url);\n            service = service || urlData.service;\n        }\n\n        this.options = shared.assign(\n            false, // create new object\n            options, // regular options\n            urlData, // url options\n            service && wellKnown(service) // wellknown options\n        );\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'smtp-transport'\n        });\n\n        // temporary object\n        let connection = new SMTPConnection(this.options);\n\n        this.name = 'SMTP';\n        this.version = packageData.version + '[client:' + connection.version + ']';\n\n        if (this.options.auth) {\n            this.auth = this.getAuth({});\n        }\n    }\n\n    /**\n     * Placeholder function for creating proxy sockets. This method immediatelly returns\n     * without a socket\n     *\n     * @param {Object} options Connection options\n     * @param {Function} callback Callback function to run with the socket keys\n     */\n    getSocket(options, callback) {\n        // return immediatelly\n        return setImmediate(() => callback(null, false));\n    }\n\n    getAuth(authOpts) {\n        if (!authOpts) {\n            return this.auth;\n        }\n\n        let hasAuth = false;\n        let authData = {};\n\n        if (this.options.auth && typeof this.options.auth === 'object') {\n            Object.keys(this.options.auth).forEach(key => {\n                hasAuth = true;\n                authData[key] = this.options.auth[key];\n            });\n        }\n\n        if (authOpts && typeof authOpts === 'object') {\n            Object.keys(authOpts).forEach(key => {\n                hasAuth = true;\n                authData[key] = authOpts[key];\n            });\n        }\n\n        if (!hasAuth) {\n            return false;\n        }\n\n        switch ((authData.type || '').toString().toUpperCase()) {\n            case 'OAUTH2': {\n                if (!authData.service && !authData.user) {\n                    return false;\n                }\n                let oauth2 = new XOAuth2(authData, this.logger);\n                oauth2.provisionCallback = (this.mailer && this.mailer.get('oauth2_provision_cb')) || oauth2.provisionCallback;\n                oauth2.on('token', token => this.mailer.emit('token', token));\n                oauth2.on('error', err => this.emit('error', err));\n                return {\n                    type: 'OAUTH2',\n                    user: authData.user,\n                    oauth2,\n                    method: 'XOAUTH2'\n                };\n            }\n            default:\n                return {\n                    type: (authData.type || '').toString().toUpperCase() || 'LOGIN',\n                    user: authData.user,\n                    credentials: {\n                        user: authData.user || '',\n                        pass: authData.pass,\n                        options: authData.options\n                    },\n                    method: (authData.method || '').trim().toUpperCase() || this.options.authMethod || false\n                };\n        }\n    }\n\n    /**\n     * Sends an e-mail using the selected settings\n     *\n     * @param {Object} mail Mail object\n     * @param {Function} callback Callback function\n     */\n    send(mail, callback) {\n        this.getSocket(this.options, (err, socketOptions) => {\n            if (err) {\n                return callback(err);\n            }\n\n            let returned = false;\n            let options = this.options;\n            if (socketOptions && socketOptions.connection) {\n                this.logger.info(\n                    {\n                        tnx: 'proxy',\n                        remoteAddress: socketOptions.connection.remoteAddress,\n                        remotePort: socketOptions.connection.remotePort,\n                        destHost: options.host || '',\n                        destPort: options.port || '',\n                        action: 'connected'\n                    },\n                    'Using proxied socket from %s:%s to %s:%s',\n                    socketOptions.connection.remoteAddress,\n                    socketOptions.connection.remotePort,\n                    options.host || '',\n                    options.port || ''\n                );\n\n                // only copy options if we need to modify it\n                options = shared.assign(false, options);\n                Object.keys(socketOptions).forEach(key => {\n                    options[key] = socketOptions[key];\n                });\n            }\n\n            let connection = new SMTPConnection(options);\n\n            connection.once('error', err => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                connection.close();\n                return callback(err);\n            });\n\n            connection.once('end', () => {\n                if (returned) {\n                    return;\n                }\n\n                let timer = setTimeout(() => {\n                    if (returned) {\n                        return;\n                    }\n                    returned = true;\n                    // still have not returned, this means we have an unexpected connection close\n                    let err = new Error('Unexpected socket close');\n                    if (connection && connection._socket && connection._socket.upgrading) {\n                        // starttls connection errors\n                        err.code = 'ETLS';\n                    }\n                    callback(err);\n                }, 1000);\n\n                try {\n                    timer.unref();\n                } catch (E) {\n                    // Ignore. Happens on envs with non-node timer implementation\n                }\n            });\n\n            let sendMessage = () => {\n                let envelope = mail.message.getEnvelope();\n                let messageId = mail.message.messageId();\n\n                let recipients = [].concat(envelope.to || []);\n                if (recipients.length > 3) {\n                    recipients.push('...and ' + recipients.splice(2).length + ' more');\n                }\n\n                if (mail.data.dsn) {\n                    envelope.dsn = mail.data.dsn;\n                }\n\n                this.logger.info(\n                    {\n                        tnx: 'send',\n                        messageId\n                    },\n                    'Sending message %s to <%s>',\n                    messageId,\n                    recipients.join(', ')\n                );\n\n                connection.send(envelope, mail.message.createReadStream(), (err, info) => {\n                    returned = true;\n                    connection.close();\n                    if (err) {\n                        this.logger.error(\n                            {\n                                err,\n                                tnx: 'send'\n                            },\n                            'Send error for %s: %s',\n                            messageId,\n                            err.message\n                        );\n                        return callback(err);\n                    }\n                    info.envelope = {\n                        from: envelope.from,\n                        to: envelope.to\n                    };\n                    info.messageId = messageId;\n                    try {\n                        return callback(null, info);\n                    } catch (E) {\n                        this.logger.error(\n                            {\n                                err: E,\n                                tnx: 'callback'\n                            },\n                            'Callback error for %s: %s',\n                            messageId,\n                            E.message\n                        );\n                    }\n                });\n            };\n\n            connection.connect(() => {\n                if (returned) {\n                    return;\n                }\n\n                let auth = this.getAuth(mail.data.auth);\n\n                if (auth && (connection.allowsAuth || options.forceAuth)) {\n                    connection.login(auth, err => {\n                        if (auth && auth !== this.auth && auth.oauth2) {\n                            auth.oauth2.removeAllListeners();\n                        }\n                        if (returned) {\n                            return;\n                        }\n\n                        if (err) {\n                            returned = true;\n                            connection.close();\n                            return callback(err);\n                        }\n\n                        sendMessage();\n                    });\n                } else {\n                    sendMessage();\n                }\n            });\n        });\n    }\n\n    /**\n     * Verifies SMTP configuration\n     *\n     * @param {Function} callback Callback function\n     */\n    verify(callback) {\n        let promise;\n\n        if (!callback) {\n            promise = new Promise((resolve, reject) => {\n                callback = shared.callbackPromise(resolve, reject);\n            });\n        }\n\n        this.getSocket(this.options, (err, socketOptions) => {\n            if (err) {\n                return callback(err);\n            }\n\n            let options = this.options;\n            if (socketOptions && socketOptions.connection) {\n                this.logger.info(\n                    {\n                        tnx: 'proxy',\n                        remoteAddress: socketOptions.connection.remoteAddress,\n                        remotePort: socketOptions.connection.remotePort,\n                        destHost: options.host || '',\n                        destPort: options.port || '',\n                        action: 'connected'\n                    },\n                    'Using proxied socket from %s:%s to %s:%s',\n                    socketOptions.connection.remoteAddress,\n                    socketOptions.connection.remotePort,\n                    options.host || '',\n                    options.port || ''\n                );\n\n                options = shared.assign(false, options);\n                Object.keys(socketOptions).forEach(key => {\n                    options[key] = socketOptions[key];\n                });\n            }\n\n            let connection = new SMTPConnection(options);\n            let returned = false;\n\n            connection.once('error', err => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                connection.close();\n                return callback(err);\n            });\n\n            connection.once('end', () => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                return callback(new Error('Connection closed'));\n            });\n\n            let finalize = () => {\n                if (returned) {\n                    return;\n                }\n                returned = true;\n                connection.quit();\n                return callback(null, true);\n            };\n\n            connection.connect(() => {\n                if (returned) {\n                    return;\n                }\n\n                let authData = this.getAuth({});\n\n                if (authData && (connection.allowsAuth || options.forceAuth)) {\n                    connection.login(authData, err => {\n                        if (returned) {\n                            return;\n                        }\n\n                        if (err) {\n                            returned = true;\n                            connection.close();\n                            return callback(err);\n                        }\n\n                        finalize();\n                    });\n                } else {\n                    finalize();\n                }\n            });\n        });\n\n        return promise;\n    }\n\n    /**\n     * Releases resources\n     */\n    close() {\n        if (this.auth && this.auth.oauth2) {\n            this.auth.oauth2.removeAllListeners();\n        }\n        this.emit('close');\n    }\n}\n\n// expose to the world\nmodule.exports = SMTPTransport;\n","'use strict';\n\nconst packageData = require('../../package.json');\nconst shared = require('../shared');\n\n/**\n * Generates a Transport object for streaming\n *\n * Possible options can be the following:\n *\n *  * **buffer** if true, then returns the message as a Buffer object instead of a stream\n *  * **newline** either 'windows' or 'unix'\n *\n * @constructor\n * @param {Object} optional config parameter\n */\nclass StreamTransport {\n    constructor(options) {\n        options = options || {};\n\n        this.options = options || {};\n\n        this.name = 'StreamTransport';\n        this.version = packageData.version;\n\n        this.logger = shared.getLogger(this.options, {\n            component: this.options.component || 'stream-transport'\n        });\n\n        this.winbreak = ['win', 'windows', 'dos', '\\r\\n'].includes((options.newline || '').toString().toLowerCase());\n    }\n\n    /**\n     * Compiles a mailcomposer message and forwards it to handler that sends it\n     *\n     * @param {Object} emailMessage MailComposer object\n     * @param {Function} callback Callback function to run when the sending is completed\n     */\n    send(mail, done) {\n        // We probably need this in the output\n        mail.message.keepBcc = true;\n\n        let envelope = mail.data.envelope || mail.message.getEnvelope();\n        let messageId = mail.message.messageId();\n\n        let recipients = [].concat(envelope.to || []);\n        if (recipients.length > 3) {\n            recipients.push('...and ' + recipients.splice(2).length + ' more');\n        }\n        this.logger.info(\n            {\n                tnx: 'send',\n                messageId\n            },\n            'Sending message %s to <%s> using %s line breaks',\n            messageId,\n            recipients.join(', '),\n            this.winbreak ? '<CR><LF>' : '<LF>'\n        );\n\n        setImmediate(() => {\n            let stream;\n\n            try {\n                stream = mail.message.createReadStream();\n            } catch (E) {\n                this.logger.error(\n                    {\n                        err: E,\n                        tnx: 'send',\n                        messageId\n                    },\n                    'Creating send stream failed for %s. %s',\n                    messageId,\n                    E.message\n                );\n                return done(E);\n            }\n\n            if (!this.options.buffer) {\n                stream.once('error', err => {\n                    this.logger.error(\n                        {\n                            err,\n                            tnx: 'send',\n                            messageId\n                        },\n                        'Failed creating message for %s. %s',\n                        messageId,\n                        err.message\n                    );\n                });\n                return done(null, {\n                    envelope: mail.data.envelope || mail.message.getEnvelope(),\n                    messageId,\n                    message: stream\n                });\n            }\n\n            let chunks = [];\n            let chunklen = 0;\n            stream.on('readable', () => {\n                let chunk;\n                while ((chunk = stream.read()) !== null) {\n                    chunks.push(chunk);\n                    chunklen += chunk.length;\n                }\n            });\n\n            stream.once('error', err => {\n                this.logger.error(\n                    {\n                        err,\n                        tnx: 'send',\n                        messageId\n                    },\n                    'Failed creating message for %s. %s',\n                    messageId,\n                    err.message\n                );\n                return done(err);\n            });\n\n            stream.on('end', () =>\n                done(null, {\n                    envelope: mail.data.envelope || mail.message.getEnvelope(),\n                    messageId,\n                    message: Buffer.concat(chunks, chunklen)\n                })\n            );\n        });\n    }\n}\n\nmodule.exports = StreamTransport;\n","'use strict';\n\nconst services = require('./services.json');\nconst normalized = {};\n\nObject.keys(services).forEach(key => {\n    let service = services[key];\n\n    normalized[normalizeKey(key)] = normalizeService(service);\n\n    [].concat(service.aliases || []).forEach(alias => {\n        normalized[normalizeKey(alias)] = normalizeService(service);\n    });\n\n    [].concat(service.domains || []).forEach(domain => {\n        normalized[normalizeKey(domain)] = normalizeService(service);\n    });\n});\n\nfunction normalizeKey(key) {\n    return key.replace(/[^a-zA-Z0-9.-]/g, '').toLowerCase();\n}\n\nfunction normalizeService(service) {\n    let filter = ['domains', 'aliases'];\n    let response = {};\n\n    Object.keys(service).forEach(key => {\n        if (filter.indexOf(key) < 0) {\n            response[key] = service[key];\n        }\n    });\n\n    return response;\n}\n\n/**\n * Resolves SMTP config for given key. Key can be a name (like 'Gmail'), alias (like 'Google Mail') or\n * an email address (like 'test@googlemail.com').\n *\n * @param {String} key [description]\n * @returns {Object} SMTP config or false if not found\n */\nmodule.exports = function (key) {\n    key = normalizeKey(key.split('@').pop());\n    return normalized[key] || false;\n};\n","'use strict';\n\nconst Stream = require('stream').Stream;\nconst fetch = require('../fetch');\nconst crypto = require('crypto');\nconst shared = require('../shared');\n\n/**\n * XOAUTH2 access_token generator for Gmail.\n * Create client ID for web applications in Google API console to use it.\n * See Offline Access for receiving the needed refreshToken for an user\n * https://developers.google.com/accounts/docs/OAuth2WebServer#offline\n *\n * Usage for generating access tokens with a custom method using provisionCallback:\n * provisionCallback(user, renew, callback)\n *   * user is the username to get the token for\n *   * renew is a boolean that if true indicates that existing token failed and needs to be renewed\n *   * callback is the callback to run with (error, accessToken [, expires])\n *     * accessToken is a string\n *     * expires is an optional expire time in milliseconds\n * If provisionCallback is used, then Nodemailer does not try to attempt generating the token by itself\n *\n * @constructor\n * @param {Object} options Client information for token generation\n * @param {String} options.user User e-mail address\n * @param {String} options.clientId Client ID value\n * @param {String} options.clientSecret Client secret value\n * @param {String} options.refreshToken Refresh token for an user\n * @param {String} options.accessUrl Endpoint for token generation, defaults to 'https://accounts.google.com/o/oauth2/token'\n * @param {String} options.accessToken An existing valid accessToken\n * @param {String} options.privateKey Private key for JSW\n * @param {Number} options.expires Optional Access Token expire time in ms\n * @param {Number} options.timeout Optional TTL for Access Token in seconds\n * @param {Function} options.provisionCallback Function to run when a new access token is required\n */\nclass XOAuth2 extends Stream {\n    constructor(options, logger) {\n        super();\n\n        this.options = options || {};\n\n        if (options && options.serviceClient) {\n            if (!options.privateKey || !options.user) {\n                setImmediate(() => this.emit('error', new Error('Options \"privateKey\" and \"user\" are required for service account!')));\n                return;\n            }\n\n            let serviceRequestTimeout = Math.min(Math.max(Number(this.options.serviceRequestTimeout) || 0, 0), 3600);\n            this.options.serviceRequestTimeout = serviceRequestTimeout || 5 * 60;\n        }\n\n        this.logger = shared.getLogger(\n            {\n                logger\n            },\n            {\n                component: this.options.component || 'OAuth2'\n            }\n        );\n\n        this.provisionCallback = typeof this.options.provisionCallback === 'function' ? this.options.provisionCallback : false;\n\n        this.options.accessUrl = this.options.accessUrl || 'https://accounts.google.com/o/oauth2/token';\n        this.options.customHeaders = this.options.customHeaders || {};\n        this.options.customParams = this.options.customParams || {};\n\n        this.accessToken = this.options.accessToken || false;\n\n        if (this.options.expires && Number(this.options.expires)) {\n            this.expires = this.options.expires;\n        } else {\n            let timeout = Math.max(Number(this.options.timeout) || 0, 0);\n            this.expires = (timeout && Date.now() + timeout * 1000) || 0;\n        }\n    }\n\n    /**\n     * Returns or generates (if previous has expired) a XOAuth2 token\n     *\n     * @param {Boolean} renew If false then use cached access token (if available)\n     * @param {Function} callback Callback function with error object and token string\n     */\n    getToken(renew, callback) {\n        if (!renew && this.accessToken && (!this.expires || this.expires > Date.now())) {\n            return callback(null, this.accessToken);\n        }\n\n        let generateCallback = (...args) => {\n            if (args[0]) {\n                this.logger.error(\n                    {\n                        err: args[0],\n                        tnx: 'OAUTH2',\n                        user: this.options.user,\n                        action: 'renew'\n                    },\n                    'Failed generating new Access Token for %s',\n                    this.options.user\n                );\n            } else {\n                this.logger.info(\n                    {\n                        tnx: 'OAUTH2',\n                        user: this.options.user,\n                        action: 'renew'\n                    },\n                    'Generated new Access Token for %s',\n                    this.options.user\n                );\n            }\n            callback(...args);\n        };\n\n        if (this.provisionCallback) {\n            this.provisionCallback(this.options.user, !!renew, (err, accessToken, expires) => {\n                if (!err && accessToken) {\n                    this.accessToken = accessToken;\n                    this.expires = expires || 0;\n                }\n                generateCallback(err, accessToken);\n            });\n        } else {\n            this.generateToken(generateCallback);\n        }\n    }\n\n    /**\n     * Updates token values\n     *\n     * @param {String} accessToken New access token\n     * @param {Number} timeout Access token lifetime in seconds\n     *\n     * Emits 'token': { user: User email-address, accessToken: the new accessToken, timeout: TTL in seconds}\n     */\n    updateToken(accessToken, timeout) {\n        this.accessToken = accessToken;\n        timeout = Math.max(Number(timeout) || 0, 0);\n        this.expires = (timeout && Date.now() + timeout * 1000) || 0;\n\n        this.emit('token', {\n            user: this.options.user,\n            accessToken: accessToken || '',\n            expires: this.expires\n        });\n    }\n\n    /**\n     * Generates a new XOAuth2 token with the credentials provided at initialization\n     *\n     * @param {Function} callback Callback function with error object and token string\n     */\n    generateToken(callback) {\n        let urlOptions;\n        let loggedUrlOptions;\n        if (this.options.serviceClient) {\n            // service account - https://developers.google.com/identity/protocols/OAuth2ServiceAccount\n            let iat = Math.floor(Date.now() / 1000); // unix time\n            let tokenData = {\n                iss: this.options.serviceClient,\n                scope: this.options.scope || 'https://mail.google.com/',\n                sub: this.options.user,\n                aud: this.options.accessUrl,\n                iat,\n                exp: iat + this.options.serviceRequestTimeout\n            };\n            let token;\n            try {\n                token = this.jwtSignRS256(tokenData);\n            } catch (err) {\n                return callback(new Error('Can\\x27t generate token. Check your auth options'));\n            }\n\n            urlOptions = {\n                grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                assertion: token\n            };\n\n            loggedUrlOptions = {\n                grant_type: 'urn:ietf:params:oauth:grant-type:jwt-bearer',\n                assertion: tokenData\n            };\n        } else {\n            if (!this.options.refreshToken) {\n                return callback(new Error('Can\\x27t create new access token for user'));\n            }\n\n            // web app - https://developers.google.com/identity/protocols/OAuth2WebServer\n            urlOptions = {\n                client_id: this.options.clientId || '',\n                client_secret: this.options.clientSecret || '',\n                refresh_token: this.options.refreshToken,\n                grant_type: 'refresh_token'\n            };\n\n            loggedUrlOptions = {\n                client_id: this.options.clientId || '',\n                client_secret: (this.options.clientSecret || '').substr(0, 6) + '...',\n                refresh_token: (this.options.refreshToken || '').substr(0, 6) + '...',\n                grant_type: 'refresh_token'\n            };\n        }\n\n        Object.keys(this.options.customParams).forEach(key => {\n            urlOptions[key] = this.options.customParams[key];\n            loggedUrlOptions[key] = this.options.customParams[key];\n        });\n\n        this.logger.debug(\n            {\n                tnx: 'OAUTH2',\n                user: this.options.user,\n                action: 'generate'\n            },\n            'Requesting token using: %s',\n            JSON.stringify(loggedUrlOptions)\n        );\n\n        this.postRequest(this.options.accessUrl, urlOptions, this.options, (error, body) => {\n            let data;\n\n            if (error) {\n                return callback(error);\n            }\n\n            try {\n                data = JSON.parse(body.toString());\n            } catch (E) {\n                return callback(E);\n            }\n\n            if (!data || typeof data !== 'object') {\n                this.logger.debug(\n                    {\n                        tnx: 'OAUTH2',\n                        user: this.options.user,\n                        action: 'post'\n                    },\n                    'Response: %s',\n                    (body || '').toString()\n                );\n                return callback(new Error('Invalid authentication response'));\n            }\n\n            let logData = {};\n            Object.keys(data).forEach(key => {\n                if (key !== 'access_token') {\n                    logData[key] = data[key];\n                } else {\n                    logData[key] = (data[key] || '').toString().substr(0, 6) + '...';\n                }\n            });\n\n            this.logger.debug(\n                {\n                    tnx: 'OAUTH2',\n                    user: this.options.user,\n                    action: 'post'\n                },\n                'Response: %s',\n                JSON.stringify(logData)\n            );\n\n            if (data.error) {\n                // Error Response : https://tools.ietf.org/html/rfc6749#section-5.2\n                let errorMessage = data.error;\n                if (data.error_description) {\n                    errorMessage += ': ' + data.error_description;\n                }\n                if (data.error_uri) {\n                    errorMessage += ' (' + data.error_uri + ')';\n                }\n                return callback(new Error(errorMessage));\n            }\n\n            if (data.access_token) {\n                this.updateToken(data.access_token, data.expires_in);\n                return callback(null, this.accessToken);\n            }\n\n            return callback(new Error('No access token'));\n        });\n    }\n\n    /**\n     * Converts an access_token and user id into a base64 encoded XOAuth2 token\n     *\n     * @param {String} [accessToken] Access token string\n     * @return {String} Base64 encoded token for IMAP or SMTP login\n     */\n    buildXOAuth2Token(accessToken) {\n        let authData = ['user=' + (this.options.user || ''), 'auth=Bearer ' + (accessToken || this.accessToken), '', ''];\n        return Buffer.from(authData.join('\\x01'), 'utf-8').toString('base64');\n    }\n\n    /**\n     * Custom POST request handler.\n     * This is only needed to keep paths short in Windows – usually this module\n     * is a dependency of a dependency and if it tries to require something\n     * like the request module the paths get way too long to handle for Windows.\n     * As we do only a simple POST request we do not actually require complicated\n     * logic support (no redirects, no nothing) anyway.\n     *\n     * @param {String} url Url to POST to\n     * @param {String|Buffer} payload Payload to POST\n     * @param {Function} callback Callback function with (err, buff)\n     */\n    postRequest(url, payload, params, callback) {\n        let returned = false;\n\n        let chunks = [];\n        let chunklen = 0;\n\n        let req = fetch(url, {\n            method: 'post',\n            headers: params.customHeaders,\n            body: payload,\n            allowErrorResponse: true\n        });\n\n        req.on('readable', () => {\n            let chunk;\n            while ((chunk = req.read()) !== null) {\n                chunks.push(chunk);\n                chunklen += chunk.length;\n            }\n        });\n\n        req.once('error', err => {\n            if (returned) {\n                return;\n            }\n            returned = true;\n            return callback(err);\n        });\n\n        req.once('end', () => {\n            if (returned) {\n                return;\n            }\n            returned = true;\n            return callback(null, Buffer.concat(chunks, chunklen));\n        });\n    }\n\n    /**\n     * Encodes a buffer or a string into Base64url format\n     *\n     * @param {Buffer|String} data The data to convert\n     * @return {String} The encoded string\n     */\n    toBase64URL(data) {\n        if (typeof data === 'string') {\n            data = Buffer.from(data);\n        }\n\n        return data\n            .toString('base64')\n            .replace(/[=]+/g, '') // remove '='s\n            .replace(/\\+/g, '-') // '+' → '-'\n            .replace(/\\//g, '_'); // '/' → '_'\n    }\n\n    /**\n     * Creates a JSON Web Token signed with RS256 (SHA256 + RSA)\n     *\n     * @param {Object} payload The payload to include in the generated token\n     * @return {String} The generated and signed token\n     */\n    jwtSignRS256(payload) {\n        payload = ['{\"alg\":\"RS256\",\"typ\":\"JWT\"}', JSON.stringify(payload)].map(val => this.toBase64URL(val)).join('.');\n        let signature = crypto.createSign('RSA-SHA256').update(payload).sign(this.options.privateKey);\n        return payload + '.' + this.toBase64URL(signature);\n    }\n}\n\nmodule.exports = XOAuth2;\n","import { InputBoxOptions } from \"vscode\";\r\n\r\n/**\r\n * @description git commit input 输入提交信息的配置对象\r\n */\r\nexport interface CommitInputType extends InputBoxOptions {}\r\nconst commitInputType: CommitInputType = {\r\n  placeHolder: \"请输入提交信息(Input Commit Message)\",\r\n  ignoreFocusOut: true,\r\n  prompt: \"\",\r\n  value: \"\",\r\n};\r\n\r\nexport default commitInputType;\r\n","import { workspace, QuickPickItem } from \"vscode\";\r\n\r\n/**\r\n * @description git commit 提交类型\r\n */\r\nexport interface CommitType extends QuickPickItem {\r\n  icon?: string;\r\n  key?: string;\r\n}\r\n//是否展现 Emoji图标 show Emoji or not\r\nconst isShowEmoji = workspace\r\n  .getConfiguration(\"GitCommitPlugin\")\r\n  .get<boolean>(\"ShowEmoji\");\r\n//新增的自定义commit type add custom Commit Type\r\nconst customCommitType = workspace\r\n  .getConfiguration(\"GitCommitPlugin\")\r\n  .get<boolean>(\"CustomCommitType\");\r\n\r\nlet commitType: Array<CommitType> = [\r\n  { label: \"art\", key: \"art\", detail: \"改进代码的结构/格式\", icon: \"🎨\" },\r\n  { label: \"zap\", key: \"zap\", detail: \"提高性能\", icon: \"⚡️\" },\r\n  { label: \"fire\", key: \"fire\", detail: \"删除代码或文件\", icon: \"🔥\" },\r\n  { label: \"bug\", key: \"bug\", detail: \"修复一个错误\", icon: \"🐛\" },\r\n  {\r\n    label: \"ambulance\",\r\n    key: \"ambulance\",\r\n    detail: \"关键修补程序\",\r\n    icon: \"🚑️\",\r\n  },\r\n  { label: \"sparkles\", key: \"sparkles\", detail: \"介绍新功能\", icon: \"✨\" },\r\n  { label: \"memo\", key: \"memo\", detail: \"添加或更新文档\", icon: \"📝\" },\r\n  { label: \"rocket\", key: \"rocket\", detail: \"部署东西\", icon: \"🚀\" },\r\n  {\r\n    label: \"lipstick\",\r\n    key: \"lipstick\",\r\n    detail: \"添加或更新 UI 和样式文件\",\r\n    icon: \"💄\",\r\n  },\r\n  { label: \"tada\", key: \"tada\", detail: \"开始一个项目\", icon: \"🎉\" },\r\n  {\r\n    label: \"white_check_mark\",\r\n    key: \"white_check_mark\",\r\n    detail: \"添加、更新或通过测试\",\r\n    icon: \"✅\",\r\n  },\r\n  { label: \"lock\", key: \"lock\", detail: \"修复安全问题\", icon: \"🔒️\" },\r\n  { label: \"bookmark\", key: \"bookmark\", detail: \"发布/版本标签\", icon: \"🔖\" },\r\n  {\r\n    label: \"rotating_light\",\r\n    key: \"rotating_light\",\r\n    detail: \"修复编译器/linter 警告\",\r\n    icon: \"🚨\",\r\n  },\r\n  {\r\n    label: \"construction\",\r\n    key: \"construction\",\r\n    detail: \"工作正在进行中\",\r\n    icon: \"🚧\",\r\n  },\r\n  {\r\n    label: \"green_heart\",\r\n    key: \"green_heart\",\r\n    detail: \"修复 CI 构建\",\r\n    icon: \"💚\",\r\n  },\r\n  {\r\n    label: \"arrow_down\",\r\n    key: \"arrow_down\",\r\n    detail: \"降级依赖项\",\r\n    icon: \"⬇️\",\r\n  },\r\n  { label: \"arrow_up\", key: \"arrow_up\", detail: \"升级依赖\", icon: \"⬆️\" },\r\n  {\r\n    label: \"pushpin\",\r\n    key: \"pushpin\",\r\n    detail: \"将依赖项固定到特定版本\",\r\n    icon: \"📌\",\r\n  },\r\n  {\r\n    label: \"construction_worker\",\r\n    key: \"construction_worker\",\r\n    detail: \"添加或更新 CI 构建系统\",\r\n    icon: \"👷\",\r\n  },\r\n  {\r\n    label: \"chart_with_upwards_trend\",\r\n    key: \"chart_with_upwards_trend\",\r\n    detail: \"添加或更新分析或跟踪代码\",\r\n    icon: \"📈\",\r\n  },\r\n  { label: \"recycle\", key: \"recycle\", detail: \"重构代码\", icon: \"♻️\" },\r\n  {\r\n    label: \"heavy_plus_sign\",\r\n    key: \"heavy_plus_sign\",\r\n    detail: \"添加依赖项\",\r\n    icon: \"➕\",\r\n  },\r\n  {\r\n    label: \"heavy_minus_sign\",\r\n    key: \"heavy_minus_sign\",\r\n    detail: \"删除依赖项\",\r\n    icon: \"➖\",\r\n  },\r\n  { label: \"wrench\", key: \"wrench\", detail: \"添加或更新配置文件\", icon: \"🔧\" },\r\n  { label: \"hammer\", key: \"hammer\", detail: \"添加或更新开发脚本\", icon: \"🔨\" },\r\n  {\r\n    label: \"globe_with_meridians\",\r\n    key: \"globe_with_meridians\",\r\n    detail: \"国际化和本地化\",\r\n    icon: \"🌐\",\r\n  },\r\n  { label: \"pencil2\", key: \"pencil2\", detail: \"修正错别字\", icon: \"✏️\" },\r\n  { label: \"poop\", key: \"poop\", detail: \"编写需要改进的糟糕代码\", icon: \"💩\" },\r\n  { label: \"rewind\", key: \"rewind\", detail: \"还原更改\", icon: \"⏪️\" },\r\n  {\r\n    label: \"twisted_rightwards_arrows\",\r\n    key: \"twisted_rightwards_arrows\",\r\n    detail: \"合并分支\",\r\n    icon: \"🔀\",\r\n  },\r\n  {\r\n    label: \"package\",\r\n    key: \"package\",\r\n    detail: \"添加或更新已编译的文件或包\",\r\n    icon: \"📦️\",\r\n  },\r\n  {\r\n    label: \"alien\",\r\n    key: \"alien\",\r\n    detail: \"由于外部 API 更改而更新代码\",\r\n    icon: \"👽️\",\r\n  },\r\n  {\r\n    label: \"truck\",\r\n    key: \"truck\",\r\n    detail: \"移动或重命名资源（例如：文件、路径、路由）\",\r\n    icon: \"🚚\",\r\n  },\r\n  {\r\n    label: \"page_facing_up\",\r\n    key: \"page_facing_up\",\r\n    detail: \"添加或更新许可证\",\r\n    icon: \"📄\",\r\n  },\r\n  { label: \"boom\", key: \"boom\", detail: \"引入重大变化\", icon: \"💥\" },\r\n  { label: \"bento\", key: \"bento\", detail: \"添加或更新资产\", icon: \"🍱\" },\r\n  {\r\n    label: \"wheelchair\",\r\n    key: \"wheelchair\",\r\n    detail: \"提高可访问性\",\r\n    icon: \"♿️\",\r\n  },\r\n  {\r\n    label: \"bulb\",\r\n    key: \"bulb\",\r\n    detail: \"在源代码中添加或更新注释\",\r\n    icon: \"💡\",\r\n  },\r\n  { label: \"beers\", key: \"beers\", detail: \"醉酒写代码\", icon: \"🍻\" },\r\n  {\r\n    label: \"speech_balloon\",\r\n    key: \"speech_balloon\",\r\n    detail: \"添加或更新文本和文字\",\r\n    icon: \"💬\",\r\n  },\r\n  {\r\n    label: \"card_file_box\",\r\n    key: \"card_file_box\",\r\n    detail: \"执行与数据库相关的更改\",\r\n    icon: \"🗃️\",\r\n  },\r\n  {\r\n    label: \"loud_sound\",\r\n    key: \"loud_sound\",\r\n    detail: \"添加或更新日志\",\r\n    icon: \"🔊\",\r\n  },\r\n  { label: \"mute\", key: \"mute\", detail: \"删除日志\", icon: \"🔇\" },\r\n  {\r\n    label: \"busts_in_silhouette\",\r\n    key: \"busts_in_silhouette\",\r\n    detail: \"添加或更新贡献者\",\r\n    icon: \"👥\",\r\n  },\r\n  {\r\n    label: \"children_crossing\",\r\n    key: \"children_crossing\",\r\n    detail: \"改善用户体验/可用性\",\r\n    icon: \"🚸\",\r\n  },\r\n  {\r\n    label: \"building_construction\",\r\n    key: \"building_construction\",\r\n    detail: \"进行架构更改\",\r\n    icon: \"🏗️\",\r\n  },\r\n  { label: \"iphone\", key: \"iphone\", detail: \"从事响应式设计\", icon: \"📱\" },\r\n  {\r\n    label: \"clown_face\",\r\n    key: \"clown_face\",\r\n    detail: \"嘲笑的东西\",\r\n    icon: \"🤡\",\r\n  },\r\n  { label: \"egg\", key: \"egg\", detail: \"添加或更新复活节彩蛋\", icon: \"🥚\" },\r\n  {\r\n    label: \"see_no_evil\",\r\n    key: \"see_no_evil\",\r\n    detail: \"添加或更新 .gitignore 文件\",\r\n    icon: \"🙈\",\r\n  },\r\n  {\r\n    label: \"camera_flash\",\r\n    key: \"camera_flash\",\r\n    detail: \"添加或更新快照\",\r\n    icon: \"📸\",\r\n  },\r\n  { label: \"alembic\", key: \"alembic\", detail: \"进行实验\", icon: \"⚗️\" },\r\n  { label: \"mag\", key: \"mag\", detail: \"改进搜索引擎优化\", icon: \"🔍️\" },\r\n  { label: \"label\", key: \"label\", detail: \"添加或更新类型\", icon: \"🏷️\" },\r\n  {\r\n    label: \"seedling\",\r\n    key: \"seedling\",\r\n    detail: \"添加或更新种子文件\",\r\n    icon: \"🌱\",\r\n  },\r\n  {\r\n    label: \"triangular_flag_on_post\",\r\n    key: \"triangular_flag_on_post\",\r\n    detail: \"添加、更新或删除功能标志\",\r\n    icon: \"🚩\",\r\n  },\r\n  { label: \"goal_net\", key: \"goal_net\", detail: \"捕捉错误\", icon: \"🥅\" },\r\n  { label: \"dizzy\", key: \"dizzy\", detail: \"添加或更新动画和过渡\", icon: \"💫\" },\r\n  {\r\n    label: \"wastebasket\",\r\n    key: \"wastebasket\",\r\n    detail: \"弃用需要清理的代码\",\r\n    icon: \"🗑️\",\r\n  },\r\n  {\r\n    label: \"passport_control\",\r\n    key: \"passport_control\",\r\n    detail: \"处理与授权、角色和权限相关的代码\",\r\n    icon: \"🛂\",\r\n  },\r\n  {\r\n    label: \"adhesive_bandage\",\r\n    key: \"adhesive_bandage\",\r\n    detail: \"对非关键问题的简单修复\",\r\n    icon: \"🩹\",\r\n  },\r\n  {\r\n    label: \"monocle_face\",\r\n    key: \"monocle_face\",\r\n    detail: \"数据探索/检查\",\r\n    icon: \"🧐\",\r\n  },\r\n  { label: \"coffin\", key: \"coffin\", detail: \"删除死代码\", icon: \"⚰️\" },\r\n  {\r\n    label: \"test_tube\",\r\n    key: \"test_tube\",\r\n    detail: \"添加失败的测试\",\r\n    icon: \"🧪\",\r\n  },\r\n  {\r\n    label: \"necktie\",\r\n    key: \"necktie\",\r\n    detail: \"添加或更新业务逻辑\",\r\n    icon: \"👔\",\r\n  },\r\n];\r\n\r\nif (Array.isArray(customCommitType)) {\r\n  customCommitType.forEach((item) => {\r\n    let label = \"\",\r\n      icon = \"\",\r\n      detail = \"\";\r\n    if (typeof item === \"string\") {\r\n      label = detail = item;\r\n    }\r\n    const resultType = {\r\n      label,\r\n      icon,\r\n      detail,\r\n    };\r\n    if (Object.prototype.toString.call(item) === \"[object Object]\") {\r\n      if (Reflect.has(item, \"label\")) {\r\n        resultType.label = item.label;\r\n      } else {\r\n        Reflect.deleteProperty(resultType, \"label\");\r\n      }\r\n      if (Reflect.has(item, \"detail\")) {\r\n        resultType.detail = item.detail;\r\n      } else {\r\n        Reflect.deleteProperty(resultType, \"detail\");\r\n      }\r\n      if (Reflect.has(item, \"icon\")) {\r\n        resultType.icon = item.icon;\r\n      } else {\r\n        Reflect.deleteProperty(resultType, \"icon\");\r\n      }\r\n    }\r\n\r\n    const target = commitType.find(\r\n      (type) =>\r\n        typeof item.key === \"string\" &&\r\n        item.key.length > 0 &&\r\n        type.key === item.key\r\n    );\r\n\r\n    if (target !== undefined) {\r\n      Object.assign(target, resultType);\r\n    } else {\r\n      commitType.unshift(resultType);\r\n    }\r\n  });\r\n}\r\nif (!isShowEmoji) {\r\n  commitType.forEach((commitType) => {\r\n    commitType.icon = \"\";\r\n  });\r\n}\r\n\r\nif (isShowEmoji) {\r\n  commitType.forEach((item) => {\r\n    // If there is an icon display\r\n    if (typeof item.icon === \"string\" && item.icon.length > 0) {\r\n      item.label = `${item.icon} ${item.label}`;\r\n    }\r\n  });\r\n}\r\n\r\nexport default commitType;\r\n","import { lowerFirst } from \"../util/str\";\r\nimport { getCurrentDate } from \"../util/time\";\r\n\r\n// 当前时间\r\nconst date = getCurrentDate(\"-\");\r\n\r\nconst jsxTemplate = [\r\n  \"/**\",\r\n  \"* @file\",\r\n  `* @date ${date}`,\r\n  \"* @author $1\",\r\n  `* @lastModify $1 ${date}`,\r\n  \"*/\",\r\n  \"/* <------------------------------------ **** DEPENDENCE IMPORT START **** ------------------------------------ */\",\r\n  \"/** This section will include all the necessary dependence for this tsx file */\",\r\n  \"import style from './style.scss';\",\r\n  \"/* <------------------------------------ **** DEPENDENCE IMPORT END **** ------------------------------------ */\",\r\n  \"/* <------------------------------------ **** INTERFACE START **** ------------------------------------ */\",\r\n  \"/** This section will include all the interface for this tsx file */\",\r\n  \"/* <------------------------------------ **** INTERFACE END **** ------------------------------------ */\",\r\n  \"/* <------------------------------------ **** FUNCTION COMPONENT START **** ------------------------------------ */\",\r\n  \"const $2 = (): JSX.Element => {\",\r\n  \"/* <------------------------------------ **** STATE START **** ------------------------------------ */\",\r\n  \"/************* This section will include this component HOOK function *************/\",\r\n  \"/* <------------------------------------ **** STATE END **** ------------------------------------ */\",\r\n  \"/* <------------------------------------ **** PARAMETER START **** ------------------------------------ */\",\r\n  \"/************* This section will include this component parameter *************/\",\r\n  \"/* <------------------------------------ **** PARAMETER END **** ------------------------------------ */\",\r\n  \"/* <------------------------------------ **** FUNCTION START **** ------------------------------------ */\",\r\n  \"/************* This section will include this component general function *************/\",\r\n  \"/* <------------------------------------ **** FUNCTION END **** ------------------------------------ */\",\r\n  \"return (\",\r\n  \"<div>\",\r\n  \"</div>\",\r\n  \");\",\r\n  \"};\",\r\n  \"export default $2;\",\r\n  \"/* <------------------------------------ **** FUNCTION COMPONENT END **** ------------------------------------ */\",\r\n];\r\n\r\nexport const getJsxTemplate = (author: string, componentName: string) => {\r\n  return jsxTemplate\r\n    .join(\"\\n\")\r\n    .replace(/\\$1/g, author)\r\n    .replace(/\\$2/g, componentName);\r\n};\r\n\r\nconst jsxAlertTemplate = [\r\n  \"/**\",\r\n  \"* @file\",\r\n  `* @date ${date}`,\r\n  \"* @author $1\",\r\n  `* @lastModify $1 ${date}`,\r\n  \"*/\",\r\n  \"/* <------------------------------------ **** DEPENDENCE IMPORT START **** ------------------------------------ */\",\r\n  \"/** This section will include all the necessary dependence for this tsx file */\",\r\n  \"import style from './style.scss';\",\r\n  \"import { Button } from '@datareachable/dr_front_componentlibrary';\",\r\n  \"/* <------------------------------------ **** DEPENDENCE IMPORT END **** ------------------------------------ */\",\r\n  \"/* <------------------------------------ **** INTERFACE START **** ------------------------------------ */\",\r\n  \"/** This section will include all the interface for this tsx file */\",\r\n  \"interface $2Props {\",\r\n  \"    handleCancel?: () => void;\",\r\n  \"}\",\r\n  \"/* <------------------------------------ **** INTERFACE END **** ------------------------------------ */\",\r\n  \"/* <------------------------------------ **** FUNCTION COMPONENT START **** ------------------------------------ */\",\r\n  \"const $2: React.FC<$2Props> = ({ handleCancel }): JSX.Element =>  {\",\r\n  \"/* <------------------------------------ **** STATE START **** ------------------------------------ */\",\r\n  \"/************* This section will include this component HOOK function *************/\",\r\n  \"/* <------------------------------------ **** STATE END **** ------------------------------------ */\",\r\n  \"/* <------------------------------------ **** PARAMETER START **** ------------------------------------ */\",\r\n  \"/************* This section will include this component parameter *************/\",\r\n  \"/* <------------------------------------ **** PARAMETER END **** ------------------------------------ */\",\r\n  \"/* <------------------------------------ **** FUNCTION START **** ------------------------------------ */\",\r\n  \"/************* This section will include this component general function *************/\",\r\n  \"/** confirm */\",\r\n  \"const handleConfirm = () => {\",\r\n  \"    //\",\r\n  \"};\",\r\n  \"/* <------------------------------------ **** FUNCTION END **** ------------------------------------ */\",\r\n  \"return (\",\r\n  \"      <div className={style.$3_container}>\",\r\n  \"         <div className={style.$3_title}>Title</div>\",\r\n  \"         <div className={style.$3_btn}>\",\r\n  \"             <Button\",\r\n  \"                 height='3.2rem'\",\r\n  \"                 label='Cancel'\",\r\n  \"                 size='big'\",\r\n  \"                 type='primary'\",\r\n  \"                 width='9.5rem'\",\r\n  \"                 onClick={handleCancel}\",\r\n  \"             />\",\r\n  \"             <Button\",\r\n  \"                 height='3.2rem'\",\r\n  \"                 label='Confirm'\",\r\n  \"                 size='small'\",\r\n  \"                 type='primary'\",\r\n  \"                 width='9.5rem'\",\r\n  \"                 onClick={handleConfirm}\",\r\n  \"             />\",\r\n  \"         </div>\",\r\n  \"     </div>\",\r\n  \" );\",\r\n  \"};\",\r\n  \"export default $2;\",\r\n  \"/* <------------------------------------ **** FUNCTION COMPONENT END **** ------------------------------------ */\",\r\n];\r\n\r\nexport const getJsxAlertTemplate = (author: string, componentName: string) => {\r\n  return jsxAlertTemplate\r\n    .join(\"\\n\")\r\n    .replace(/\\$1/g, author)\r\n    .replace(/\\$2/g, componentName)\r\n    .replace(/\\$3/g, lowerFirst(componentName));\r\n};\r\n","import { lowerFirst } from \"../util/str\";\r\nimport { getCurrentDate } from \"../util/time\";\r\n\r\n// 当前时间\r\nconst date = getCurrentDate(\"-\");\r\n\r\nconst scssTemplate = [\r\n  \"/**\",\r\n  \"* @file\",\r\n  `* @date ${date}`,\r\n  \"* @author $1\",\r\n  `* @lastModify $1 ${date}`,\r\n  \"*/\",\r\n  \"/* <------------------------------------ **** CONSTANT IMPORT START **** ------------------------------------ */\",\r\n  \"/** Import all the reference constant after this line */\",\r\n  \"@import '~/Constant/breakPoint.scss';\",\r\n  \"@import '~/Constant/font.scss';\",\r\n  \"@import '~/Constant/color.scss';\",\r\n  \"/* <------------------------------------ **** CONSTANT IMPORT END **** ------------------------------------ */\",\r\n  \"/* <------------------------------------ **** SECTION1 MIXIN START **** ------------------------------------ */\",\r\n  \"/** The demo mixin is ..........*/\",\r\n  \"@mixin demo {}\",\r\n  \"/* <------------------------------------ **** SECTION1 MIXIN END **** ------------------------------------ */\",\r\n  \"/* <--------------------------- * SECTION1 * --------------------------- */\",\r\n  \"/* <--------------------------- * SECTION1 * --------------------------- */\",\r\n];\r\n\r\nexport const getScssTemplate = (author: string) => {\r\n  return scssTemplate.join(\"\\n\").replace(/\\$1/g, author);\r\n};\r\n\r\nconst scssAlertTemplate = [\r\n  \"/**\",\r\n  \"* @file\",\r\n  `* @date ${date}`,\r\n  \"* @author $1\",\r\n  `* @lastModify $1 ${date}`,\r\n  \"*/\",\r\n  \"/* <------------------------------------ **** CONSTANT IMPORT START **** ------------------------------------ */\",\r\n  \"/** Import all the reference constant after this line */\",\r\n  \"@import '~/Constant/breakPoint.scss';\",\r\n  \"@import '~/Constant/font.scss';\",\r\n  \"@import '~/Constant/color.scss';\",\r\n  \"/* <------------------------------------ **** CONSTANT IMPORT END **** ------------------------------------ */\",\r\n  \"/* <------------------------------------ **** SECTION1 MIXIN START **** ------------------------------------ */\",\r\n  \"/** The demo mixin is ..........*/\",\r\n  \"@mixin demo {}\",\r\n  \"/* <------------------------------------ **** SECTION1 MIXIN END **** ------------------------------------ */\",\r\n  \"/* <--------------------------- * SECTION1 * --------------------------- */\",\r\n  \".$2_container {\",\r\n  \"  position: relative;\",\r\n  \"  padding: 3.2rem 2.4rem;\",\r\n  \"  width: 42rem;\",\r\n  \"  height: 25.2rem;\",\r\n  \"}\",\r\n  \".$2_title {\",\r\n  \"    @include h_2();\",\r\n  \"    color: $neutral_700;\",\r\n  \"}\",\r\n  \".$2_btn {\",\r\n  \"    position: absolute;\",\r\n  \"    bottom: 1.6rem;\",\r\n  \"    right: 2.4rem;\",\r\n  \"    button {\",\r\n  \"        &:nth-of-type(1) {\",\r\n  \"            color: $primary_600 !important;\",\r\n  \"        }\",\r\n  \"        &:nth-of-type(2) {\",\r\n  \"            background: $primary_600;\",\r\n  \"            box-shadow: 0px 2px 6px rgba(26, 26, 26, 0.06), 0px 3px 15px rgba(26, 26, 26, 0.1);\",\r\n  \"            border-radius: 0.6rem;\",\r\n  \"        }\",\r\n  \"    }\",\r\n  \"}\",\r\n  \"/* <--------------------------- * SECTION1 * --------------------------- */\",\r\n];\r\nexport const getScssAlertTemplate = (author: string, componentName: string) => {\r\n  return scssAlertTemplate\r\n    .join(\"\\n\")\r\n    .replace(/\\$1/g, author)\r\n    .replace(/\\$2/g, lowerFirst(componentName));\r\n};\r\n","import * as vscode from \"vscode\";\r\nimport * as fs from \"fs\";\r\n/**\r\n * 保存文件\r\n */\r\nconst saveFile = (path: string, fileName: string, content: string) => {\r\n  fs.writeFile(`${path}/${fileName}`, content, function (err) {\r\n    if (err) {\r\n      vscode.window.showInformationMessage(`创建${fileName}失败`);\r\n      return;\r\n    }\r\n    vscode.window.showInformationMessage(\"创建成功\");\r\n  });\r\n};\r\n/**\r\n * 获取文件数据\r\n */\r\nconst getText = (path: string): string => {\r\n  const text = fs.readFileSync(path, { encoding: \"utf-8\" });\r\n  return text;\r\n};\r\nexport { saveFile, getText };\r\n","import * as vscode from \"vscode\";\r\nimport * as nodemailer from \"nodemailer\";\r\n\r\n// 读取配置文件\r\nconst configuration = vscode.workspace.getConfiguration();\r\n\r\n// email type\r\ntype EmailType = {\r\n  host: string;\r\n  port: number;\r\n  auth: {\r\n    user: string;\r\n    pass: string;\r\n  };\r\n  to: string;\r\n  subject: string;\r\n};\r\n\r\nfunction emailTo(html: string) {\r\n  const emailConfig = configuration.get(\"emailConfig\") as EmailType;\r\n  const transporter = nodemailer.createTransport(emailConfig);\r\n\r\n  // 发送者\r\n  const from = emailConfig.auth.user;\r\n  // 接受者，主题\r\n  const { to, subject } = emailConfig;\r\n  var mailOptions = { from, subject, to, html };\r\n  try {\r\n    transporter.sendMail(mailOptions, function (err) {\r\n      if (err) {\r\n        vscode.window.showInformationMessage(`发送失败`);\r\n        return;\r\n      }\r\n      vscode.window.showInformationMessage(`发送成功`);\r\n    });\r\n  } catch (err) {\r\n    vscode.window.showInformationMessage(`发送失败`);\r\n  }\r\n}\r\n\r\nconst sendEmail = (html: string) => {\r\n  emailTo(html);\r\n};\r\n\r\nexport default sendEmail;\r\n","/**\r\n * 首字母转小写\r\n */\r\nconst lowerFirst = (str: string) => {\r\n  const arr = str.split(\"\");\r\n  arr[0] = arr[0].toLocaleLowerCase();\r\n  return arr.join(\"\");\r\n};\r\n\r\nexport { lowerFirst };\r\n","/**\r\n * 补零\r\n * @param n number\r\n * @returns\r\n */\r\nconst fillZero = function (n: number) {\r\n  return n < 10 ? `0${n}` : n;\r\n};\r\n\r\n/**\r\n * 获取当前的时间\r\n * @returns 2021-12-12\r\n */\r\nconst getCurrentDate = function (separate: string) {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const month = fillZero(date.getMonth() + 1);\r\n  const day = fillZero(date.getDate());\r\n\r\n  return [year, month, day].join(separate);\r\n};\r\n\r\nexport { getCurrentDate };\r\n","module.exports = require(\"vscode\");","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"dns\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"punycode\");","module.exports = require(\"stream\");","module.exports = require(\"tls\");","module.exports = require(\"url\");","module.exports = require(\"util\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as vscode from \"vscode\";\r\nimport * as fs from \"fs\";\r\nimport { getScssAlertTemplate, getScssTemplate } from \"./config/scss-template\";\r\nimport { getJsxAlertTemplate, getJsxTemplate } from \"./config/jsx-template\";\r\nimport { getText, saveFile } from \"./util/file\";\r\nimport CommitInputType from \"./config/commit-input\";\r\nimport { QuickPickOptions } from \"vscode\";\r\nimport { getCurrentDate } from \"./util/time\";\r\nimport { GitExtension } from \"./types/git\";\r\nimport CommitType from \"./config/commit-type\";\r\nimport sendEmail from \"./util/sendEmail\";\r\nexport interface GitMessage {\r\n  icon: string;\r\n  type: string;\r\n  message: string;\r\n}\r\nexport function activate(context: vscode.ExtensionContext) {\r\n  //提交信息配置\r\n  const messageConfig: GitMessage = {\r\n    icon: \"\",\r\n    type: \"\",\r\n    message: \"\",\r\n  };\r\n\r\n  //选择器\r\n  const commitDetailQuickPickOptions: QuickPickOptions = {\r\n    matchOnDescription: true,\r\n    matchOnDetail: true,\r\n    ignoreFocusOut: true,\r\n  };\r\n  //获取是否在git扩展内 Gets whether it is in the git extension\r\n  function getGitExtension() {\r\n    const vscodeGit =\r\n      vscode.extensions.getExtension<GitExtension>(\"vscode.git\");\r\n    const gitExtension = vscodeGit && vscodeGit.exports;\r\n    return gitExtension;\r\n  }\r\n  const gitExtension = getGitExtension();\r\n\r\n  if (!gitExtension?.enabled) {\r\n    vscode.window.showErrorMessage(\r\n      \"Git extensions are not currently enabled, please try again after enabled!\"\r\n    );\r\n    return false;\r\n  }\r\n  //获取当前的 git仓库实例 Get git repo instance\r\n  let repo: any = gitExtension.getAPI(1).repositories[0];\r\n\r\n  // 创建普通组件\r\n  context.subscriptions.push(\r\n    vscode.commands.registerCommand(\"extension.addComponents\", (uri) => {\r\n      const length = uri.path.length;\r\n      const path = uri.path.slice(1, length).replace(/\\//g, \"\\\\\");\r\n      const pathArray = path.split(\"\\\\\");\r\n      const componentName = pathArray[pathArray.length - 1];\r\n\r\n      // 获取用户名\r\n      const configuration = vscode.workspace.getConfiguration();\r\n      const author = configuration.get(\"author_name\", \"admin\");\r\n\r\n      // 写入文件\r\n      saveFile(path, \"index.tsx\", getJsxTemplate(author, componentName));\r\n      saveFile(path, \"style.scss\", getScssTemplate(author));\r\n    })\r\n  );\r\n\r\n  // 创建Alert组件\r\n  context.subscriptions.push(\r\n    vscode.commands.registerCommand(\"extension.addAlert\", (uri) => {\r\n      const length = uri.path.length;\r\n      const path = uri.path.slice(1, length).replace(/\\//g, \"\\\\\");\r\n      const pathArray = path.split(\"\\\\\");\r\n      const componentName = pathArray[pathArray.length - 1];\r\n\r\n      // 获取用户名\r\n      const configuration = vscode.workspace.getConfiguration();\r\n      const author = configuration.get(\"author_name\", \"admin\");\r\n\r\n      // 写入文件\r\n      saveFile(path, \"index.tsx\", getJsxAlertTemplate(author, componentName));\r\n      saveFile(path, \"style.scss\", getScssAlertTemplate(author, componentName));\r\n    })\r\n  );\r\n\r\n  // 生成内容\r\n  const generaGit = () => {\r\n    vscode.commands.executeCommand(\"workbench.view.scm\");\r\n    repo.inputBox.value = `${messageConfig.icon} ${\r\n      messageConfig.message\r\n    } ${getCurrentDate(\"/\")}`;\r\n  };\r\n  // 输入提交的内容\r\n  const recurInputMessage = () => {\r\n    vscode.window.showInputBox(CommitInputType).then((value) => {\r\n      messageConfig.message = value ?? \"\";\r\n      generaGit();\r\n    });\r\n  };\r\n  // git 提交\r\n  context.subscriptions.push;\r\n  vscode.commands.registerCommand(\"extension.showGitCommit\", (uri?) => {\r\n    if (uri) {\r\n      //如果有多个repo 寻找当前的 进行填充 If there are multiple repos looking for the current to populate\r\n      repo = gitExtension.getAPI(1).repositories.find((repo) => {\r\n        return repo.rootUri.path === uri._rootUri.path;\r\n      });\r\n    }\r\n    commitDetailQuickPickOptions.placeHolder =\r\n      \"搜索 Git 提交类型(Search Commit Type)\";\r\n\r\n    vscode.window\r\n      .showQuickPick(CommitType, commitDetailQuickPickOptions)\r\n      .then((select) => {\r\n        let label = (select && select.label) || \"\";\r\n        const icon = (select && select.icon) || \"\";\r\n        if (typeof icon === \"string\" && icon.length > 0) {\r\n          label = label.split(\" \")[1];\r\n        }\r\n        messageConfig.type = label;\r\n        messageConfig.icon = icon;\r\n        if (label !== \"\") {\r\n          recurInputMessage();\r\n        }\r\n      });\r\n  });\r\n\r\n  // 发送邮件\r\n  context.subscriptions.push(\r\n    vscode.commands.registerCommand(\"extension.sendEmail\", (uri) => {\r\n      const length = uri.path.length;\r\n      const path = uri.path.slice(1, length).replace(/\\//g, \"\\\\\");\r\n      const html = getText(path);\r\n      sendEmail(html);\r\n    })\r\n  );\r\n\r\n  // scss提示\r\n  context.subscriptions.push(\r\n    vscode.languages.registerCompletionItemProvider(\"scss\", {\r\n      provideCompletionItems(document, position) {\r\n        // 获取项目路径\r\n        const length = document.uri.path.length;\r\n        const _path = document.uri.path.slice(1, length).replace(/\\//g, \"\\\\\");\r\n        let constantPath = \"\";\r\n        const match = _path.match(/(\\S*)src/);\r\n        if (!match) {\r\n          return [];\r\n        }\r\n        constantPath = match[0] + \"\\\\Constant\";\r\n        // 处理color\r\n        const colorFile = fs.readFileSync(`${constantPath}\\\\color.scss`, {\r\n          encoding: \"utf-8\",\r\n        });\r\n        const arr: Array<vscode.CompletionItem> = [];\r\n        let colorStr = colorFile.replace(\r\n          /(\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\/)|(\\/\\/.*)/g,\r\n          \"\"\r\n        );\r\n        const colorArray = colorStr.replace(/\\r\\n/g, \"\").split(\";\");\r\n        colorArray.map((item) => {\r\n          if (item.includes(\"$shadow\")) {\r\n            const completionItem = new vscode.CompletionItem(\r\n              `box-shadow: ${item.split(\":\")[0]}`\r\n            );\r\n            arr.push(completionItem);\r\n          } else {\r\n            const completionItem = new vscode.CompletionItem(\r\n              `color: ${item.split(\":\")[0]}`\r\n            );\r\n            arr.push(completionItem);\r\n          }\r\n        });\r\n        // 处理font\r\n        const fontFile = fs.readFileSync(`${constantPath}\\\\font.scss`, {\r\n          encoding: \"utf-8\",\r\n        });\r\n\r\n        let fontStr = fontFile\r\n          .replace(\r\n            /(\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*+\\/)|(\\/\\/.*)/g,\r\n            \"\"\r\n          )\r\n          .replace(/\\r\\n/g, \"\");\r\n        const fontArray = fontStr.split(\";\");\r\n        fontArray.map((item) => {\r\n          if (item.includes(\"$fs\")) {\r\n            const completionItem = new vscode.CompletionItem(\r\n              `font: ${item.split(\":\")[0]}`\r\n            );\r\n            arr.push(completionItem);\r\n          }\r\n          if (item.includes(\"@mixin\")) {\r\n            const newItem = item.replace(/\\}/g, \"\").replace(/@mixin/, \"\");\r\n            const completionItem = new vscode.CompletionItem(\r\n              `@include ${newItem.split(\"{\")[0].trim()}()`\r\n            );\r\n            arr.push(completionItem);\r\n          }\r\n        });\r\n        return arr;\r\n      },\r\n    })\r\n  );\r\n}\r\n"],"names":["Tokenizer","constructor","str","this","toString","operatorCurrent","operatorExpecting","node","escaped","list","operators","tokenize","chr","i","len","length","charAt","checkChar","forEach","value","trim","push","type","includes","charCodeAt","module","exports","addressparser","options","tokens","addresses","address","parsedAddresses","token","isGroup","state","data","comment","group","text","replace","join","name","match","splice","_regexHandler","concat","_handleAddress","flatten","walkAddressList","Transform","encode","buffer","Buffer","from","wrap","lineLength","result","pos","chunkLength","wrappedLines","substr","RegExp","Encoder","super","_curLine","_remainingBytes","inputBytes","outputBytes","_transform","chunk","encoding","done","setImmediate","slice","b64","lastLF","lastIndexOf","_flush","MessageParser","RelaxedBody","sign","PassThrough","fs","path","crypto","DKIMSigner","keys","input","output","cacheTreshold","Number","hashAlgo","cacheDir","chunks","chunklen","readPos","cachePath","Date","now","randomBytes","cache","headers","bodyHash","parser","relaxedBody","usingCache","errored","on","err","cleanup","emit","unlink","createReadCache","createReadStream","once","pipe","sendNextChunk","end","write","sendSignedOutput","keyPos","signNextKey","rawHeaders","key","dkimField","domainName","keySelector","privateKey","headerFieldNames","skipFields","createWriteCache","createWriteStream","unpipe","read","removeAllListeners","signStream","extraOptions","inputStream","writeValue","isBuffer","Object","signer","lastBytes","alloc","headersParsed","headerBytes","headerChunks","bodySize","updateLastBytes","lblen","nblen","Math","min","checkHeaders","headerPos","curLinePos","pr1","pr2","parseHeaders","callback","headersFound","E","lines","split","test","filter","line","map","indexOf","toLowerCase","chunkBuffer","chunkBufferLen","createHash","remainder","byteLength","debug","_debugBody","updateHash","bodyStr","nextRemainder","c","needsFixing","update","digest","punycode","mimeFuncs","relaxedHeaders","fieldNames","includedFields","Set","skip","headerFields","Map","field","add","has","set","relaxedHeaderLine","headersList","fields","get","signature","canonicalizedHeaderData","dkimHeader","dkim","toASCII","foldLines","generateDKIMHeader","createSign","toUpperCase","urllib","cookies","cookieStr","url","domain","urlparts","parse","cookie","hostname","getPath","pathname","expires","sessionTimeout","isExpired","unshift","cookiePart","valueParts","shift","secure","httponly","protocol","compare","a","b","pop","http","https","zlib","Cookies","packageData","fetch","fetchRes","redirects","maxRedirects","isNaN","body","req","parsed","method","finished","handler","version","userAgent","auth","Authorization","contentType","sourceUrl","encodeURIComponent","reqOptions","host","port","rejectUnauthorized","agent","tls","request","timeout","setTimeout","abort","Error","res","inflate","createUnzip","statusCode","location","resolve","allowErrorResponse","shared","logger","getLogger","component","send","mail","message","keepBcc","envelope","getEnvelope","messageId","recipients","to","info","tnx","normalize","error","normalizedHeaders","skipEncoding","JSON","stringify","MimeNode","compile","_alternatives","getAlternatives","_htmlNode","alternative","_attachments","getAttachments","_useRelated","related","_useAlternative","_useMixed","attached","raw","newline","setRaw","_createMixed","_createAlternative","_createRelated","_createContentNode","content","addHeader","header","o","setHeader","setEnvelope","findRelated","icalEvent","eventObject","attachments","attachment","isMessageNode","href","_processDataUrl","detectMimeType","filename","contentDisposition","contentTransferEncoding","detectExtension","undefined","cid","httpHeaders","html","watchHtml","amp","alternatives","_resolve","parentNode","createChild","disableUrlAccess","disableFileAccess","normalizeHeaderKey","baseBoundary","textEncoding","boundaryPrefix","element","setContent","parts","decodeURIComponent","item","EventEmitter","mimeTypes","MailComposer","DKIM","httpProxyClient","util","MailMessage","net","dns","transporter","defaults","_defaults","_defaultPlugins","args","_convertDataImages","stream","_userPlugins","meta","mailer","getVersionString","log","getSocket","warn","methodName","proxy","setupProxy","use","step","plugin","hasOwnProperty","sendMail","promise","Promise","reject","callbackPromise","action","_processPlugins","setMailerHeader","setPriorityHeaders","setListHeaders","processFunc","dkimDomains","_dkim","format","homepage","userPlugins","defaultPlugins","pluginCount","block","processPlugins","curplugins","proxyUrl","socket","connection","connect","ipaddress","proxyV2","SocksClient","socksClient","proxyType","connectionOpts","command","username","password","userId","userid","authentication","createConnection","isIP","Array","isArray","attachDataUrls","resolveContent","cidCounter","prefix","dataUri","mimeType","resolveAll","mimeNode","_parseAddresses","getHeader","resolveNext","_encodeHeaderValue","_getListHeaders","entry","val","references","inReplyTo","xMailer","priority","listHeader","listData","prepared","isPlainText","encodeWord","_formatListUrl","base64","qp","isParam","hasLongerLines","mimeWordEncoding","maxLength","encodedStr","toCharset","ord","max","splitMimeEncodedString","lpart","encodeWords","encodeAll","encodedValue","firstMatch","lastMatch","startIndex","index","endIndex","substring","buildHeaderValue","structured","paramsArray","params","param","buildHeaderParam","encodedParam","encodedStrArr","startPos","encoded","safeEncodeURIComponent","parseHeaderValue","response","quote","actualKey","nr","charset","values","s","extension","afterSpace","maxlen","curLine","parseInt","encodeURICharComponent","defaultMimeType","extensions","ext","rootType","subType","os","LastNewline","LeWindows","LeUnix","nodeCounter","date","rootNode","childNodes","_nodeId","_headers","_isPlainText","_hasLongLines","_envelope","_raw","_transforms","_processFuncs","appendChild","childNode","remove","headerValue","added","_normalizeHeaderKey","_contentErrorHandler","removeListener","build","buf","buflen","returned","getTransferEncoding","transferEncoding","_getTextEncoding","buildHeaders","toUTCString","_handleContentType","_encodeWords","normalized","transform","outputStream","newlineTransform","contentStream","localStream","finalize","childId","processChildNode","boundary","child","multipart","prototype","call","_getStream","createStream","sourceStream","_resolvedValue","_convertAddresses","standardFields","getAddresses","_generateMessageId","apply","_normalizeAddress","_generateBoundary","elm","uniqueList","_encodeAddressName","groupListAddresses","lastAt","encodedDomain","user","latinLen","nonLatinLen","reduce","prev","lastByte","lastPos","Mailer","SMTPPool","SMTPTransport","SendmailTransport","StreamTransport","JSONTransport","SESTransport","ETHEREAL_API","process","env","ETHEREAL_WEB","ETHEREAL_CACHE","testAccount","createTransport","urlConfig","parseConnectionUrl","pool","sendmail","streamTransport","jsonTransport","SES","createTestAccount","apiUrl","requestor","status","getTestMessageUrl","infoProps","m","props","web","ranges","checkRanges","String","fromCharCode","code","lineMargin","floor","lineBreak","lastLine","spawn","_spawn","winbreak","some","addr","stdin","kill","ses","maxConnections","Infinity","connections","sendingRate","sendingRateTTL","rateInterval","rateMessages","pending","idling","_checkSendingRate","_send","_sent","_checkRatedQueue","next","clearTimeout","oldest","ts","delay","unref","isIdle","statObject","getRawMessage","sesMessage","RawMessage","Data","Source","Destinations","aws","cb","region","sendPromise","SendRawEmailCommand","sendRawEmail","then","MessageId","catch","config","verify","Code","DNS_TTL","networkInterfaces","resolver","family","acc","internal","NODATA","NOTFOUND","NOTIMP","SERVFAIL","CONNREFUSED","dnsCache","formatDNSValue","extra","assign","servername","random","resolveStream","responded","resolveHostname","cached","lookup","direct","pass","query","obj","lKey","_logFunc","level","levels","levelMaxLen","levelNames","levelName","repeat","print","sid","console","toISOString","bind","createDefaultLogger","arguments","target","source","subKey","encodeXText","inByteCount","outByteCount","destinationPort","destinationHost","tempSocketErr","destroy","reqHeaders","Host","Connection","onSocketData","packageInfo","DataStream","SOCKET_TIMEOUT","id","stage","secureConnection","alreadySecured","secured","_getHostname","customAuth","mapKey","authenticated","destroyed","_remainder","_responseQueue","lastServerResponse","_socket","_supportedAuth","allowsAuth","_supportedExtensions","_maxAllowedSize","_responseActions","_recipientQueue","_greetingTimeout","_connectionTimeout","_destroyed","_closing","_onSocketData","_onData","_onSocketError","_onError","_onSocketClose","_onClose","_onSocketEnd","_onEnd","_onSocketTimeout","_onTimeout","connectCallback","isDestroyedMessage","_isDestroyedMessage","_formatError","opts","localAddress","setupConnectionHandlers","connectionTimeout","_upgradeConnection","_onConnect","resolved","setKeepAlive","quit","_sendCommand","close","closeMethod","_destroy","login","authData","_auth","_authMethod","oauth2","credentials","_handleXOauth2Token","_actionAUTH_LOGIN_USER","_actionAUTHComplete","_actionAUTH_CRAM_MD5","lastResponse","handlerResponse","authMethods","maxAllowedSize","sendCommand","cmd","codes","size","startTime","_setEnvelope","envelopeTime","_createSendStream","messageTime","messageSize","reset","localPort","remoteAddress","remotePort","socketTimeout","_actionGreeting","greetingTimeout","resume","lastline","_processResponse","responseCode","upgrading","socketPlain","transactionLog","logStr","useSmtpUtf8","rcptQueue","rejected","rejectedErrors","accepted","dsn","_setDsnEnvelope","_actionMAIL","_usingSmtpUtf8","use8BitMime","_using8BitMime","ret","envid","return","notify","n","validNotify","orcpt","recipient","_getDsnRcptToArgs","logStream","dataStream","lmtp","final","_actionLMTPStream","_actionSMTPStream","_actionLHLO","_actionEHLO","requireTLS","_actionHELO","ignoreTLS","_actionSTARTTLS","opportunisticTLS","_actionAUTH_LOGIN_PASS","challengeMatch","challengeString","base64decoded","hmacMD5","createHmac","prepended","_actionAUTH_CRAM_MD5_PASS","isRetry","curRecipient","_actionRCPT","_actionDATA","getToken","accessToken","buildXOAuth2Token","writable","defaultHostname","PoolResource","SMTPConnection","wellKnown","urlData","service","maxMessages","_rateLimit","counter","waiting","checkpoint","delta","rateDelta","limit","rateLimit","_closed","_queue","_connections","_connectionCounter","requeueAttempts","_processMessages","available","invokeCallbacks","_createConnection","queueEntry","messages","_removeConnection","_continueProcessing","_shouldRequeuOnConnectionClose","_requeueEntryOnConnectionClose","_failDeliveryOnConnectionClose","maxRequeues","_checkRateLimit","_clearRateLimit","socketOptions","destHost","destPort","forceAuth","XOAuth2","provisionCallback","authMethod","_connection","_connected","timer","getAuth","authOpts","hasAuth","sendMessage","services","normalizeKey","normalizeService","aliases","alias","domains","Stream","serviceClient","serviceRequestTimeout","accessUrl","customHeaders","customParams","renew","generateCallback","generateToken","updateToken","urlOptions","loggedUrlOptions","iat","tokenData","iss","scope","sub","aud","exp","jwtSignRS256","grant_type","assertion","refreshToken","client_id","clientId","client_secret","clientSecret","refresh_token","postRequest","logData","errorMessage","error_description","error_uri","access_token","expires_in","payload","toBase64URL","placeHolder","ignoreFocusOut","prompt","isShowEmoji","workspace","getConfiguration","customCommitType","commitType","label","detail","icon","resultType","Reflect","deleteProperty","find","getCurrentDate","jsxTemplate","getJsxTemplate","author","componentName","jsxAlertTemplate","getJsxAlertTemplate","lowerFirst","scssTemplate","getScssTemplate","scssAlertTemplate","getScssAlertTemplate","saveFile","fileName","writeFile","vscode","window","showInformationMessage","getText","readFileSync","configuration","emailConfig","nodemailer","subject","mailOptions","emailTo","arr","toLocaleLowerCase","fillZero","separate","getFullYear","getMonth","getDate","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","context","messageConfig","commitDetailQuickPickOptions","matchOnDescription","matchOnDetail","gitExtension","vscodeGit","getExtension","getGitExtension","enabled","showErrorMessage","repo","getAPI","repositories","subscriptions","commands","registerCommand","uri","pathArray","rootUri","_rootUri","showQuickPick","select","showInputBox","executeCommand","inputBox","languages","registerCompletionItemProvider","provideCompletionItems","document","position","constantPath","colorFile","completionItem","CompletionItem","newItem"],"sourceRoot":""}